{"ast":null,"code":"var _jsxFileName = \"/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/Confirmation/Confirmation.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { AppContext } from '../Context';\nimport { map, without, filter } from 'lodash';\nimport { Form, Input, Button, Select, message, Typography, AutoComplete, Row, Col, Checkbox, Progress } from 'antd';\nimport styled from 'styled-components';\nimport { CheckOutlined, RollbackOutlined } from '@ant-design/icons';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nconst formItemLayout = {\n  labelCol: {\n    sm: {\n      span: 8\n    }\n  }\n};\nconst {\n  TextArea\n} = Input;\nconst {\n  Title\n} = Typography;\nconst {\n  Option\n} = Select;\nconst AppLayout = styled.div`\n  display: grid;\n  padding: 2em;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1000px;\n`;\n\nconst Confirmation = () => {\n  const data = useContext(AppContext);\n  const docData = data['demo']['Items'];\n  const entities_list = data['entities_list'];\n  const [count, setCount] = useState(0);\n  const [image, setImage] = useState(null);\n  const doc_unique_ids = [];\n  docData.map(notice => {\n    doc_unique_ids.push(notice.unique_id);\n  });\n\n  const fetchData = () => {\n    Storage.get(doc_unique_ids[count], {\n      level: 'public'\n    }).then(data => setImage(data)).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [count]);\n  const initialValues = docData[count];\n  console.log(initialValues);\n  let keys = Object.keys(initialValues);\n  let values = Object.values(initialValues);\n  const [form] = Form.useForm();\n  const document_types = [\"Announcement\", \"Refund\", \"Payment\"];\n  const document_type_json = [];\n  document_types.map(type => {\n    document_type_json.push({\n      'value': type\n    });\n  });\n  const entities_list_json = [];\n  entities_list.map(entity => {\n    entities_list_json.push({\n      'value': entity\n    });\n  });\n  const states = [\"Alabama\", \"Alaska\", \"Arkansas\", \"Arizona\", \"California\", \"Colorado\", \"Connecticut\", \"Delaware\", \"Florida\", \"Georgia\", \"Hawaii\", \"Iowa\", \"Idaho\", \"Illinois\", \"Indiana\", \"Kansas\", \"Kentucky\", \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Missouri\", \"Mississippi\", \"Montana\", \"North Carolina\", \"North Dakota\", \"Nebraska\", \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"Nevada\", \"New York\", \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Rhode Island\", \"South Carolina\", \"South Dakota\", \"Tennessee\", \"Texas\", \"Utah\", \"Virginia\", \"Vermont\", \"Washington\", \"Wisconsin\", \"West Virginia\", \"Wyoming\"];\n  let statesjson = [];\n  states.map(state => {\n    statesjson.push({\n      'value': state\n    });\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default Confirmation;","map":{"version":3,"sources":["/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/Confirmation/Confirmation.js"],"names":["React","useState","useContext","useEffect","AppContext","map","without","filter","Form","Input","Button","Select","message","Typography","AutoComplete","Row","Col","Checkbox","Progress","styled","CheckOutlined","RollbackOutlined","BrowserRouter","Router","Route","Link","formItemLayout","labelCol","sm","span","TextArea","Title","Option","AppLayout","div","Confirmation","data","docData","entities_list","count","setCount","image","setImage","doc_unique_ids","notice","push","unique_id","fetchData","Storage","get","level","then","catch","err","console","log","initialValues","keys","Object","values","form","useForm","document_types","document_type_json","type","entities_list_json","entity","states","statesjson","state"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from 'react';\nimport { AppContext } from '../Context';\nimport { map, without, filter} from 'lodash';\nimport { Form, Input, Button, Select, message, Typography, AutoComplete, Row, Col, Checkbox, Progress} from 'antd';\nimport styled from 'styled-components';\nimport { CheckOutlined, RollbackOutlined} from '@ant-design/icons';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n\nconst formItemLayout = {\n    labelCol: {\n        sm: { span: 8 },\n    }, \n  \n};\n\n\n\nconst { TextArea } = Input;\nconst { Title } = Typography; \nconst { Option } = Select;\nconst AppLayout = styled.div`\n  display: grid;\n  padding: 2em;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1000px;\n` \n\n\n\nconst Confirmation = () => {\n    \n    const data = useContext(AppContext)\n    const docData = data['demo']['Items']\n    const entities_list = data['entities_list']\n    const [count, setCount] = useState(0)\n    const [image, setImage] = useState(null)\n\n    const doc_unique_ids = []\n    docData.map(notice => {\n        doc_unique_ids.push(notice.unique_id)\n    })\n\n     \n    const fetchData = () => {\n        Storage.get(doc_unique_ids[count], {level: 'public'})\n        .then(data => setImage(data))\n        .catch(err => console.log(err))\n        }\n    \n    useEffect(() => {\n        fetchData();\n      }, [count]);\n\n\n\n\n    const initialValues = docData[count]\n    console.log(initialValues)\n    let keys = Object.keys(initialValues)\n    let values = Object.values(initialValues)\n    const [form] = Form.useForm();\n    const document_types = [\"Announcement\", \"Refund\", \"Payment\"]\n    \n    const document_type_json = []\n    document_types.map(type => {\n        document_type_json.push({'value' : type})\n    })\n\n    const entities_list_json = []\n    entities_list.map(entity => {\n        entities_list_json.push({'value': entity})\n    })\n    \n\n    const states = [\"Alabama\",\"Alaska\",\"Arkansas\",\"Arizona\",\"California\",\"Colorado\",\"Connecticut\",\"Delaware\",\"Florida\",\"Georgia\",\"Hawaii\",\"Iowa\",\"Idaho\",\"Illinois\",\"Indiana\",\"Kansas\",\"Kentucky\",\"Louisiana\",\"Maine\",\"Maryland\",\"Massachusetts\",\"Michigan\",\"Minnesota\",\"Missouri\",\"Mississippi\",\"Montana\",\"North Carolina\",\"North Dakota\",\"Nebraska\",\"New Hampshire\",\"New Jersey\",\"New Mexico\",\"Nevada\",\"New York\",\"Ohio\",\"Oklahoma\",\"Oregon\",\"Pennsylvania\",\"Rhode Island\",\"South Carolina\",\"South Dakota\",\"Tennessee\",\"Texas\",\"Utah\",\"Virginia\",\"Vermont\",\"Washington\",\"Wisconsin\",\"West Virginia\",\"Wyoming\"]\n    let statesjson = []\n    states.map(state => {\n        statesjson.push({'value' : state})\n\n    })\n\n\n\n\n\n    return <>\n        <AppLayout>\n            <div>\n\n            </div>\n            <div>\n\n            </div>\n\n\n        </AppLayout>\n\n    </>\n\n}\n\n\nexport default Confirmation;"]},"metadata":{},"sourceType":"module"}