{"ast":null,"code":"var _jsxFileName = \"/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/Upload/Upload.js\";\nimport React from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { List, Typography } from 'antd';\nimport Feedback from '../Feedback';\nimport Amplify, { Auth, Storage } from 'aws-amplify';\nimport awsconfig from '../../aws-exports';\nAmplify.configure(awsconfig);\nconst {\n  Title\n} = Typography;\n\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0,\n        v = c == 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n}\n\nconst Upload = () => {\n  let auth = Auth;\n\n  const onDrop = async acceptedFiles => {\n    let authcontext = await auth.currentAuthenticatedUser();\n    let username = authcontext.username;\n    console.log(username);\n    let customer = authcontext.attributes['custom:customer'];\n    acceptedFiles.forEach(file => {\n      let uuid = uuidv4(); //let filename = username +  \"_\" + customer +  \"_\" + uuid + \".pdf\"\n\n      let filename = file.name;\n      const reader = new FileReader();\n\n      reader.onabort = () => console.log('file reading was aborted');\n\n      reader.onerror = () => console.log('file reading has failed');\n\n      reader.readAsBinaryString(file);\n\n      reader.onload = () => {\n        Storage.put(filename, file, {\n          level: 'public'\n        }).then(() => {\n          console.log(\"sucessfully saved file!\");\n        }).catch(err => {\n          console.log('error uploading files!', err);\n        });\n      };\n    });\n  };\n\n  const {\n    getRootProps,\n    getInputProps,\n    acceptedFiles,\n    rejectedFiles\n  } = useDropzone({\n    onDrop,\n    accept: \".pdf\"\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"feedback\",\n    style: {\n      float: 'left',\n      marginLeft: '100px',\n      paddingTop: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '20px',\n      backgroundColor: 'white',\n      marginTop: '60pxpx'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Title, {\n    level: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Drag and drop notices \"), /*#__PURE__*/React.createElement(List, {\n    size: \"small\",\n    header: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 19\n      }\n    }, \"Accepted files:\"),\n    bordered: true,\n    dataSource: acceptedFiles,\n    renderItem: item => /*#__PURE__*/React.createElement(List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 31\n      }\n    }, \" \", item.path),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    size: \"small\",\n    header: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }\n    }, \"Rejected files:\"),\n    bordered: true,\n    dataSource: rejectedFiles,\n    renderItem: item => /*#__PURE__*/React.createElement(List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 31\n      }\n    }, \"  \", item.path),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 14\n    }\n  }))));\n};\n\nexport default Upload;","map":{"version":3,"sources":["/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/Upload/Upload.js"],"names":["React","useDropzone","List","Typography","Feedback","Amplify","Auth","Storage","awsconfig","configure","Title","uuidv4","replace","c","r","Math","random","v","toString","Upload","auth","onDrop","acceptedFiles","authcontext","currentAuthenticatedUser","username","console","log","customer","attributes","forEach","file","uuid","filename","name","reader","FileReader","onabort","onerror","readAsBinaryString","onload","put","level","then","catch","err","getRootProps","getInputProps","rejectedFiles","accept","float","marginLeft","paddingTop","padding","backgroundColor","marginTop","item","path"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useDropzone} from 'react-dropzone';\nimport {List, Typography} from 'antd';\n\nimport Feedback from '../Feedback';\n\nimport Amplify, { Auth, Storage } from 'aws-amplify';\n\nimport awsconfig from '../../aws-exports';\nAmplify.configure(awsconfig);\n\nconst { Title } = Typography\n\nfunction uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);    \n    });\n  }\n\n\n\nconst Upload = () => {\n    let auth = Auth;\n\n\n    const onDrop = async(acceptedFiles) => {\n        let authcontext = await auth.currentAuthenticatedUser()\n        let username = authcontext.username\n        console.log(username)\n        let customer = authcontext.attributes['custom:customer']\n        acceptedFiles.forEach((file) => {\n          let uuid = uuidv4()\n          //let filename = username +  \"_\" + customer +  \"_\" + uuid + \".pdf\"\n          let filename = file.name\n          const reader = new FileReader()\n          reader.onabort = () => console.log('file reading was aborted')\n          reader.onerror = () => console.log('file reading has failed')\n          reader.readAsBinaryString(file);\n          reader.onload = () => {\n          \n            Storage.put(filename, file, {\n              level: 'public'\n              })\n              .then(() => {\n                  console.log(\"sucessfully saved file!\")\n              }).catch(err => {\n            console.log('error uploading files!', err)\n          }) \n    \n          }\n        })\n    }\n    const {getRootProps, getInputProps, acceptedFiles, rejectedFiles} = useDropzone({\n        onDrop, \n        accept: \".pdf\"})    \n\n    return <>\n          <div className = \"feedback\" style = {{float: 'left', marginLeft: '100px', paddingTop : '20px'}}>\n            <Feedback />\n          </div>\n        <div style ={{padding: '20px', \n                      backgroundColor: 'white',\n                      marginTop: '60pxpx'}}\n                      >\n\n        <div {...getRootProps()}>\n          <input {...getInputProps()} />\n          <Title level = {3}>Drag and drop notices </Title>\n          <List\n          size=\"small\"\n          header={<div>Accepted files:</div>}\n          bordered\n          dataSource={acceptedFiles}\n          renderItem={item => <List.Item> {item.path}</List.Item>}\n        />\n             <List\n          size=\"small\"\n          header={<div>Rejected files:</div>}\n          bordered\n          dataSource={rejectedFiles}\n          renderItem={item => <List.Item>  {item.path}</List.Item>}\n        />\n\n        </div>\n        \n        </div>\n    </>\n}   \n\nexport default Upload;"]},"metadata":{},"sourceType":"module"}