{"ast":null,"code":"var _jsxFileName = \"/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/DashboardB/Dashboard.js\";\nimport React, { useContext, useState } from 'react';\nimport { AppContext } from '../Context';\nimport styled from 'styled-components';\nimport moment from 'moment';\nimport { Select, Typography, Spin, DatePicker, Row, Col, Radio, Input } from 'antd';\nimport LineChart from './LineChart';\nimport BarEntities from './BarEntities';\nimport StateLevel from './StateLevel';\nimport group_month from './utils';\nconst {\n  Option\n} = Select;\nconst {\n  MonthPicker\n} = DatePicker;\nconst {\n  Title\n} = Typography;\nconst AppLayout = styled.div`\n  display: grid;\n  padding: 1em;\n  grid-template-columns: 1fr 4fr;\n  grid-template-rows: 1000px;\n`;\n\nconst Dashboard = () => {\n  const contextData = useContext(AppContext);\n  const documents = contextData['ledger'];\n  const entities = contextData['entities_list'];\n  const [selectedEntities, setSelectedEntities] = useState(entities);\n  const [variable, setVariable] = useState(\"notices\");\n  const dateFormat = 'YYYY-MM-DD';\n  const startStr = moment('2019-01-01', dateFormat);\n  const [startDate, setstartDate] = useState(startStr);\n  const now = moment().toDate();\n  const endStr = moment(now, dateFormat);\n  const [endDate, setendDate] = useState(endStr);\n  const [radiostate, setRadiostate] = useState(\"time\");\n\n  const handleentityChange = event => {\n    if (event.length == 0) {\n      setSelectedEntities(entities);\n    } else {\n      setSelectedEntities(event);\n    }\n  };\n\n  function handlestartChange(date, dateString) {\n    setstartDate(date);\n  }\n\n  function handleendChange(date, dateString) {\n    setendDate(date);\n  }\n\n  let dateFormatown = \"MM/DD/YYYY\";\n  const documents_filtered = [];\n  documents.map(item => {\n    let date_check = moment(item.notice_date, dateFormatown);\n    item.month = moment(item.notice_date).format('YYYY/MM');\n\n    if (selectedEntities.includes(item.entity_name) && date_check.isAfter(startDate) && date_check.isBefore(endDate)) {\n      documents_filtered.push(item);\n    }\n  });\n  const filtered_data = group_month(documents_filtered);\n  const entitieschildren = [];\n  entities.map(entity => {\n    entitieschildren.push( /*#__PURE__*/React.createElement(Option, {\n      key: entity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 31\n      }\n    }, entity));\n  });\n  const radioStyle = {\n    display: 'block',\n    height: '30px',\n    lineHeight: '30px'\n  };\n\n  const onviewChange = value => {\n    console.log(value);\n    setRadiostate(value.target.value);\n  };\n\n  let selectedView;\n\n  if (radiostate === \"time\") {\n    selectedView = /*#__PURE__*/React.createElement(LineChart, {\n      data: filtered_data,\n      variable: variable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 28\n      }\n    });\n  } else if (radiostate == \"states\") {\n    selectedView = /*#__PURE__*/React.createElement(StateLevel, {\n      documents: documents_filtered,\n      variable: variable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 28\n      }\n    });\n  } else {\n    selectedView = /*#__PURE__*/React.createElement(BarEntities, {\n      documents: documents_filtered,\n      variable: variable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 28\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 14\n    }\n  }, \"View\"), /*#__PURE__*/React.createElement(Radio.Group, {\n    onChange: onviewChange,\n    value: radiostate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Radio, {\n    style: radioStyle,\n    value: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, \"Time\"), /*#__PURE__*/React.createElement(Radio, {\n    style: radioStyle,\n    value: \"states\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, \"States\"), /*#__PURE__*/React.createElement(Radio, {\n    style: radioStyle,\n    value: \"entities\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, \"Entities\"))), /*#__PURE__*/React.createElement(Title, {\n    level: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, \"Selection criteria\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, \"Variable:\"), /*#__PURE__*/React.createElement(Select, {\n    style: {\n      width: 300\n    },\n    defaultValue: variable,\n    onChange: event => setVariable(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"dollar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, \"Dollar value \"), /*#__PURE__*/React.createElement(Option, {\n    value: \"notices\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, \"Number of notices\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: '1em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, \"Starting date\"), /*#__PURE__*/React.createElement(MonthPicker, {\n    defaultValue: startStr,\n    onChange: handlestartChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, \"Ending date:\"), /*#__PURE__*/React.createElement(MonthPicker, {\n    style: {\n      float: 'right'\n    },\n    defaultValue: endDate,\n    onChange: handleendChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '20px',\n      marginLeft: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, selectedView));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/DashboardB/Dashboard.js"],"names":["React","useContext","useState","AppContext","styled","moment","Select","Typography","Spin","DatePicker","Row","Col","Radio","Input","LineChart","BarEntities","StateLevel","group_month","Option","MonthPicker","Title","AppLayout","div","Dashboard","contextData","documents","entities","selectedEntities","setSelectedEntities","variable","setVariable","dateFormat","startStr","startDate","setstartDate","now","toDate","endStr","endDate","setendDate","radiostate","setRadiostate","handleentityChange","event","length","handlestartChange","date","dateString","handleendChange","dateFormatown","documents_filtered","map","item","date_check","notice_date","month","format","includes","entity_name","isAfter","isBefore","push","filtered_data","entitieschildren","entity","radioStyle","display","height","lineHeight","onviewChange","value","console","log","target","selectedView","padding","width","paddingTop","float","marginLeft"],"mappings":"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","sourcesContent":["import React, {useContext, useState} from 'react';\nimport { AppContext } from '../Context';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\n\nimport {Select, Typography, Spin, DatePicker, Row, Col,  Radio, Input} from 'antd';\n\n\nimport LineChart  from './LineChart'\nimport BarEntities from './BarEntities'\nimport StateLevel from './StateLevel'\n\nimport group_month from './utils'\n\nconst {Option} = Select;\nconst { MonthPicker } = DatePicker;\nconst {Title} = Typography;\n\nconst AppLayout = styled.div`\n  display: grid;\n  padding: 1em;\n  grid-template-columns: 1fr 4fr;\n  grid-template-rows: 1000px;\n`\n\nconst Dashboard = () => {\n    const contextData = useContext(AppContext)\n    const documents = contextData['ledger'];\n    const entities = contextData['entities_list']\n    \n    const [selectedEntities, setSelectedEntities] = useState(entities)\n\n    const [variable, setVariable] = useState(\"notices\")\n    const dateFormat = 'YYYY-MM-DD';\n    const startStr = moment('2019-01-01', dateFormat) \n    const [startDate, setstartDate] = useState(startStr)\n    \n    const now = moment().toDate()\n    const endStr = moment(now, dateFormat) \n    const [endDate, setendDate] = useState(endStr)\n\n    const [radiostate, setRadiostate] = useState(\"time\")\n\n      \n\n    const handleentityChange = (event) => {\n      if (event.length == 0) {\n          setSelectedEntities(entities)\n      } else {\n          setSelectedEntities(event)\n      }\n  }\n\n  function handlestartChange(date, dateString) {\n    setstartDate(date)\n  }\n\n  function handleendChange(date, dateString) {\n    setendDate(date)\n}\n\n    let dateFormatown = \"MM/DD/YYYY\"\n    \n\n    const documents_filtered = []\n    documents.map(item => {\n          let date_check = moment(item.notice_date, dateFormatown)          \n          item.month = moment(item.notice_date).format('YYYY/MM')\n          if (selectedEntities.includes(item.entity_name) && \n             date_check.isAfter(startDate) &&\n             date_check.isBefore(endDate)\n          ) {\n            documents_filtered.push(item)\n          }\n    })\n    \n    const filtered_data = group_month(documents_filtered)\n\n   \n\n\n    const entitieschildren = []\n    entities.map(entity =>{\n        entitieschildren.push(<Option key={entity}>{entity}</Option>)\n    })\n\n\n    \n\n\n    const radioStyle = {\n        display: 'block',\n        height: '30px',\n        lineHeight: '30px',\n      };\n\n\n      const onviewChange = (value) => {\n          console.log(value)\n          setRadiostate(value.target.value)\n      }\n\n\n        let selectedView;\n        if (radiostate === \"time\") {\n            selectedView = <LineChart data = {filtered_data} variable = {variable}/>\n        } else if (radiostate == \"states\") {\n            selectedView = <StateLevel documents = {documents_filtered} variable = {variable}  />\n        } else {\n            selectedView = <BarEntities documents = {documents_filtered} variable = {variable}  />\n        }\n\n\n    \n    return (\n        <AppLayout>\n            <div style ={{padding: '20px'}}>\n             <div>\n             <Title level={4}>\n                View\n            </Title>\n\n            <Radio.Group onChange={onviewChange} value={radiostate}>\n        <Radio style={radioStyle} value={\"time\"}>\n          Time\n        </Radio>\n        <Radio style={radioStyle} value={\"states\"}>\n          States\n        </Radio>\n        <Radio style={radioStyle} value={\"entities\"}>\n          Entities \n        </Radio>\n     \n      </Radio.Group>\n\n\n        \n\n                 </div>   \n            <Title level={4}>\n                Selection criteria\n            </Title>\n            <p>\n            Variable:\n            </p>\n            <Select\n             style={{ width: 300 }}\n             defaultValue={variable}\n             onChange ={event => setVariable(event)}\n             >\n                <Option value=\"dollar\">Dollar value </Option>\n                <Option value=\"notices\">Number of notices</Option>\n            </Select>\n            \n        \n            <div style = {{paddingTop: '1em'}}>\n            <Row gutter = {10}>\n                <Col>\n                <p>\n                Starting date\n                </p>\n                <MonthPicker \n            defaultValue={startStr}\n            onChange={handlestartChange}\n            />\n                </Col>\n            <Col>\n            <p>\n                Ending date:\n                </p>\n            <MonthPicker \n            style = {{float:'right'}}\n            defaultValue={endDate}\n            onChange={handleendChange}\n            />\n            </Col>\n    \n            </Row>\n            </div>\n    \n        </div>\n\n        <div style ={{padding: '20px', \n                  marginLeft: '20px'}}>\n                      {selectedView}\n            \n        </div>                \n        </AppLayout>\n\n\n        )\n    \n}\n\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}