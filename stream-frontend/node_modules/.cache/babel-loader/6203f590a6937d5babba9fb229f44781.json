{"ast":null,"code":"var _jsxFileName = \"/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/Upload/Upload.js\";\nimport React from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { List, Typography } from 'antd';\nimport Amplify, { Auth, Storage } from 'aws-amplify';\nimport awsconfig from '../../aws-exports';\nAmplify.configure(awsconfig);\nconst {\n  Title\n} = Typography;\n\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0,\n        v = c == 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n}\n\nconst Upload = () => {\n  let auth = Auth;\n\n  const onDrop = async acceptedFiles => {\n    let authcontext = await auth.currentAuthenticatedUser();\n    let username = authcontext.username;\n    let customer = authcontext.attributes['custom:customer'];\n    acceptedFiles.forEach(file => {\n      let uuid = uuidv4(); //let filename = username +  \"_\" + customer +  \"_\" + uuid + \".pdf\"\n\n      let filename = file.name;\n      console.log(filename);\n      const reader = new FileReader();\n\n      reader.onabort = () => console.log('file reading was aborted');\n\n      reader.onerror = () => console.log('file reading has failed');\n\n      reader.readAsBinaryString(file);\n\n      reader.onload = () => {\n        Storage.put(filename, file, {\n          level: 'public'\n        }).then(() => {\n          console.log(\"sucessfully saved file!\");\n        }).catch(err => {\n          console.log('error uploading files!', err);\n        });\n      };\n    });\n  };\n\n  const {\n    getRootProps,\n    getInputProps,\n    acceptedFiles,\n    rejectedFiles\n  } = useDropzone({\n    onDrop,\n    accept: \".pdf\"\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '20px',\n      backgroundColor: 'white',\n      marginTop: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Title, {\n    level: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Drop your files here!\"), /*#__PURE__*/React.createElement(List, {\n    size: \"small\",\n    header: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }, \"Accepted files:\"),\n    bordered: true,\n    dataSource: acceptedFiles,\n    renderItem: item => /*#__PURE__*/React.createElement(List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 31\n      }\n    }, \" \", item.path),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    size: \"small\",\n    header: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }\n    }, \"Rejected files:\"),\n    bordered: true,\n    dataSource: rejectedFiles,\n    renderItem: item => /*#__PURE__*/React.createElement(List.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 31\n      }\n    }, \"  \", item.path),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 14\n    }\n  }))));\n};\n\nexport default Upload;","map":{"version":3,"sources":["/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/Upload/Upload.js"],"names":["React","useDropzone","List","Typography","Amplify","Auth","Storage","awsconfig","configure","Title","uuidv4","replace","c","r","Math","random","v","toString","Upload","auth","onDrop","acceptedFiles","authcontext","currentAuthenticatedUser","username","customer","attributes","forEach","file","uuid","filename","name","console","log","reader","FileReader","onabort","onerror","readAsBinaryString","onload","put","level","then","catch","err","getRootProps","getInputProps","rejectedFiles","accept","padding","backgroundColor","marginTop","item","path"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useDropzone} from 'react-dropzone';\nimport {List, Typography} from 'antd';\n\n\nimport Amplify, { Auth, Storage } from 'aws-amplify';\n\nimport awsconfig from '../../aws-exports';\nAmplify.configure(awsconfig);\n\nconst { Title } = Typography\n\nfunction uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);    \n    });\n  }\n\n\n\nconst Upload = () => {\n    let auth = Auth;\n\n\n    const onDrop = async(acceptedFiles) => {\n        let authcontext = await auth.currentAuthenticatedUser()\n        let username = authcontext.username\n        let customer = authcontext.attributes['custom:customer']\n        acceptedFiles.forEach((file) => {\n          let uuid = uuidv4()\n          //let filename = username +  \"_\" + customer +  \"_\" + uuid + \".pdf\"\n          let filename = file.name\n          console.log(filename)\n          const reader = new FileReader()\n          reader.onabort = () => console.log('file reading was aborted')\n          reader.onerror = () => console.log('file reading has failed')\n          reader.readAsBinaryString(file);\n          reader.onload = () => {\n          \n            Storage.put(filename, file, {\n              level: 'public'\n              })\n              .then(() => {\n                  console.log(\"sucessfully saved file!\")\n              }).catch(err => {\n            console.log('error uploading files!', err)\n          }) \n    \n          }\n        })\n    }\n    const {getRootProps, getInputProps, acceptedFiles, rejectedFiles} = useDropzone({\n        onDrop, \n        accept: \".pdf\"})    \n\n    return <>\n    \n        <div style ={{padding: '20px', \n        backgroundColor: 'white',\n        marginTop: '20px'}}>\n        <div {...getRootProps()}>\n          <input {...getInputProps()} />\n          <Title level = {3}>Drop your files here!</Title>\n          <List\n          size=\"small\"\n          header={<div>Accepted files:</div>}\n          bordered\n          dataSource={acceptedFiles}\n          renderItem={item => <List.Item> {item.path}</List.Item>}\n        />\n             <List\n          size=\"small\"\n          header={<div>Rejected files:</div>}\n          bordered\n          dataSource={rejectedFiles}\n          renderItem={item => <List.Item>  {item.path}</List.Item>}\n        />\n\n        </div>\n        \n        </div>\n    </>\n}   \n\nexport default Upload;"]},"metadata":{},"sourceType":"module"}