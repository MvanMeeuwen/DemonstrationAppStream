{"ast":null,"code":"var _jsxFileName = \"/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/Context.js\";\nimport React, { useState, useEffect, createContext } from 'react';\nimport { API } from 'aws-amplify';\nimport { groupBy } from 'lodash';\nconst AppContext = createContext();\n\nconst AppProvider = props => {\n  const [data, setData] = useState(null);\n\n  const fetchData = async () => {\n    let apiName = 'stream';\n    let path = '/application_context';\n    let myInit = {\n      headers: {}\n    };\n    const result = await API.get(apiName, path, myInit);\n    setData(result);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const test = () => {\n    if (data === null) {} else {\n      const items = data['ledger'];\n      var state_grouping = groupBy(items, function (n) {\n        return n.state;\n      });\n      const states = Object.keys(state_grouping);\n      const data_per_state = Object.values(state_grouping);\n\n      const arrSum = arr => arr.reduce((a, b) => a + b, 0);\n\n      const datalist = [];\n      states.map(state => {\n        const data_object = {};\n        let amount = [];\n        let state_data = state_grouping[state];\n\n        for (let i = 0; i < state_data.length; i++) {\n          amount.push(state_data[i].amount);\n        }\n\n        data_object.state = state;\n        data_object.total_amount = arrSum(amount);\n        data_object.nr_documents = state_data.length;\n        let doctypes = groupBy(state_data, function (n) {\n          return n.document_type;\n        });\n        let types = Object.keys(doctypes);\n        let values = Object.values(doctypes);\n        let jsonObject = {};\n\n        for (let i = 0; i < types.length; i++) {\n          jsonObject[types[i]] = values[i].length;\n        }\n\n        data_object.distribution = jsonObject;\n        datalist.push(data_object);\n      });\n      data.documents_grouped_state = datalist;\n    }\n  };\n\n  test();\n\n  if (data === null) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport { AppContext, AppProvider };","map":{"version":3,"sources":["/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/Context.js"],"names":["React","useState","useEffect","createContext","API","groupBy","AppContext","AppProvider","props","data","setData","fetchData","apiName","path","myInit","headers","result","get","test","items","state_grouping","n","state","states","Object","keys","data_per_state","values","arrSum","arr","reduce","a","b","datalist","map","data_object","amount","state_data","i","length","push","total_amount","nr_documents","doctypes","document_type","types","jsonObject","distribution","documents_grouped_state","children"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, createContext} from 'react';\nimport {API} from 'aws-amplify';\nimport {groupBy} from 'lodash';\n\n\nconst AppContext = createContext();\n\n\nconst AppProvider = (props) => {\n\n    const [data, setData] = useState(null)\n\n    const fetchData = async () => {\n      let apiName = 'stream';\n      let path = '/application_context'\n      let myInit = { \n          headers: {}\n      } \n      const result = await API.get(apiName, path, myInit);\n      setData(result);\n    };\n  \n    useEffect(() => {\n      fetchData();\n    }, []);\n\n\n    const test = () => {\n      if (data === null) {\n          \n      } else {\n        const items = data['ledger']\n        var state_grouping = groupBy(items, function(n) {\n          return n.state;\n        });\n\n        const states = Object.keys(state_grouping)\n        const data_per_state = Object.values(state_grouping)\n        const arrSum = arr => arr.reduce((a,b) => a + b, 0);\n        const datalist = [];\n        states.map(state => {\n          const data_object = {}\n          let amount = [];\n          let state_data = state_grouping[state]\n          for (let i = 0; i < state_data.length; i++) {\n            amount.push(state_data[i].amount)\n          }\n          data_object.state = state;\n          data_object.total_amount = arrSum(amount)\n          data_object.nr_documents = state_data.length\n          let doctypes = groupBy(state_data, function(n) {\n            return n.document_type\n          })\n        \n          let types = Object.keys(doctypes)\n          let values = Object.values(doctypes)\n          let jsonObject = {}\n          for (let i = 0; i < types.length; i++){\n            jsonObject[types[i]] = values[i].length\n          }\n          data_object.distribution = jsonObject\n          datalist.push(data_object)\n        })\n        data.documents_grouped_state = datalist;\n        \n      }\n    }\n    test()\n\n\n    if (data  === null) {\n        return null \n      } \n    \n    \n\n\n    return (\n\n        <AppContext.Provider value={data}>\n                {props.children}\n        </AppContext.Provider>\n    )\n\n\n}\n\nexport {AppContext, AppProvider};"]},"metadata":{},"sourceType":"module"}