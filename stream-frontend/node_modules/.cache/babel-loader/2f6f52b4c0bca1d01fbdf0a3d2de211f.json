{"ast":null,"code":"import _slicedToArray from\"/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{Button,Descriptions,Divider,List,Drawer,Form,Input,Select,Typography,Checkbox,notification}from'antd';import{SyncOutlined}from'@ant-design/icons';var Title=Typography.Title;var allDataElements=[\"State\",\"Entity name\",\"Notice type\",\"Amount due\",\"Notice Date\",\"Some other\"];var selectedDataElements=[\"State\",\"Entity name\",\"Notice type\",\"Amount due\",\"Notice Date\"];var DataElementsManagement=function DataElementsManagement(){var _Form$useForm=Form.useForm(),_Form$useForm2=_slicedToArray(_Form$useForm,1),elementsForm=_Form$useForm2[0];var dataelements_fieldlist=[];allDataElements.map(function(item){if(selectedDataElements.includes(item)){var formitem=/*#__PURE__*/React.createElement(Form.Item,null,/*#__PURE__*/React.createElement(Checkbox,{defaultChecked:\"true\"},item));dataelements_fieldlist.push(formitem);}else{var _formitem=/*#__PURE__*/React.createElement(Form.Item,null,/*#__PURE__*/React.createElement(Checkbox,null,item));dataelements_fieldlist.push(_formitem);}});var openNotification=function openNotification(){notification.open({message:'Data elements have been updated',description:'Please refresh your browser for the results to be propagated.',onClick:function onClick(){console.log('Notification Clicked!');}});};return/*#__PURE__*/React.createElement(\"div\",{id:\"dataelementslist\",style:{padding:'20px',backgroundColor:'white',border:\"1px solid rgb(230,230,230)\",marginTop:'20px'}},/*#__PURE__*/React.createElement(Title,{level:4},\"  Selected data elements \"),/*#__PURE__*/React.createElement(Form,{layout:\"vertical\",form:elementsForm,onFinish:openNotification,hideRequiredMark:true},dataelements_fieldlist.map(function(field){return field;}),/*#__PURE__*/React.createElement(Button,{type:\"primary\",htmlType:\"submit\"},/*#__PURE__*/React.createElement(SyncOutlined,null),\" Update\")));};export default DataElementsManagement;","map":{"version":3,"sources":["/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/Admin/DataElementsManagement.js"],"names":["React","Button","Descriptions","Divider","List","Drawer","Form","Input","Select","Typography","Checkbox","notification","SyncOutlined","Title","allDataElements","selectedDataElements","DataElementsManagement","useForm","elementsForm","dataelements_fieldlist","map","item","includes","formitem","push","openNotification","open","message","description","onClick","console","log","padding","backgroundColor","border","marginTop","field"],"mappings":"sJAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,MAAT,CAAiBC,YAAjB,CAA+BC,OAA/B,CACIC,IADJ,CACUC,MADV,CACkBC,IADlB,CACwBC,KADxB,CAC+BC,MAD/B,CACuCC,UADvC,CAEIC,QAFJ,CAEcC,YAFd,KAGO,MAHP,CAKA,OAASC,YAAT,KAA6B,mBAA7B,C,GAEQC,CAAAA,K,CAAUJ,U,CAAVI,K,CAER,GAAMC,CAAAA,eAAe,CAAG,CAAC,OAAD,CAAU,aAAV,CAAyB,aAAzB,CAAwC,YAAxC,CAAsD,aAAtD,CAAqE,YAArE,CAAxB,CACA,GAAMC,CAAAA,oBAAoB,CAAG,CAAC,OAAD,CAAU,aAAV,CAAyB,aAAzB,CAAwC,YAAxC,CAAsD,aAAtD,CAA7B,CAGA,GAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,EAAM,mBACVV,IAAI,CAACW,OAAL,EADU,gDAC1BC,YAD0B,mBAEjC,GAAMC,CAAAA,sBAAsB,CAAG,EAA/B,CACAL,eAAe,CAACM,GAAhB,CAAoB,SAAAC,IAAI,CAAI,CACxB,GAAIN,oBAAoB,CAACO,QAArB,CAA8BD,IAA9B,CAAJ,CAAyC,CACzC,GAAME,CAAAA,QAAQ,cAAG,oBAAC,IAAD,CAAM,IAAN,mBACD,oBAAC,QAAD,EAAU,cAAc,CAAG,MAA3B,EACKF,IADL,CADC,CAAjB,CAIAF,sBAAsB,CAACK,IAAvB,CAA4BD,QAA5B,EAEC,CAPD,IAOO,CACP,GAAIA,CAAAA,SAAQ,cAAG,oBAAC,IAAD,CAAM,IAAN,mBACE,oBAAC,QAAD,MAAWF,IAAX,CADF,CAAf,CAGAF,sBAAsB,CAACK,IAAvB,CAA4BD,SAA5B,EAEC,CACJ,CAfD,EAiBA,GAAME,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC3Bd,YAAY,CAACe,IAAb,CAAkB,CAChBC,OAAO,CAAE,iCADO,CAEhBC,WAAW,CACT,+DAHc,CAIhBC,OAAO,CAAE,kBAAM,CACbC,OAAO,CAACC,GAAR,CAAY,uBAAZ,EACD,CANe,CAAlB,EAQD,CATH,CAaA,mBACI,2BAAK,EAAE,CAAG,kBAAV,CACI,KAAK,CAAG,CAACC,OAAO,CAAE,MAAV,CACFC,eAAe,CAAE,OADf,CAEFC,MAAM,CAAE,4BAFN,CAGFC,SAAS,CAAE,MAHT,CADZ,eAOA,oBAAC,KAAD,EAAO,KAAK,CAAI,CAAhB,8BAPA,cAUA,oBAAC,IAAD,EACI,MAAM,CAAC,UADX,CAEI,IAAI,CAAIjB,YAFZ,CAGI,QAAQ,CAAEO,gBAHd,CAII,gBAAgB,KAJpB,EAMYN,sBAAsB,CAACC,GAAvB,CAA2B,SAAAgB,KAAK,CAAI,CAChC,MAEIA,CAAAA,KAFJ,CAKH,CAND,CANZ,cAcI,oBAAC,MAAD,EAAQ,IAAI,CAAG,SAAf,CAAyB,QAAQ,CAAC,QAAlC,eACA,oBAAC,YAAD,MADA,WAdJ,CAVA,CADJ,CAkCH,CAnED,CAqEA,cAAepB,CAAAA,sBAAf","sourcesContent":["import React from 'react';\n\nimport { Button, Descriptions, Divider, \n    List, Drawer, Form, Input, Select, Typography,\n    Checkbox, notification\n} from 'antd';\n\nimport { SyncOutlined } from '@ant-design/icons';\n\nconst { Title } = Typography;\n\nconst allDataElements = [\"State\", \"Entity name\", \"Notice type\", \"Amount due\", \"Notice Date\", \"Some other\"]\nconst selectedDataElements = [\"State\", \"Entity name\", \"Notice type\", \"Amount due\", \"Notice Date\"]\n\n\nconst DataElementsManagement = () => {\n    const [elementsForm] = Form.useForm();\n    const dataelements_fieldlist = [];\n    allDataElements.map(item => {\n        if (selectedDataElements.includes(item)) {\n        const formitem = <Form.Item>\n                        <Checkbox defaultChecked = \"true\">\n                            {item}</Checkbox>\n                    </Form.Item>\n        dataelements_fieldlist.push(formitem)\n\n        } else {\n        let formitem = <Form.Item >\n                         <Checkbox>{item}</Checkbox>\n                   </Form.Item>\n        dataelements_fieldlist.push(formitem)\n            \n        }\n    })\n\n    const openNotification = () => {\n        notification.open({\n          message: 'Data elements have been updated',\n          description:\n            'Please refresh your browser for the results to be propagated.',\n          onClick: () => {\n            console.log('Notification Clicked!');\n          },\n        });\n      };\n\n\n\n    return (\n        <div id = \"dataelementslist\"\n            style ={{padding: '20px', \n                  backgroundColor: 'white', \n                  border: \"1px solid rgb(230,230,230)\", \n                  marginTop: '20px'}}\n                  >\n\n        <Title level = {4}>  Selected data elements </Title>\n\n\n        <Form\n            layout=\"vertical\"\n            form = {elementsForm} \n            onFinish={openNotification}\n            hideRequiredMark>\n                {\n                    dataelements_fieldlist.map(field => {\n                        return (\n\n                            field\n                             \n                        )\n                    })\n                }\n            <Button type = \"primary\" htmlType=\"submit\">\n            <SyncOutlined /> Update\n              </Button>\n\n        </Form>\n    \n        </div>\n    )\n    \n}\n\nexport default DataElementsManagement;"]},"metadata":{},"sourceType":"module"}