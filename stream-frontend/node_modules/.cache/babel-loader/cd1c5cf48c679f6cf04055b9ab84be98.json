{"ast":null,"code":"'use strict';\n\nvar DataReader = require('./dataReader');\n\nfunction Uint8ArrayReader(data) {\n  if (data) {\n    this.data = data;\n    this.length = this.data.length;\n    this.index = 0;\n  }\n}\n\nUint8ArrayReader.prototype = new DataReader();\n/**\n * @see DataReader.byteAt\n */\n\nUint8ArrayReader.prototype.byteAt = function (i) {\n  return this.data[i];\n};\n/**\n * @see DataReader.lastIndexOfSignature\n */\n\n\nUint8ArrayReader.prototype.lastIndexOfSignature = function (sig) {\n  var sig0 = sig.charCodeAt(0),\n      sig1 = sig.charCodeAt(1),\n      sig2 = sig.charCodeAt(2),\n      sig3 = sig.charCodeAt(3);\n\n  for (var i = this.length - 4; i >= 0; --i) {\n    if (this.data[i] === sig0 && this.data[i + 1] === sig1 && this.data[i + 2] === sig2 && this.data[i + 3] === sig3) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * @see DataReader.readData\n */\n\n\nUint8ArrayReader.prototype.readData = function (size) {\n  this.checkOffset(size);\n\n  if (size === 0) {\n    // in IE10, when using subarray(idx, idx), we get the array [0x00] instead of [].\n    return new Uint8Array(0);\n  }\n\n  var result = this.data.subarray(this.index, this.index + size);\n  this.index += size;\n  return result;\n};\n\nmodule.exports = Uint8ArrayReader;","map":{"version":3,"sources":["/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/node_modules/jszip/lib/uint8ArrayReader.js"],"names":["DataReader","require","Uint8ArrayReader","data","length","index","prototype","byteAt","i","lastIndexOfSignature","sig","sig0","charCodeAt","sig1","sig2","sig3","readData","size","checkOffset","Uint8Array","result","subarray","module","exports"],"mappings":"AAAA;;AACA,IAAIA,UAAU,GAAGC,OAAO,CAAC,cAAD,CAAxB;;AAEA,SAASC,gBAAT,CAA0BC,IAA1B,EAAgC;AAC5B,MAAIA,IAAJ,EAAU;AACN,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAc,KAAKD,IAAL,CAAUC,MAAxB;AACA,SAAKC,KAAL,GAAa,CAAb;AACH;AACJ;;AACDH,gBAAgB,CAACI,SAAjB,GAA6B,IAAIN,UAAJ,EAA7B;AACA;;;;AAGAE,gBAAgB,CAACI,SAAjB,CAA2BC,MAA3B,GAAoC,UAASC,CAAT,EAAY;AAC5C,SAAO,KAAKL,IAAL,CAAUK,CAAV,CAAP;AACH,CAFD;AAGA;;;;;AAGAN,gBAAgB,CAACI,SAAjB,CAA2BG,oBAA3B,GAAkD,UAASC,GAAT,EAAc;AAC5D,MAAIC,IAAI,GAAGD,GAAG,CAACE,UAAJ,CAAe,CAAf,CAAX;AAAA,MACIC,IAAI,GAAGH,GAAG,CAACE,UAAJ,CAAe,CAAf,CADX;AAAA,MAEIE,IAAI,GAAGJ,GAAG,CAACE,UAAJ,CAAe,CAAf,CAFX;AAAA,MAGIG,IAAI,GAAGL,GAAG,CAACE,UAAJ,CAAe,CAAf,CAHX;;AAIA,OAAK,IAAIJ,CAAC,GAAG,KAAKJ,MAAL,GAAc,CAA3B,EAA8BI,CAAC,IAAI,CAAnC,EAAsC,EAAEA,CAAxC,EAA2C;AACvC,QAAI,KAAKL,IAAL,CAAUK,CAAV,MAAiBG,IAAjB,IAAyB,KAAKR,IAAL,CAAUK,CAAC,GAAG,CAAd,MAAqBK,IAA9C,IAAsD,KAAKV,IAAL,CAAUK,CAAC,GAAG,CAAd,MAAqBM,IAA3E,IAAmF,KAAKX,IAAL,CAAUK,CAAC,GAAG,CAAd,MAAqBO,IAA5G,EAAkH;AAC9G,aAAOP,CAAP;AACH;AACJ;;AAED,SAAO,CAAC,CAAR;AACH,CAZD;AAaA;;;;;AAGAN,gBAAgB,CAACI,SAAjB,CAA2BU,QAA3B,GAAsC,UAASC,IAAT,EAAe;AACjD,OAAKC,WAAL,CAAiBD,IAAjB;;AACA,MAAGA,IAAI,KAAK,CAAZ,EAAe;AACX;AACA,WAAO,IAAIE,UAAJ,CAAe,CAAf,CAAP;AACH;;AACD,MAAIC,MAAM,GAAG,KAAKjB,IAAL,CAAUkB,QAAV,CAAmB,KAAKhB,KAAxB,EAA+B,KAAKA,KAAL,GAAaY,IAA5C,CAAb;AACA,OAAKZ,KAAL,IAAcY,IAAd;AACA,SAAOG,MAAP;AACH,CATD;;AAUAE,MAAM,CAACC,OAAP,GAAiBrB,gBAAjB","sourcesContent":["'use strict';\nvar DataReader = require('./dataReader');\n\nfunction Uint8ArrayReader(data) {\n    if (data) {\n        this.data = data;\n        this.length = this.data.length;\n        this.index = 0;\n    }\n}\nUint8ArrayReader.prototype = new DataReader();\n/**\n * @see DataReader.byteAt\n */\nUint8ArrayReader.prototype.byteAt = function(i) {\n    return this.data[i];\n};\n/**\n * @see DataReader.lastIndexOfSignature\n */\nUint8ArrayReader.prototype.lastIndexOfSignature = function(sig) {\n    var sig0 = sig.charCodeAt(0),\n        sig1 = sig.charCodeAt(1),\n        sig2 = sig.charCodeAt(2),\n        sig3 = sig.charCodeAt(3);\n    for (var i = this.length - 4; i >= 0; --i) {\n        if (this.data[i] === sig0 && this.data[i + 1] === sig1 && this.data[i + 2] === sig2 && this.data[i + 3] === sig3) {\n            return i;\n        }\n    }\n\n    return -1;\n};\n/**\n * @see DataReader.readData\n */\nUint8ArrayReader.prototype.readData = function(size) {\n    this.checkOffset(size);\n    if(size === 0) {\n        // in IE10, when using subarray(idx, idx), we get the array [0x00] instead of [].\n        return new Uint8Array(0);\n    }\n    var result = this.data.subarray(this.index, this.index + size);\n    this.index += size;\n    return result;\n};\nmodule.exports = Uint8ArrayReader;\n"]},"metadata":{},"sourceType":"script"}