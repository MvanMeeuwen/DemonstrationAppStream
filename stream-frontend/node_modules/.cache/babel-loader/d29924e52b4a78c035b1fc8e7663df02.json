{"ast":null,"code":"'use strict';\n\nvar utils = require('./utils');\n/**\n * An object to write any content to an Uint8Array.\n * @constructor\n * @param {number} length The length of the array.\n */\n\n\nvar Uint8ArrayWriter = function Uint8ArrayWriter(length) {\n  this.data = new Uint8Array(length);\n  this.index = 0;\n};\n\nUint8ArrayWriter.prototype = {\n  /**\n   * Append any content to the current array.\n   * @param {Object} input the content to add.\n   */\n  append: function append(input) {\n    if (input.length !== 0) {\n      // with an empty Uint8Array, Opera fails with a \"Offset larger than array size\"\n      input = utils.transformTo(\"uint8array\", input);\n      this.data.set(input, this.index);\n      this.index += input.length;\n    }\n  },\n\n  /**\n   * Finalize the construction an return the result.\n   * @return {Uint8Array} the generated array.\n   */\n  finalize: function finalize() {\n    return this.data;\n  }\n};\nmodule.exports = Uint8ArrayWriter;","map":{"version":3,"sources":["/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/node_modules/jszip/lib/uint8ArrayWriter.js"],"names":["utils","require","Uint8ArrayWriter","length","data","Uint8Array","index","prototype","append","input","transformTo","set","finalize","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAAnB;AAEA;;;;;;;AAKA,IAAIC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAASC,MAAT,EAAiB;AACpC,OAAKC,IAAL,GAAY,IAAIC,UAAJ,CAAeF,MAAf,CAAZ;AACA,OAAKG,KAAL,GAAa,CAAb;AACH,CAHD;;AAIAJ,gBAAgB,CAACK,SAAjB,GAA6B;AACzB;;;;AAIAC,EAAAA,MAAM,EAAE,gBAASC,KAAT,EAAgB;AACpB,QAAIA,KAAK,CAACN,MAAN,KAAiB,CAArB,EAAwB;AACpB;AACAM,MAAAA,KAAK,GAAGT,KAAK,CAACU,WAAN,CAAkB,YAAlB,EAAgCD,KAAhC,CAAR;AACA,WAAKL,IAAL,CAAUO,GAAV,CAAcF,KAAd,EAAqB,KAAKH,KAA1B;AACA,WAAKA,KAAL,IAAcG,KAAK,CAACN,MAApB;AACH;AACJ,GAZwB;;AAazB;;;;AAIAS,EAAAA,QAAQ,EAAE,oBAAW;AACjB,WAAO,KAAKR,IAAZ;AACH;AAnBwB,CAA7B;AAsBAS,MAAM,CAACC,OAAP,GAAiBZ,gBAAjB","sourcesContent":["'use strict';\n\nvar utils = require('./utils');\n\n/**\n * An object to write any content to an Uint8Array.\n * @constructor\n * @param {number} length The length of the array.\n */\nvar Uint8ArrayWriter = function(length) {\n    this.data = new Uint8Array(length);\n    this.index = 0;\n};\nUint8ArrayWriter.prototype = {\n    /**\n     * Append any content to the current array.\n     * @param {Object} input the content to add.\n     */\n    append: function(input) {\n        if (input.length !== 0) {\n            // with an empty Uint8Array, Opera fails with a \"Offset larger than array size\"\n            input = utils.transformTo(\"uint8array\", input);\n            this.data.set(input, this.index);\n            this.index += input.length;\n        }\n    },\n    /**\n     * Finalize the construction an return the result.\n     * @return {Uint8Array} the generated array.\n     */\n    finalize: function() {\n        return this.data;\n    }\n};\n\nmodule.exports = Uint8ArrayWriter;\n"]},"metadata":{},"sourceType":"script"}