{"ast":null,"code":"var _jsxFileName = \"/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/DashboardB/BarEntities.js\";\nimport React, { PureComponent } from 'react';\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ComposedChart } from 'recharts';\nimport { groupBy, filter } from 'lodash';\nimport { Typography } from 'antd';\nimport styled from 'styled-components';\nconst AppLayout = styled.div`\n  display: grid;\n  padding: 2em;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1000px;\n`;\n\nconst BarEntities = props => {\n  var grouped_entities = groupBy(props.documents, function (n) {\n    return n.entity_name;\n  });\n  console.log(grouped_entities);\n  let entities = Object.keys(grouped_entities);\n  console.log(props.variable);\n  let variable;\n\n  if (props.variable == \"dollar\") {\n    variable = [\"amount_payment\", \"amount_refund\"];\n  } else {\n    variable = ['nr_payments', 'nr_refunds'];\n  }\n\n  const arrSum = arr => arr.reduce((a, b) => a + b, 0);\n\n  const list_of_objects = [];\n\n  for (let i = 0; i < entities.length; i++) {\n    const data_object = {};\n    let index = entities[i];\n    let entity_docs = grouped_entities[index];\n    data_object.entity_name = index;\n    let amount_refund = [];\n    let amount_payment = [];\n\n    for (let i = 0; i < entity_docs.length; i++) {\n      if (entity_docs[i].document_type == \"Payment\") {\n        amount_payment.push(entity_docs[i].amount);\n      } else if (entity_docs[i].document_type == \"Refund\") {\n        amount_refund.push(Math.round(entity_docs[i].amount));\n      }\n    }\n\n    data_object.amount_payment = arrSum(amount_payment);\n    data_object.amount_refund = arrSum(amount_refund);\n    data_object.amount_total = data_object.amount_refund + data_object.amount_payment;\n    data_object.nr_payments = amount_payment.length;\n    data_object.nr_refunds = amount_refund.length;\n    data_object.nr_announcements = entity_docs.length - amount_payment.length - amount_refund.length;\n    list_of_objects.push(data_object);\n  }\n\n  const sorted_list = list_of_objects.sort((a, b) => b[variable[0]] - a[variable[0]]);\n  const bar_list = [];\n  const reduced_data = [];\n\n  for (let i = 0; i < 8; i++) {\n    reduced_data.push(sorted_list[i]);\n    let barelement = /*#__PURE__*/React.createElement(Bar, {\n      dataKey: \"amount_refund\",\n      fill: \"#8884d8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 30\n      }\n    });\n    bar_list.push(barelement);\n  }\n\n  console.log(variable[0]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography.Title, {\n    level: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, \"Payments\"), /*#__PURE__*/React.createElement(ComposedChart, {\n    layout: \"vertical\",\n    width: 500,\n    height: 700,\n    data: reduced_data,\n    margin: {\n      top: 5,\n      right: 30,\n      left: 50,\n      bottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    dataKey: \"entity_name\",\n    type: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: [variable[0]],\n    fill: \"#91d5ff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography.Title, {\n    level: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, \"Refunds\"), /*#__PURE__*/React.createElement(ComposedChart, {\n    layout: \"vertical\",\n    width: 500,\n    height: 700,\n    data: reduced_data,\n    margin: {\n      top: 5,\n      right: 30,\n      left: 50,\n      bottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    type: \"number\",\n    unit: \"$\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    dataKey: \"entity_name\",\n    type: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: [variable[1]],\n    fill: \"#002766\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  })))));\n};\n\nexport default BarEntities;","map":{"version":3,"sources":["/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/DashboardB/BarEntities.js"],"names":["React","PureComponent","BarChart","Bar","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ComposedChart","groupBy","filter","Typography","styled","AppLayout","div","BarEntities","props","grouped_entities","documents","n","entity_name","console","log","entities","Object","keys","variable","arrSum","arr","reduce","a","b","list_of_objects","i","length","data_object","index","entity_docs","amount_refund","amount_payment","document_type","push","amount","Math","round","amount_total","nr_payments","nr_refunds","nr_announcements","sorted_list","sort","bar_list","reduced_data","barelement","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport {\n  BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ComposedChart,\n} from 'recharts';\n\nimport {groupBy, filter} from 'lodash';\nimport { Typography } from 'antd';\nimport styled from 'styled-components';\n\n\n\nconst AppLayout = styled.div`\n  display: grid;\n  padding: 2em;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1000px;\n` \n\n\n\n\nconst BarEntities = (props) => {\n    \n      \n        var grouped_entities = groupBy(props.documents, function(n) {\n          return n.entity_name;\n        })\n\n        console.log(grouped_entities)\n\n        let entities = Object.keys(grouped_entities);\n        \n        console.log(props.variable)\n\n        let variable;\n        if (props.variable == \"dollar\") {\n          variable = [\"amount_payment\", \"amount_refund\"]\n        } else {\n          variable = ['nr_payments', 'nr_refunds']\n        }\n\n        \n        const arrSum = arr => arr.reduce((a,b) => a + b, 0);\n        const list_of_objects = [];\n        for(let i = 0; i < entities.length; i++) {\n            const data_object = {};\n            let index = entities[i];\n            let entity_docs = grouped_entities[index];\n            data_object.entity_name = index\n            let amount_refund = []\n            let amount_payment = []\n            for (let i = 0; i < entity_docs.length; i++) {\n                if (entity_docs[i].document_type == \"Payment\") {\n                    amount_payment.push(entity_docs[i].amount)\n                    \n                  } else if (entity_docs[i].document_type == \"Refund\") { \n                    amount_refund.push(Math.round(entity_docs[i].amount))\n                  }\n            }\n\n            data_object.amount_payment = arrSum(amount_payment)\n            data_object.amount_refund = arrSum(amount_refund)\n            data_object.amount_total = data_object.amount_refund + data_object.amount_payment\n            data_object.nr_payments = amount_payment.length\n            data_object.nr_refunds = amount_refund.length\n            data_object.nr_announcements = entity_docs.length - amount_payment.length - amount_refund.length\n\n\n\n\n            list_of_objects.push(data_object)\n\n\n\n\n        }\n        \n\n        const sorted_list = list_of_objects.sort((a, b) => (b[variable[0]]- a[variable[0]]))\n\n\n        const bar_list = []\n        const reduced_data = []\n        for (let i = 0; i < 8; i++) {\n            reduced_data.push(sorted_list[i])\n            let barelement = <Bar dataKey=\"amount_refund\" fill=\"#8884d8\" />;\n            bar_list.push(barelement)\n        }\n\n        console.log(variable[0])\n\n\n    return <>\n    <AppLayout>\n      \n      <div>\n      <Typography.Title level = {4} >\n          Payments\n        </Typography.Title>\n        <ComposedChart\n        layout = 'vertical'\n        width={500}\n        height={700}\n        data = {reduced_data}\n        margin={{\n          top: 5, right: 30, left: 50, bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis type=\"number\" />\n        <YAxis dataKey=\"entity_name\" type=\"category\"/>\n        <Bar dataKey={[variable[0]]} fill=\"#91d5ff\" />\n      </ComposedChart>\n      </div>\n      <div>\n        <Typography.Title level = {4} >\n          Refunds\n        </Typography.Title>\n        <ComposedChart\n        layout = 'vertical'\n        width={500}\n        height={700}\n        data = {reduced_data}\n        margin={{\n          top: 5, right: 30, left: 50, bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis type=\"number\" unit=\"$\"/>\n        <YAxis dataKey=\"entity_name\" type=\"category\"/>\n        <Bar dataKey={[variable[1]]} fill=\"#002766\" />\n      </ComposedChart>\n      </div>\n\n      \n\n      </AppLayout>\n    </>\n}\n\n\nexport default BarEntities;"]},"metadata":{},"sourceType":"module"}