{"ast":null,"code":"var _jsxFileName = \"/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/Confirmation/Confirmation.js\";\nimport React, { useState, useContext } from 'react';\nimport { AppContext } from '../Context';\nimport { map, without, filter } from 'lodash';\nimport { Form, Input, Button, Select, message, Typography, AutoComplete, Row, Col, Checkbox, Progress } from 'antd';\nimport styled from 'styled-components';\nimport { CheckOutlined, RollbackOutlined } from '@ant-design/icons';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nconst formItemLayout = {\n  labelCol: {\n    sm: {\n      span: 8\n    }\n  }\n};\nconst {\n  TextArea\n} = Input;\nconst {\n  Title\n} = Typography;\nconst {\n  Option\n} = Select;\nconst AppLayout = styled.div`\n  display: grid;\n  padding: 2em;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1000px;\n`;\n\nconst Confirmation = () => {\n  const data = useContext(AppContext);\n  const docData = data['demo']['Items'];\n  const entities_list = data['entities_list'];\n  const [count, setCount] = useState(0);\n  const doc_unique_ids = [];\n  docData.map(notice => {\n    doc_unique_ids.push(notice.unique_id);\n  });\n  const initialValues = docData[count];\n  let keys = Object.keys(initialValues);\n  let values = Object.values(initialValues);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default Confirmation;","map":{"version":3,"sources":["/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/Confirmation/Confirmation.js"],"names":["React","useState","useContext","AppContext","map","without","filter","Form","Input","Button","Select","message","Typography","AutoComplete","Row","Col","Checkbox","Progress","styled","CheckOutlined","RollbackOutlined","BrowserRouter","Router","Route","Link","formItemLayout","labelCol","sm","span","TextArea","Title","Option","AppLayout","div","Confirmation","data","docData","entities_list","count","setCount","doc_unique_ids","notice","push","unique_id","initialValues","keys","Object","values"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,GAAT,EAAcC,OAAd,EAAuBC,MAAvB,QAAoC,QAApC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,MAA9B,EAAsCC,OAAtC,EAA+CC,UAA/C,EAA2DC,YAA3D,EAAyEC,GAAzE,EAA8EC,GAA9E,EAAmFC,QAAnF,EAA6FC,QAA7F,QAA4G,MAA5G;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAA+C,mBAA/C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,QAAqD,kBAArD;AAGA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,EAAE,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR;AADE;AADS,CAAvB;AASA,MAAM;AAAEC,EAAAA;AAAF,IAAerB,KAArB;AACA,MAAM;AAAEsB,EAAAA;AAAF,IAAYlB,UAAlB;AACA,MAAM;AAAEmB,EAAAA;AAAF,IAAarB,MAAnB;AACA,MAAMsB,SAAS,GAAGd,MAAM,CAACe,GAAI;;;;;CAA7B;;AASA,MAAMC,YAAY,GAAG,MAAM;AAEvB,QAAMC,IAAI,GAAGjC,UAAU,CAACC,UAAD,CAAvB;AACA,QAAMiC,OAAO,GAAGD,IAAI,CAAC,MAAD,CAAJ,CAAa,OAAb,CAAhB;AACA,QAAME,aAAa,GAAGF,IAAI,CAAC,eAAD,CAA1B;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBtC,QAAQ,CAAC,CAAD,CAAlC;AAEA,QAAMuC,cAAc,GAAG,EAAvB;AACAJ,EAAAA,OAAO,CAAChC,GAAR,CAAYqC,MAAM,IAAI;AAClBD,IAAAA,cAAc,CAACE,IAAf,CAAoBD,MAAM,CAACE,SAA3B;AACH,GAFD;AAIA,QAAMC,aAAa,GAAGR,OAAO,CAACE,KAAD,CAA7B;AACA,MAAIO,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYD,aAAZ,CAAX;AACA,MAAIG,MAAM,GAAGD,MAAM,CAACC,MAAP,CAAcH,aAAd,CAAb;AAMA,sBAAO,uDACH,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADG,CAAP;AAcH,CAlCD;;AAqCA,eAAeV,YAAf","sourcesContent":["import React, {useState, useContext} from 'react';\nimport { AppContext } from '../Context';\nimport { map, without, filter} from 'lodash';\nimport { Form, Input, Button, Select, message, Typography, AutoComplete, Row, Col, Checkbox, Progress} from 'antd';\nimport styled from 'styled-components';\nimport { CheckOutlined, RollbackOutlined} from '@ant-design/icons';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n\nconst formItemLayout = {\n    labelCol: {\n        sm: { span: 8 },\n    }, \n  \n};\n\n\n\nconst { TextArea } = Input;\nconst { Title } = Typography; \nconst { Option } = Select;\nconst AppLayout = styled.div`\n  display: grid;\n  padding: 2em;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1000px;\n` \n\n\n\nconst Confirmation = () => {\n    \n    const data = useContext(AppContext)\n    const docData = data['demo']['Items']\n    const entities_list = data['entities_list']\n    const [count, setCount] = useState(0)\n\n    const doc_unique_ids = []\n    docData.map(notice => {\n        doc_unique_ids.push(notice.unique_id)\n    })\n\n    const initialValues = docData[count]\n    let keys = Object.keys(initialValues)\n    let values = Object.values(initialValues)\n\n\n\n\n\n    return <>\n        <AppLayout>\n            <div>\n\n            </div>\n            <div>\n\n            </div>\n\n\n        </AppLayout>\n\n    </>\n\n}\n\n\nexport default Confirmation;"]},"metadata":{},"sourceType":"module"}