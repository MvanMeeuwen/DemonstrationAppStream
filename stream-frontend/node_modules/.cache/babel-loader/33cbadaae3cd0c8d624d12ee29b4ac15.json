{"ast":null,"code":"/* ods.js (C) 2014 SheetJS -- http://sheetjs.com */\n\n/* vim: set ts=2: */\n\n/*jshint -W041 */\nvar ODS = {};\n\n(function make_ods(ODS) {\n  /* Open Document Format for Office Applications (OpenDocument) Version 1.2 */\n  var get_utils = function get_utils() {\n    if (typeof XLSX !== 'undefined') return XLSX.utils;\n    if (typeof module !== \"undefined\" && typeof require !== 'undefined') try {\n      return require('../' + 'xlsx').utils;\n    } catch (e) {\n      try {\n        return require('./' + 'xlsx').utils;\n      } catch (ee) {\n        return require('xl' + 'sx').utils;\n      }\n    }\n    throw new Error(\"Cannot find XLSX utils\");\n  };\n\n  var has_buf = typeof Buffer !== 'undefined';\n\n  function cc2str(arr) {\n    var o = \"\";\n\n    for (var i = 0; i != arr.length; ++i) {\n      o += String.fromCharCode(arr[i]);\n    }\n\n    return o;\n  }\n\n  function getdata(data) {\n    if (!data) return null;\n    if (data.data) return data.data;\n    if (data.asNodeBuffer && has_buf) return data.asNodeBuffer().toString('binary');\n    if (data.asBinary) return data.asBinary();\n    if (data._data && data._data.getContent) return cc2str(Array.prototype.slice.call(data._data.getContent(), 0));\n    return null;\n  }\n\n  function safegetzipfile(zip, file) {\n    var f = file;\n    if (zip.files[f]) return zip.files[f];\n    f = file.toLowerCase();\n    if (zip.files[f]) return zip.files[f];\n    f = f.replace(/\\//g, '\\\\');\n    if (zip.files[f]) return zip.files[f];\n    return null;\n  }\n\n  function getzipfile(zip, file) {\n    var o = safegetzipfile(zip, file);\n    if (o == null) throw new Error(\"Cannot find file \" + file + \" in zip\");\n    return o;\n  }\n\n  function getzipdata(zip, file, safe) {\n    if (!safe) return getdata(getzipfile(zip, file));\n    if (!file) return null;\n\n    try {\n      return getzipdata(zip, file);\n    } catch (e) {\n      return null;\n    }\n  }\n\n  var _fs, jszip;\n\n  if (typeof JSZip !== 'undefined') jszip = JSZip;\n\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      if (has_buf && typeof jszip === 'undefined') jszip = require('js' + 'zip');\n      if (typeof jszip === 'undefined') jszip = require('./js' + 'zip').JSZip;\n      _fs = require('f' + 's');\n    }\n  }\n\n  var attregexg = /\\b[\\w:-]+=[\"'][^\"]*['\"]/g;\n  var tagregex = /<[^>]*>/g;\n  var nsregex = /<\\w*:/,\n      nsregex2 = /<(\\/?)\\w+:/;\n\n  function parsexmltag(tag, skip_root) {\n    var z = [];\n    var eq = 0,\n        c = 0;\n\n    for (; eq !== tag.length; ++eq) {\n      if ((c = tag.charCodeAt(eq)) === 32 || c === 10 || c === 13) break;\n    }\n\n    if (!skip_root) z[0] = tag.substr(0, eq);\n    if (eq === tag.length) return z;\n    var m = tag.match(attregexg),\n        j = 0,\n        w = \"\",\n        v = \"\",\n        i = 0,\n        q = \"\",\n        cc = \"\";\n    if (m) for (i = 0; i != m.length; ++i) {\n      cc = m[i];\n\n      for (c = 0; c != cc.length; ++c) {\n        if (cc.charCodeAt(c) === 61) break;\n      }\n\n      q = cc.substr(0, c);\n      v = cc.substring(c + 2, cc.length - 1);\n\n      for (j = 0; j != q.length; ++j) {\n        if (q.charCodeAt(j) === 58) break;\n      }\n\n      if (j === q.length) z[q] = v;else z[(j === 5 && q.substr(0, 5) === \"xmlns\" ? \"xmlns\" : \"\") + q.substr(j + 1)] = v;\n    }\n    return z;\n  }\n\n  function strip_ns(x) {\n    return x.replace(nsregex2, \"<$1\");\n  }\n\n  var encodings = {\n    '&quot;': '\"',\n    '&apos;': \"'\",\n    '&gt;': '>',\n    '&lt;': '<',\n    '&amp;': '&'\n  };\n  var rencoding = {\n    '\"': '&quot;',\n    \"'\": '&apos;',\n    '>': '&gt;',\n    '<': '&lt;',\n    '&': '&amp;'\n  };\n  var rencstr = \"&<>'\\\"\".split(\"\"); // TODO: CP remap (need to read file version to determine OS)\n\n  var encregex = /&[a-z]*;/g,\n      coderegex = /_x([\\da-fA-F]+)_/g;\n\n  function unescapexml(text) {\n    var s = text + '';\n    return s.replace(encregex, function ($$) {\n      return encodings[$$];\n    }).replace(coderegex, function (m, c) {\n      return String.fromCharCode(parseInt(c, 16));\n    });\n  }\n\n  var decregex = /[&<>'\"]/g,\n      charegex = /[\\u0000-\\u0008\\u000b-\\u001f]/g;\n\n  function escapexml(text) {\n    var s = text + '';\n    return s.replace(decregex, function (y) {\n      return rencoding[y];\n    }).replace(charegex, function (s) {\n      return \"_x\" + (\"000\" + s.charCodeAt(0).toString(16)).substr(-4) + \"_\";\n    });\n  }\n\n  function parsexmlbool(value, tag) {\n    switch (value) {\n      case '1':\n      case 'true':\n      case 'TRUE':\n        return true;\n\n      /* case '0': case 'false': case 'FALSE':*/\n\n      default:\n        return false;\n    }\n  }\n\n  function datenum(v) {\n    var epoch = Date.parse(v);\n    return (epoch + 2209161600000) / (24 * 60 * 60 * 1000);\n  }\n  /* ISO 8601 Duration */\n\n\n  function parse_isodur(s) {\n    var sec = 0,\n        mt = 0,\n        time = false;\n    var m = s.match(/P([0-9\\.]+Y)?([0-9\\.]+M)?([0-9\\.]+D)?T([0-9\\.]+H)?([0-9\\.]+M)?([0-9\\.]+S)?/);\n    if (!m) throw new Error(\"|\" + s + \"| is not an ISO8601 Duration\");\n\n    for (var i = 1; i != m.length; ++i) {\n      if (!m[i]) continue;\n      mt = 1;\n      if (i > 3) time = true;\n\n      switch (m[i].substr(m[i].length - 1)) {\n        case 'Y':\n          throw new Error(\"Unsupported ISO Duration Field: \" + m[i].substr(m[i].length - 1));\n\n        case 'D':\n          mt *= 24;\n\n        /* falls through */\n\n        case 'H':\n          mt *= 60;\n\n        /* falls through */\n\n        case 'M':\n          if (!time) throw new Error(\"Unsupported ISO Duration Field: M\");else mt *= 60;\n\n        /* falls through */\n\n        case 'S':\n          break;\n      }\n\n      sec += mt * parseInt(m[i], 10);\n    }\n\n    return sec;\n  }\n  /* copied from js-xls (C) SheetJS Apache2 license */\n\n\n  function xlml_normalize(d) {\n    if (has_buf && Buffer.isBuffer(d)) return d.toString('utf8');\n    if (typeof d === 'string') return d;\n    throw \"badf\";\n  }\n\n  var xlmlregex = /<(\\/?)([a-z0-9]*:|)([\\w-]+)[^>]*>/mg;\n  /* Part 3 Section 4 Manifest File */\n\n  var CT_ODS = \"application/vnd.oasis.opendocument.spreadsheet\";\n\n  var parse_manifest = function parse_manifest(d, opts) {\n    var str = xlml_normalize(d);\n    var Rn;\n    var FEtag;\n\n    while (Rn = xlmlregex.exec(str)) {\n      switch (Rn[3]) {\n        case 'manifest':\n          break;\n        // 4.2 <manifest:manifest>\n\n        case 'file-entry':\n          // 4.3 <manifest:file-entry>\n          FEtag = parsexmltag(Rn[0]);\n          if (FEtag.path == '/' && FEtag.type !== CT_ODS) throw new Error(\"This OpenDocument is not a spreadsheet\");\n          break;\n\n        case 'encryption-data': // 4.4 <manifest:encryption-data>\n\n        case 'algorithm': // 4.5 <manifest:algorithm>\n\n        case 'start-key-generation': // 4.6 <manifest:start-key-generation>\n\n        case 'key-derivation':\n          // 4.7 <manifest:key-derivation>\n          throw new Error(\"Unsupported ODS Encryption\");\n\n        default:\n          throw Rn;\n      }\n    }\n  };\n\n  var parse_text_p = function parse_text_p(text, tag) {\n    return utf8read(text.replace(/<text:s\\/>/g, \" \").replace(/<[^>]*>/g, \"\"));\n  };\n\n  var utf8read = function utf8reada(orig) {\n    var out = \"\",\n        i = 0,\n        c = 0,\n        d = 0,\n        e = 0,\n        f = 0,\n        w = 0;\n\n    while (i < orig.length) {\n      c = orig.charCodeAt(i++);\n\n      if (c < 128) {\n        out += String.fromCharCode(c);\n        continue;\n      }\n\n      d = orig.charCodeAt(i++);\n\n      if (c > 191 && c < 224) {\n        out += String.fromCharCode((c & 31) << 6 | d & 63);\n        continue;\n      }\n\n      e = orig.charCodeAt(i++);\n\n      if (c < 240) {\n        out += String.fromCharCode((c & 15) << 12 | (d & 63) << 6 | e & 63);\n        continue;\n      }\n\n      f = orig.charCodeAt(i++);\n      w = ((c & 7) << 18 | (d & 63) << 12 | (e & 63) << 6 | f & 63) - 65536;\n      out += String.fromCharCode(0xD800 + (w >>> 10 & 1023));\n      out += String.fromCharCode(0xDC00 + (w & 1023));\n    }\n\n    return out;\n  };\n\n  var parse_content_xml = function () {\n    var number_formats = {\n      /* ods name: [short ssf fmt, long ssf fmt] */\n      day: [\"d\", \"dd\"],\n      month: [\"m\", \"mm\"],\n      year: [\"y\", \"yy\"],\n      hours: [\"h\", \"hh\"],\n      minutes: [\"m\", \"mm\"],\n      seconds: [\"s\", \"ss\"],\n      \"am-pm\": [\"A/P\", \"AM/PM\"],\n      \"day-of-week\": [\"ddd\", \"dddd\"]\n    };\n    return function pcx(d, opts) {\n      var str = xlml_normalize(d);\n      var state = [],\n          tmp;\n      var tag;\n      var NFtag, NF, pidx;\n      var sheetag;\n      var Sheets = {},\n          SheetNames = [],\n          ws = {};\n      var Rn, q;\n      var ctag;\n      var textp, textpidx, textptag;\n      var R,\n          C,\n          range = {\n        s: {\n          r: 1000000,\n          c: 10000000\n        },\n        e: {\n          r: 0,\n          c: 0\n        }\n      };\n      var number_format_map = {};\n      var merges = [],\n          mrange = {},\n          mR = 0,\n          mC = 0;\n\n      while (Rn = xlmlregex.exec(str)) {\n        switch (Rn[3]) {\n          case 'table':\n            // 9.1.2 <table:table>\n            if (Rn[1] === '/') {\n              if (range.e.c >= range.s.c && range.e.r >= range.s.r) ws['!ref'] = get_utils().encode_range(range);\n              if (merges.length) ws['!merges'] = merges;\n              SheetNames.push(sheetag.name);\n              Sheets[sheetag.name] = ws;\n            } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') {\n              sheetag = parsexmltag(Rn[0]);\n              R = C = -1;\n              range.s.r = range.s.c = 10000000;\n              range.e.r = range.e.c = 0;\n              ws = {};\n              merges = [];\n            }\n\n            break;\n\n          case 'table-row':\n            // 9.1.3 <table:table-row>\n            if (Rn[1] === '/') break;\n            ++R;\n            C = -1;\n            break;\n\n          case 'covered-table-cell':\n            // 9.1.5 table:covered-table-cell\n            ++C;\n            break;\n\n          /* stub */\n\n          case 'table-cell':\n            if (Rn[0].charAt(Rn[0].length - 2) === '/') {\n              ctag = parsexmltag(Rn[0]);\n              if (ctag['number-columns-repeated']) C += parseInt(ctag['number-columns-repeated'], 10);else ++C;\n            } else if (Rn[1] !== '/') {\n              ++C;\n              if (C > range.e.c) range.e.c = C;\n              if (R > range.e.r) range.e.r = R;\n              if (C < range.s.c) range.s.c = C;\n              if (R < range.s.r) range.s.r = R;\n              ctag = parsexmltag(Rn[0]);\n              q = {\n                t: ctag['value-type'],\n                v: null\n              };\n\n              if (ctag['number-columns-spanned'] || ctag['number-rows-spanned']) {\n                mR = parseInt(ctag['number-rows-spanned'], 10) || 0;\n                mC = parseInt(ctag['number-columns-spanned'], 10) || 0;\n                mrange = {\n                  s: {\n                    r: R,\n                    c: C\n                  },\n                  e: {\n                    r: R + mR - 1,\n                    c: C + mC - 1\n                  }\n                };\n                merges.push(mrange);\n              }\n              /* 19.385 office:value-type */\n\n\n              switch (q.t) {\n                case 'boolean':\n                  q.t = 'b';\n                  q.v = parsexmlbool(ctag['boolean-value']);\n                  break;\n\n                case 'float':\n                  q.t = 'n';\n                  q.v = parseFloat(ctag.value);\n                  break;\n\n                case 'percentage':\n                  q.t = 'n';\n                  q.v = parseFloat(ctag.value);\n                  break;\n\n                case 'currency':\n                  q.t = 'n';\n                  q.v = parseFloat(ctag.value);\n                  break;\n\n                case 'date':\n                  q.t = 'n';\n                  q.v = datenum(ctag['date-value']);\n                  q.z = 'm/d/yy';\n                  break;\n\n                case 'time':\n                  q.t = 'n';\n                  q.v = parse_isodur(ctag['time-value']) / 86400;\n                  break;\n\n                case 'string':\n                  q.t = 's';\n                  break;\n\n                default:\n                  throw new Error('Unsupported value type ' + q.t);\n              }\n            } else {\n              if (q.t === 's') q.v = textp;\n              if (textp) q.w = textp;\n              if (!(opts.sheetRows && opts.sheetRows < R)) ws[get_utils().encode_cell({\n                r: R,\n                c: C\n              })] = q;\n              q = null;\n            }\n\n            break;\n          // 9.1.4 <table:table-cell>\n\n          /* pure state */\n\n          case 'document-content': // 3.1.3.2 <office:document-content>\n\n          case 'spreadsheet': // 3.7 <office:spreadsheet>\n\n          case 'scripts': // 3.12 <office:scripts>\n\n          case 'font-face-decls':\n            // 3.14 <office:font-face-decls>\n            if (Rn[1] === '/') {\n              if ((tmp = state.pop())[0] !== Rn[3]) throw \"Bad state: \" + tmp;\n            } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') state.push([Rn[3], true]);\n\n            break;\n\n          /* ignore state */\n\n          case 'shapes': // 9.2.8 <table:shapes>\n\n          case 'frame':\n            // 10.4.2 <draw:frame>\n            if (Rn[1] === '/') {\n              if ((tmp = state.pop())[0] !== Rn[3]) throw \"Bad state: \" + tmp;\n            } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') state.push([Rn[3], false]);\n\n            break;\n\n          case 'number-style': // 16.27.2 <number:number-style>\n\n          case 'percentage-style': // 16.27.9 <number:percentage-style>\n\n          case 'date-style': // 16.27.10 <number:date-style>\n\n          case 'time-style':\n            // 16.27.18 <number:time-style>\n            if (Rn[1] === '/') {\n              number_format_map[NFtag.name] = NF;\n              if ((tmp = state.pop())[0] !== Rn[3]) throw \"Bad state: \" + tmp;\n            } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') {\n              NF = \"\";\n              NFtag = parsexmltag(Rn[0]);\n              state.push([Rn[3], true]);\n            }\n\n            break;\n\n          case 'script':\n            break;\n          // 3.13 <office:script>\n\n          case 'automatic-styles':\n            break;\n          // 3.15.3 <office:automatic-styles>\n\n          case 'style':\n            break;\n          // 16.2 <style:style>\n\n          case 'font-face':\n            break;\n          // 16.21 <style:font-face>\n\n          case 'paragraph-properties':\n            break;\n          // 17.6 <style:paragraph-properties>\n\n          case 'table-properties':\n            break;\n          // 17.15 <style:table-properties>\n\n          case 'table-column-properties':\n            break;\n          // 17.16 <style:table-column-properties>\n\n          case 'table-row-properties':\n            break;\n          // 17.17 <style:table-row-properties>\n\n          case 'table-cell-properties':\n            break;\n          // 17.18 <style:table-cell-properties>\n\n          case 'number':\n            // 16.27.3 <number:number>\n            switch (state[state.length - 1][0]) {\n              case 'time-style':\n              case 'date-style':\n                tag = parsexmltag(Rn[0]);\n                NF += number_formats[Rn[3]][tag.style === 'long' ? 1 : 0];\n                break;\n            }\n\n            break;\n\n          case 'day': // 16.27.11 <number:day>\n\n          case 'month': // 16.27.12 <number:month>\n\n          case 'year': // 16.27.13 <number:year>\n\n          case 'era': // 16.27.14 <number:era>\n\n          case 'day-of-week': // 16.27.15 <number:day-of-week>\n\n          case 'week-of-year': // 16.27.16 <number:week-of-year>\n\n          case 'quarter': // 16.27.17 <number:quarter>\n\n          case 'hours': // 16.27.19 <number:hours>\n\n          case 'minutes': // 16.27.20 <number:minutes>\n\n          case 'seconds': // 16.27.21 <number:seconds>\n\n          case 'am-pm':\n            // 16.27.22 <number:am-pm>\n            switch (state[state.length - 1][0]) {\n              case 'time-style':\n              case 'date-style':\n                tag = parsexmltag(Rn[0]);\n                NF += number_formats[Rn[3]][tag.style === 'long' ? 1 : 0];\n                break;\n            }\n\n            break;\n\n          case 'boolean-style':\n            break;\n          // 16.27.23 <number:boolean-style>\n\n          case 'boolean':\n            break;\n          // 16.27.24 <number:boolean>\n\n          case 'text-style':\n            break;\n          // 16.27.25 <number:text-style>\n\n          case 'text':\n            // 16.27.26 <number:text>\n            if (Rn[0].substr(-2) === \"/>\") break;else if (Rn[1] === \"/\") switch (state[state.length - 1][0]) {\n              case 'number-style':\n              case 'date-style':\n              case 'time-style':\n                NF += str.slice(pidx, Rn.index);\n                break;\n            } else pidx = Rn.index + Rn[0].length;\n            break;\n\n          case 'text-content':\n            break;\n          // 16.27.27 <number:text-content>\n\n          case 'text-properties':\n            break;\n          // 16.27.27 <style:text-properties>\n\n          case 'body':\n            break;\n          // 3.3 16.9.6 19.726.3\n\n          case 'forms':\n            break;\n          // 12.25.2 13.2\n\n          case 'table-column':\n            break;\n          // 9.1.6 <table:table-column>\n\n          case 'graphic-properties':\n            break;\n\n          case 'calculation-settings':\n            break;\n          // 9.4.1 <table:calculation-settings>\n\n          case 'named-expressions':\n            break;\n          // 9.4.11 <table:named-expressions>\n\n          case 'named-range':\n            break;\n          // 9.4.11 <table:named-range>\n\n          case 'span':\n            break;\n          // <text:span>\n\n          case 'p':\n            if (Rn[1] === '/') textp = parse_text_p(str.slice(textpidx, Rn.index), textptag);else {\n              textptag = parsexmltag(Rn[0]);\n              textpidx = Rn.index + Rn[0].length;\n            }\n            break;\n          // <text:p>\n\n          case 's':\n            break;\n          // <text:s>\n\n          case 'date':\n            break;\n          // <*:date>\n\n          case 'annotation':\n            break;\n\n          case 'object':\n            break;\n          // 10.4.6.2 <draw:object>\n\n          case 'title':\n            break;\n          // <*:title>\n\n          case 'desc':\n            break;\n          // <*:desc>\n\n          case 'database-ranges':\n            break;\n          // 9.4.14 <table:database-ranges>\n\n          case 'database-range':\n            break;\n          // 9.4.15 <table:database-range>\n\n          case 'filter':\n            break;\n          // 9.5.2 <table:filter>\n\n          case 'filter-and':\n            break;\n          // 9.5.3 <table:filter-and>\n\n          case 'filter-or':\n            break;\n          // 9.5.4 <table:filter-or>\n\n          case 'filter-condition':\n            break;\n          // 9.5.5 <table:filter-condition>\n\n          default:\n            if (opts.WTF) throw Rn;\n        }\n      }\n\n      var out = {\n        Sheets: Sheets,\n        SheetNames: SheetNames\n      };\n      return out;\n    };\n  }();\n  /* Part 3: Packages */\n\n\n  var parse_ods = function parse_ods(zip, opts) {\n    //var manifest = parse_manifest(getzipdata(zip, 'META-INF/manifest.xml'));\n    return parse_content_xml(getzipdata(zip, 'content.xml'), opts);\n  };\n\n  ODS.parse_ods = parse_ods;\n})(typeof exports !== 'undefined' ? exports : ODS);","map":{"version":3,"sources":["/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/node_modules/tempa-xlsx/ods.js"],"names":["ODS","make_ods","get_utils","XLSX","utils","module","require","e","ee","Error","has_buf","Buffer","cc2str","arr","o","i","length","String","fromCharCode","getdata","data","asNodeBuffer","toString","asBinary","_data","getContent","Array","prototype","slice","call","safegetzipfile","zip","file","f","files","toLowerCase","replace","getzipfile","getzipdata","safe","_fs","jszip","JSZip","exports","attregexg","tagregex","nsregex","nsregex2","parsexmltag","tag","skip_root","z","eq","c","charCodeAt","substr","m","match","j","w","v","q","cc","substring","strip_ns","x","encodings","rencoding","rencstr","split","encregex","coderegex","unescapexml","text","s","$$","parseInt","decregex","charegex","escapexml","y","parsexmlbool","value","datenum","epoch","Date","parse","parse_isodur","sec","mt","time","xlml_normalize","d","isBuffer","xlmlregex","CT_ODS","parse_manifest","opts","str","Rn","FEtag","exec","path","type","parse_text_p","utf8read","utf8reada","orig","out","parse_content_xml","number_formats","day","month","year","hours","minutes","seconds","pcx","state","tmp","NFtag","NF","pidx","sheetag","Sheets","SheetNames","ws","ctag","textp","textpidx","textptag","R","C","range","r","number_format_map","merges","mrange","mR","mC","encode_range","push","name","charAt","t","parseFloat","sheetRows","encode_cell","pop","style","index","WTF","parse_ods"],"mappings":"AAAA;;AACA;;AACA;AACA,IAAIA,GAAG,GAAG,EAAV;;AACA,CAAC,SAASC,QAAT,CAAkBD,GAAlB,EAAuB;AACxB;AACA,MAAIE,SAAS,GAAG,SAAZA,SAAY,GAAW;AAC1B,QAAG,OAAOC,IAAP,KAAgB,WAAnB,EAAgC,OAAOA,IAAI,CAACC,KAAZ;AAChC,QAAG,OAAOC,MAAP,KAAkB,WAAlB,IAAiC,OAAOC,OAAP,KAAmB,WAAvD,EAAoE,IAAI;AACvE,aAAOA,OAAO,CAAC,QAAQ,MAAT,CAAP,CAAwBF,KAA/B;AACA,KAFmE,CAElE,OAAMG,CAAN,EAAS;AACV,UAAI;AAAE,eAAOD,OAAO,CAAC,OAAO,MAAR,CAAP,CAAuBF,KAA9B;AAAsC,OAA5C,CACA,OAAMI,EAAN,EAAU;AAAE,eAAOF,OAAO,CAAC,OAAO,IAAR,CAAP,CAAqBF,KAA5B;AAAoC;AAChD;AACD,UAAM,IAAIK,KAAJ,CAAU,wBAAV,CAAN;AACA,GATD;;AAUA,MAAIC,OAAO,GAAI,OAAOC,MAAP,KAAkB,WAAjC;;AAEA,WAASC,MAAT,CAAgBC,GAAhB,EAAqB;AACpB,QAAIC,CAAC,GAAG,EAAR;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAIF,GAAG,CAACG,MAAxB,EAAgC,EAAED,CAAlC;AAAqCD,MAAAA,CAAC,IAAIG,MAAM,CAACC,YAAP,CAAoBL,GAAG,CAACE,CAAD,CAAvB,CAAL;AAArC;;AACA,WAAOD,CAAP;AACA;;AACD,WAASK,OAAT,CAAiBC,IAAjB,EAAuB;AACtB,QAAG,CAACA,IAAJ,EAAU,OAAO,IAAP;AACV,QAAGA,IAAI,CAACA,IAAR,EAAc,OAAOA,IAAI,CAACA,IAAZ;AACd,QAAGA,IAAI,CAACC,YAAL,IAAqBX,OAAxB,EAAiC,OAAOU,IAAI,CAACC,YAAL,GAAoBC,QAApB,CAA6B,QAA7B,CAAP;AACjC,QAAGF,IAAI,CAACG,QAAR,EAAkB,OAAOH,IAAI,CAACG,QAAL,EAAP;AAClB,QAAGH,IAAI,CAACI,KAAL,IAAcJ,IAAI,CAACI,KAAL,CAAWC,UAA5B,EAAwC,OAAOb,MAAM,CAACc,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BT,IAAI,CAACI,KAAL,CAAWC,UAAX,EAA3B,EAAmD,CAAnD,CAAD,CAAb;AACxC,WAAO,IAAP;AACA;;AAED,WAASK,cAAT,CAAwBC,GAAxB,EAA6BC,IAA7B,EAAmC;AAClC,QAAIC,CAAC,GAAGD,IAAR;AAAc,QAAGD,GAAG,CAACG,KAAJ,CAAUD,CAAV,CAAH,EAAiB,OAAOF,GAAG,CAACG,KAAJ,CAAUD,CAAV,CAAP;AAC/BA,IAAAA,CAAC,GAAGD,IAAI,CAACG,WAAL,EAAJ;AAAwB,QAAGJ,GAAG,CAACG,KAAJ,CAAUD,CAAV,CAAH,EAAiB,OAAOF,GAAG,CAACG,KAAJ,CAAUD,CAAV,CAAP;AACzCA,IAAAA,CAAC,GAAGA,CAAC,CAACG,OAAF,CAAU,KAAV,EAAgB,IAAhB,CAAJ;AAA2B,QAAGL,GAAG,CAACG,KAAJ,CAAUD,CAAV,CAAH,EAAiB,OAAOF,GAAG,CAACG,KAAJ,CAAUD,CAAV,CAAP;AAC5C,WAAO,IAAP;AACA;;AAED,WAASI,UAAT,CAAoBN,GAApB,EAAyBC,IAAzB,EAA+B;AAC9B,QAAIlB,CAAC,GAAGgB,cAAc,CAACC,GAAD,EAAMC,IAAN,CAAtB;AACA,QAAGlB,CAAC,IAAI,IAAR,EAAc,MAAM,IAAIL,KAAJ,CAAU,sBAAsBuB,IAAtB,GAA6B,SAAvC,CAAN;AACd,WAAOlB,CAAP;AACA;;AAED,WAASwB,UAAT,CAAoBP,GAApB,EAAyBC,IAAzB,EAA+BO,IAA/B,EAAqC;AACpC,QAAG,CAACA,IAAJ,EAAU,OAAOpB,OAAO,CAACkB,UAAU,CAACN,GAAD,EAAMC,IAAN,CAAX,CAAd;AACV,QAAG,CAACA,IAAJ,EAAU,OAAO,IAAP;;AACV,QAAI;AAAE,aAAOM,UAAU,CAACP,GAAD,EAAMC,IAAN,CAAjB;AAA+B,KAArC,CAAsC,OAAMzB,CAAN,EAAS;AAAE,aAAO,IAAP;AAAc;AAC/D;;AAED,MAAIiC,GAAJ,EAASC,KAAT;;AACA,MAAG,OAAOC,KAAP,KAAiB,WAApB,EAAiCD,KAAK,GAAGC,KAAR;;AACjC,MAAI,OAAOC,OAAP,KAAmB,WAAvB,EAAoC;AACnC,QAAI,OAAOtC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACsC,OAA5C,EAAqD;AACpD,UAAGjC,OAAO,IAAI,OAAO+B,KAAP,KAAiB,WAA/B,EAA4CA,KAAK,GAAGnC,OAAO,CAAC,OAAK,KAAN,CAAf;AAC5C,UAAG,OAAOmC,KAAP,KAAiB,WAApB,EAAiCA,KAAK,GAAGnC,OAAO,CAAC,SAAO,KAAR,CAAP,CAAsBoC,KAA9B;AACjCF,MAAAA,GAAG,GAAGlC,OAAO,CAAC,MAAI,GAAL,CAAb;AACA;AACD;;AACD,MAAIsC,SAAS,GAAC,0BAAd;AACA,MAAIC,QAAQ,GAAC,UAAb;AACA,MAAIC,OAAO,GAAC,OAAZ;AAAA,MAAqBC,QAAQ,GAAG,YAAhC;;AACA,WAASC,WAAT,CAAqBC,GAArB,EAA0BC,SAA1B,EAAqC;AACpC,QAAIC,CAAC,GAAG,EAAR;AACA,QAAIC,EAAE,GAAG,CAAT;AAAA,QAAYC,CAAC,GAAG,CAAhB;;AACA,WAAMD,EAAE,KAAKH,GAAG,CAACjC,MAAjB,EAAyB,EAAEoC,EAA3B;AAA+B,UAAG,CAACC,CAAC,GAAGJ,GAAG,CAACK,UAAJ,CAAeF,EAAf,CAAL,MAA6B,EAA7B,IAAmCC,CAAC,KAAK,EAAzC,IAA+CA,CAAC,KAAK,EAAxD,EAA4D;AAA3F;;AACA,QAAG,CAACH,SAAJ,EAAeC,CAAC,CAAC,CAAD,CAAD,GAAOF,GAAG,CAACM,MAAJ,CAAW,CAAX,EAAcH,EAAd,CAAP;AACf,QAAGA,EAAE,KAAKH,GAAG,CAACjC,MAAd,EAAsB,OAAOmC,CAAP;AACtB,QAAIK,CAAC,GAAGP,GAAG,CAACQ,KAAJ,CAAUb,SAAV,CAAR;AAAA,QAA8Bc,CAAC,GAAC,CAAhC;AAAA,QAAmCC,CAAC,GAAC,EAArC;AAAA,QAAyCC,CAAC,GAAC,EAA3C;AAAA,QAA+C7C,CAAC,GAAC,CAAjD;AAAA,QAAoD8C,CAAC,GAAC,EAAtD;AAAA,QAA0DC,EAAE,GAAC,EAA7D;AACA,QAAGN,CAAH,EAAM,KAAIzC,CAAC,GAAG,CAAR,EAAWA,CAAC,IAAIyC,CAAC,CAACxC,MAAlB,EAA0B,EAAED,CAA5B,EAA+B;AACpC+C,MAAAA,EAAE,GAAGN,CAAC,CAACzC,CAAD,CAAN;;AACA,WAAIsC,CAAC,GAAC,CAAN,EAASA,CAAC,IAAIS,EAAE,CAAC9C,MAAjB,EAAyB,EAAEqC,CAA3B;AAA8B,YAAGS,EAAE,CAACR,UAAH,CAAcD,CAAd,MAAqB,EAAxB,EAA4B;AAA1D;;AACAQ,MAAAA,CAAC,GAAGC,EAAE,CAACP,MAAH,CAAU,CAAV,EAAYF,CAAZ,CAAJ;AAAoBO,MAAAA,CAAC,GAAGE,EAAE,CAACC,SAAH,CAAaV,CAAC,GAAC,CAAf,EAAkBS,EAAE,CAAC9C,MAAH,GAAU,CAA5B,CAAJ;;AACpB,WAAI0C,CAAC,GAAC,CAAN,EAAQA,CAAC,IAAEG,CAAC,CAAC7C,MAAb,EAAoB,EAAE0C,CAAtB;AAAyB,YAAGG,CAAC,CAACP,UAAF,CAAaI,CAAb,MAAoB,EAAvB,EAA2B;AAApD;;AACA,UAAGA,CAAC,KAAGG,CAAC,CAAC7C,MAAT,EAAiBmC,CAAC,CAACU,CAAD,CAAD,GAAOD,CAAP,CAAjB,KACKT,CAAC,CAAC,CAACO,CAAC,KAAG,CAAJ,IAASG,CAAC,CAACN,MAAF,CAAS,CAAT,EAAW,CAAX,MAAgB,OAAzB,GAAiC,OAAjC,GAAyC,EAA1C,IAA8CM,CAAC,CAACN,MAAF,CAASG,CAAC,GAAC,CAAX,CAA/C,CAAD,GAAiEE,CAAjE;AACL;AACD,WAAOT,CAAP;AACA;;AACD,WAASa,QAAT,CAAkBC,CAAlB,EAAqB;AAAE,WAAOA,CAAC,CAAC7B,OAAF,CAAUW,QAAV,EAAoB,KAApB,CAAP;AAAoC;;AAE3D,MAAImB,SAAS,GAAG;AACf,cAAU,GADK;AAEf,cAAU,GAFK;AAGf,YAAQ,GAHO;AAIf,YAAQ,GAJO;AAKf,aAAS;AALM,GAAhB;AAOA,MAAIC,SAAS,GAAG;AACf,SAAK,QADU;AAEf,SAAK,QAFU;AAGf,SAAK,MAHU;AAIf,SAAK,MAJU;AAKf,SAAK;AALU,GAAhB;AAOA,MAAIC,OAAO,GAAG,SAASC,KAAT,CAAe,EAAf,CAAd,CA5FwB,CA8FxB;;AACA,MAAIC,QAAQ,GAAG,WAAf;AAAA,MAA4BC,SAAS,GAAG,mBAAxC;;AACA,WAASC,WAAT,CAAqBC,IAArB,EAA0B;AACzB,QAAIC,CAAC,GAAGD,IAAI,GAAG,EAAf;AACA,WAAOC,CAAC,CAACtC,OAAF,CAAUkC,QAAV,EAAoB,UAASK,EAAT,EAAa;AAAE,aAAOT,SAAS,CAACS,EAAD,CAAhB;AAAuB,KAA1D,EAA4DvC,OAA5D,CAAoEmC,SAApE,EAA8E,UAASf,CAAT,EAAWH,CAAX,EAAc;AAAC,aAAOpC,MAAM,CAACC,YAAP,CAAoB0D,QAAQ,CAACvB,CAAD,EAAG,EAAH,CAA5B,CAAP;AAA4C,KAAzI,CAAP;AACA;;AACD,MAAIwB,QAAQ,GAAC,UAAb;AAAA,MAAyBC,QAAQ,GAAG,+BAApC;;AACA,WAASC,SAAT,CAAmBN,IAAnB,EAAwB;AACvB,QAAIC,CAAC,GAAGD,IAAI,GAAG,EAAf;AACA,WAAOC,CAAC,CAACtC,OAAF,CAAUyC,QAAV,EAAoB,UAASG,CAAT,EAAY;AAAE,aAAOb,SAAS,CAACa,CAAD,CAAhB;AAAsB,KAAxD,EAA0D5C,OAA1D,CAAkE0C,QAAlE,EAA2E,UAASJ,CAAT,EAAY;AAAE,aAAO,OAAO,CAAC,QAAMA,CAAC,CAACpB,UAAF,CAAa,CAAb,EAAgBhC,QAAhB,CAAyB,EAAzB,CAAP,EAAqCiC,MAArC,CAA4C,CAAC,CAA7C,CAAP,GAAyD,GAAhE;AAAqE,KAA9J,CAAP;AACA;;AAED,WAAS0B,YAAT,CAAsBC,KAAtB,EAA6BjC,GAA7B,EAAkC;AACjC,YAAOiC,KAAP;AACC,WAAK,GAAL;AAAU,WAAK,MAAL;AAAa,WAAK,MAAL;AAAa,eAAO,IAAP;;AACpC;;AACA;AAAS,eAAO,KAAP;AAHV;AAKA;;AAED,WAASC,OAAT,CAAiBvB,CAAjB,EAAoB;AACnB,QAAIwB,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAW1B,CAAX,CAAZ;AACA,WAAO,CAACwB,KAAK,GAAG,aAAT,KAA2B,KAAK,EAAL,GAAU,EAAV,GAAe,IAA1C,CAAP;AACA;AAED;;;AACA,WAASG,YAAT,CAAsBb,CAAtB,EAAyB;AACxB,QAAIc,GAAG,GAAG,CAAV;AAAA,QAAaC,EAAE,GAAG,CAAlB;AAAA,QAAqBC,IAAI,GAAG,KAA5B;AACA,QAAIlC,CAAC,GAAGkB,CAAC,CAACjB,KAAF,CAAQ,4EAAR,CAAR;AACA,QAAG,CAACD,CAAJ,EAAO,MAAM,IAAI/C,KAAJ,CAAU,MAAMiE,CAAN,GAAU,8BAApB,CAAN;;AACP,SAAI,IAAI3D,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAIyC,CAAC,CAACxC,MAAtB,EAA8B,EAAED,CAAhC,EAAmC;AAClC,UAAG,CAACyC,CAAC,CAACzC,CAAD,CAAL,EAAU;AACV0E,MAAAA,EAAE,GAAG,CAAL;AACA,UAAG1E,CAAC,GAAG,CAAP,EAAU2E,IAAI,GAAG,IAAP;;AACV,cAAOlC,CAAC,CAACzC,CAAD,CAAD,CAAKwC,MAAL,CAAYC,CAAC,CAACzC,CAAD,CAAD,CAAKC,MAAL,GAAY,CAAxB,CAAP;AACC,aAAK,GAAL;AACC,gBAAM,IAAIP,KAAJ,CAAU,qCAAqC+C,CAAC,CAACzC,CAAD,CAAD,CAAKwC,MAAL,CAAYC,CAAC,CAACzC,CAAD,CAAD,CAAKC,MAAL,GAAY,CAAxB,CAA/C,CAAN;;AACD,aAAK,GAAL;AAAUyE,UAAAA,EAAE,IAAI,EAAN;;AACT;;AACD,aAAK,GAAL;AAAUA,UAAAA,EAAE,IAAI,EAAN;;AACT;;AACD,aAAK,GAAL;AACC,cAAG,CAACC,IAAJ,EAAU,MAAM,IAAIjF,KAAJ,CAAU,mCAAV,CAAN,CAAV,KACKgF,EAAE,IAAI,EAAN;;AACL;;AACD,aAAK,GAAL;AAAU;AAXX;;AAaAD,MAAAA,GAAG,IAAIC,EAAE,GAAGb,QAAQ,CAACpB,CAAC,CAACzC,CAAD,CAAF,EAAO,EAAP,CAApB;AACA;;AACD,WAAOyE,GAAP;AACA;AACD;;;AACA,WAASG,cAAT,CAAwBC,CAAxB,EAA2B;AAC1B,QAAGlF,OAAO,IAAIC,MAAM,CAACkF,QAAP,CAAgBD,CAAhB,CAAd,EAAkC,OAAOA,CAAC,CAACtE,QAAF,CAAW,MAAX,CAAP;AAClC,QAAG,OAAOsE,CAAP,KAAa,QAAhB,EAA0B,OAAOA,CAAP;AAC1B,UAAM,MAAN;AACA;;AAED,MAAIE,SAAS,GAAG,qCAAhB;AACA;;AACA,MAAIC,MAAM,GAAG,gDAAb;;AACA,MAAIC,cAAc,GAAG,SAAjBA,cAAiB,CAASJ,CAAT,EAAYK,IAAZ,EAAkB;AACtC,QAAIC,GAAG,GAAGP,cAAc,CAACC,CAAD,CAAxB;AACA,QAAIO,EAAJ;AACA,QAAIC,KAAJ;;AACA,WAAOD,EAAE,GAAGL,SAAS,CAACO,IAAV,CAAeH,GAAf,CAAZ;AAAkC,cAAOC,EAAE,CAAC,CAAD,CAAT;AACjC,aAAK,UAAL;AAAiB;AAAO;;AACxB,aAAK,YAAL;AAAmB;AAClBC,UAAAA,KAAK,GAAGpD,WAAW,CAACmD,EAAE,CAAC,CAAD,CAAH,CAAnB;AACA,cAAGC,KAAK,CAACE,IAAN,IAAc,GAAd,IAAqBF,KAAK,CAACG,IAAN,KAAeR,MAAvC,EAA+C,MAAM,IAAItF,KAAJ,CAAU,wCAAV,CAAN;AAC/C;;AACD,aAAK,iBAAL,CANiC,CAMT;;AACxB,aAAK,WAAL,CAPiC,CAOf;;AAClB,aAAK,sBAAL,CARiC,CAQJ;;AAC7B,aAAK,gBAAL;AAAuB;AACtB,gBAAM,IAAIA,KAAJ,CAAU,4BAAV,CAAN;;AACD;AAAS,gBAAM0F,EAAN;AAXwB;AAAlC;AAaA,GAjBD;;AAkBA,MAAIK,YAAY,GAAG,SAAfA,YAAe,CAAS/B,IAAT,EAAexB,GAAf,EAAoB;AACtC,WAAOwD,QAAQ,CAAChC,IAAI,CAACrC,OAAL,CAAa,aAAb,EAA2B,GAA3B,EAAgCA,OAAhC,CAAwC,UAAxC,EAAmD,EAAnD,CAAD,CAAf;AACA,GAFD;;AAIA,MAAIqE,QAAQ,GAAG,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACvC,QAAIC,GAAG,GAAG,EAAV;AAAA,QAAc7F,CAAC,GAAG,CAAlB;AAAA,QAAqBsC,CAAC,GAAG,CAAzB;AAAA,QAA4BuC,CAAC,GAAG,CAAhC;AAAA,QAAmCrF,CAAC,GAAG,CAAvC;AAAA,QAA0C0B,CAAC,GAAG,CAA9C;AAAA,QAAiD0B,CAAC,GAAG,CAArD;;AACA,WAAO5C,CAAC,GAAG4F,IAAI,CAAC3F,MAAhB,EAAwB;AACvBqC,MAAAA,CAAC,GAAGsD,IAAI,CAACrD,UAAL,CAAgBvC,CAAC,EAAjB,CAAJ;;AACA,UAAIsC,CAAC,GAAG,GAAR,EAAa;AAAEuD,QAAAA,GAAG,IAAI3F,MAAM,CAACC,YAAP,CAAoBmC,CAApB,CAAP;AAA+B;AAAW;;AACzDuC,MAAAA,CAAC,GAAGe,IAAI,CAACrD,UAAL,CAAgBvC,CAAC,EAAjB,CAAJ;;AACA,UAAIsC,CAAC,GAAC,GAAF,IAASA,CAAC,GAAC,GAAf,EAAoB;AAAEuD,QAAAA,GAAG,IAAI3F,MAAM,CAACC,YAAP,CAAqB,CAACmC,CAAC,GAAG,EAAL,KAAY,CAAb,GAAmBuC,CAAC,GAAG,EAA3C,CAAP;AAAwD;AAAW;;AACzFrF,MAAAA,CAAC,GAAGoG,IAAI,CAACrD,UAAL,CAAgBvC,CAAC,EAAjB,CAAJ;;AACA,UAAIsC,CAAC,GAAG,GAAR,EAAa;AAAEuD,QAAAA,GAAG,IAAI3F,MAAM,CAACC,YAAP,CAAqB,CAACmC,CAAC,GAAG,EAAL,KAAY,EAAb,GAAoB,CAACuC,CAAC,GAAG,EAAL,KAAY,CAAhC,GAAsCrF,CAAC,GAAG,EAA9D,CAAP;AAA2E;AAAW;;AACrG0B,MAAAA,CAAC,GAAG0E,IAAI,CAACrD,UAAL,CAAgBvC,CAAC,EAAjB,CAAJ;AACA4C,MAAAA,CAAC,GAAG,CAAE,CAACN,CAAC,GAAG,CAAL,KAAW,EAAZ,GAAmB,CAACuC,CAAC,GAAG,EAAL,KAAY,EAA/B,GAAsC,CAACrF,CAAC,GAAG,EAAL,KAAY,CAAlD,GAAwD0B,CAAC,GAAG,EAA7D,IAAkE,KAAtE;AACA2E,MAAAA,GAAG,IAAI3F,MAAM,CAACC,YAAP,CAAoB,UAAWyC,CAAC,KAAG,EAAL,GAAS,IAAnB,CAApB,CAAP;AACAiD,MAAAA,GAAG,IAAI3F,MAAM,CAACC,YAAP,CAAoB,UAAUyC,CAAC,GAAC,IAAZ,CAApB,CAAP;AACA;;AACD,WAAOiD,GAAP;AACA,GAfD;;AAgBA,MAAIC,iBAAiB,GAAI,YAAW;AAEnC,QAAIC,cAAc,GAAG;AACpB;AACAC,MAAAA,GAAG,EAAE,CAAC,GAAD,EAAM,IAAN,CAFe;AAGpBC,MAAAA,KAAK,EAAE,CAAC,GAAD,EAAM,IAAN,CAHa;AAIpBC,MAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,IAAN,CAJc;AAKpBC,MAAAA,KAAK,EAAE,CAAC,GAAD,EAAM,IAAN,CALa;AAMpBC,MAAAA,OAAO,EAAE,CAAC,GAAD,EAAM,IAAN,CANW;AAOpBC,MAAAA,OAAO,EAAE,CAAC,GAAD,EAAM,IAAN,CAPW;AAQpB,eAAS,CAAC,KAAD,EAAQ,OAAR,CARW;AASpB,qBAAe,CAAC,KAAD,EAAQ,MAAR;AATK,KAArB;AAYA,WAAO,SAASC,GAAT,CAAazB,CAAb,EAAgBK,IAAhB,EAAsB;AAC5B,UAAIC,GAAG,GAAGP,cAAc,CAACC,CAAD,CAAxB;AACA,UAAI0B,KAAK,GAAG,EAAZ;AAAA,UAAgBC,GAAhB;AACA,UAAItE,GAAJ;AACA,UAAIuE,KAAJ,EAAWC,EAAX,EAAeC,IAAf;AACA,UAAIC,OAAJ;AACA,UAAIC,MAAM,GAAG,EAAb;AAAA,UAAiBC,UAAU,GAAG,EAA9B;AAAA,UAAkCC,EAAE,GAAG,EAAvC;AACA,UAAI3B,EAAJ,EAAQtC,CAAR;AACA,UAAIkE,IAAJ;AACA,UAAIC,KAAJ,EAAWC,QAAX,EAAqBC,QAArB;AACA,UAAIC,CAAJ;AAAA,UAAOC,CAAP;AAAA,UAAUC,KAAK,GAAG;AAAC3D,QAAAA,CAAC,EAAE;AAAC4D,UAAAA,CAAC,EAAC,OAAH;AAAWjF,UAAAA,CAAC,EAAC;AAAb,SAAJ;AAA4B9C,QAAAA,CAAC,EAAE;AAAC+H,UAAAA,CAAC,EAAC,CAAH;AAAMjF,UAAAA,CAAC,EAAC;AAAR;AAA/B,OAAlB;AACA,UAAIkF,iBAAiB,GAAG,EAAxB;AACA,UAAIC,MAAM,GAAG,EAAb;AAAA,UAAiBC,MAAM,GAAG,EAA1B;AAAA,UAA8BC,EAAE,GAAG,CAAnC;AAAA,UAAsCC,EAAE,GAAG,CAA3C;;AAEA,aAAOxC,EAAE,GAAGL,SAAS,CAACO,IAAV,CAAeH,GAAf,CAAZ;AAAkC,gBAAOC,EAAE,CAAC,CAAD,CAAT;AAEjC,eAAK,OAAL;AAAc;AACb,gBAAGA,EAAE,CAAC,CAAD,CAAF,KAAQ,GAAX,EAAgB;AACf,kBAAGkC,KAAK,CAAC9H,CAAN,CAAQ8C,CAAR,IAAagF,KAAK,CAAC3D,CAAN,CAAQrB,CAArB,IAA0BgF,KAAK,CAAC9H,CAAN,CAAQ+H,CAAR,IAAaD,KAAK,CAAC3D,CAAN,CAAQ4D,CAAlD,EAAqDR,EAAE,CAAC,MAAD,CAAF,GAAa5H,SAAS,GAAG0I,YAAZ,CAAyBP,KAAzB,CAAb;AACrD,kBAAGG,MAAM,CAACxH,MAAV,EAAkB8G,EAAE,CAAC,SAAD,CAAF,GAAgBU,MAAhB;AAClBX,cAAAA,UAAU,CAACgB,IAAX,CAAgBlB,OAAO,CAACmB,IAAxB;AACAlB,cAAAA,MAAM,CAACD,OAAO,CAACmB,IAAT,CAAN,GAAuBhB,EAAvB;AACA,aALD,MAMK,IAAG3B,EAAE,CAAC,CAAD,CAAF,CAAM4C,MAAN,CAAa5C,EAAE,CAAC,CAAD,CAAF,CAAMnF,MAAN,GAAa,CAA1B,MAAiC,GAApC,EAAyC;AAC7C2G,cAAAA,OAAO,GAAG3E,WAAW,CAACmD,EAAE,CAAC,CAAD,CAAH,CAArB;AACAgC,cAAAA,CAAC,GAAGC,CAAC,GAAG,CAAC,CAAT;AACAC,cAAAA,KAAK,CAAC3D,CAAN,CAAQ4D,CAAR,GAAYD,KAAK,CAAC3D,CAAN,CAAQrB,CAAR,GAAY,QAAxB;AAAkCgF,cAAAA,KAAK,CAAC9H,CAAN,CAAQ+H,CAAR,GAAYD,KAAK,CAAC9H,CAAN,CAAQ8C,CAAR,GAAY,CAAxB;AAClCyE,cAAAA,EAAE,GAAG,EAAL;AAASU,cAAAA,MAAM,GAAG,EAAT;AACT;;AACD;;AAED,eAAK,WAAL;AAAkB;AACjB,gBAAGrC,EAAE,CAAC,CAAD,CAAF,KAAU,GAAb,EAAkB;AAClB,cAAEgC,CAAF;AAAKC,YAAAA,CAAC,GAAG,CAAC,CAAL;AAAQ;;AACd,eAAK,oBAAL;AAA2B;AAC1B,cAAEA,CAAF;AAAK;;AAAO;;AACb,eAAK,YAAL;AACC,gBAAGjC,EAAE,CAAC,CAAD,CAAF,CAAM4C,MAAN,CAAa5C,EAAE,CAAC,CAAD,CAAF,CAAMnF,MAAN,GAAa,CAA1B,MAAiC,GAApC,EAAyC;AACxC+G,cAAAA,IAAI,GAAG/E,WAAW,CAACmD,EAAE,CAAC,CAAD,CAAH,CAAlB;AACA,kBAAG4B,IAAI,CAAC,yBAAD,CAAP,EAAoCK,CAAC,IAAGxD,QAAQ,CAACmD,IAAI,CAAC,yBAAD,CAAL,EAAkC,EAAlC,CAAZ,CAApC,KACK,EAAEK,CAAF;AACL,aAJD,MAKK,IAAGjC,EAAE,CAAC,CAAD,CAAF,KAAQ,GAAX,EAAgB;AACpB,gBAAEiC,CAAF;AACA,kBAAGA,CAAC,GAAGC,KAAK,CAAC9H,CAAN,CAAQ8C,CAAf,EAAkBgF,KAAK,CAAC9H,CAAN,CAAQ8C,CAAR,GAAY+E,CAAZ;AAClB,kBAAGD,CAAC,GAAGE,KAAK,CAAC9H,CAAN,CAAQ+H,CAAf,EAAkBD,KAAK,CAAC9H,CAAN,CAAQ+H,CAAR,GAAYH,CAAZ;AAClB,kBAAGC,CAAC,GAAGC,KAAK,CAAC3D,CAAN,CAAQrB,CAAf,EAAkBgF,KAAK,CAAC3D,CAAN,CAAQrB,CAAR,GAAY+E,CAAZ;AAClB,kBAAGD,CAAC,GAAGE,KAAK,CAAC3D,CAAN,CAAQ4D,CAAf,EAAkBD,KAAK,CAAC3D,CAAN,CAAQ4D,CAAR,GAAYH,CAAZ;AAClBJ,cAAAA,IAAI,GAAG/E,WAAW,CAACmD,EAAE,CAAC,CAAD,CAAH,CAAlB;AACAtC,cAAAA,CAAC,GAAG;AAACmF,gBAAAA,CAAC,EAACjB,IAAI,CAAC,YAAD,CAAP;AAAuBnE,gBAAAA,CAAC,EAAC;AAAzB,eAAJ;;AACA,kBAAGmE,IAAI,CAAC,wBAAD,CAAJ,IAAkCA,IAAI,CAAC,qBAAD,CAAzC,EAAkE;AACjEW,gBAAAA,EAAE,GAAG9D,QAAQ,CAACmD,IAAI,CAAC,qBAAD,CAAL,EAA6B,EAA7B,CAAR,IAA4C,CAAjD;AACAY,gBAAAA,EAAE,GAAG/D,QAAQ,CAACmD,IAAI,CAAC,wBAAD,CAAL,EAAgC,EAAhC,CAAR,IAA+C,CAApD;AACAU,gBAAAA,MAAM,GAAG;AAAC/D,kBAAAA,CAAC,EAAE;AAAC4D,oBAAAA,CAAC,EAACH,CAAH;AAAK9E,oBAAAA,CAAC,EAAC+E;AAAP,mBAAJ;AAAe7H,kBAAAA,CAAC,EAAC;AAAC+H,oBAAAA,CAAC,EAACH,CAAC,GAAGO,EAAJ,GAAO,CAAV;AAAYrF,oBAAAA,CAAC,EAAC+E,CAAC,GAAGO,EAAJ,GAAO;AAArB;AAAjB,iBAAT;AACAH,gBAAAA,MAAM,CAACK,IAAP,CAAYJ,MAAZ;AACA;AACD;;;AACA,sBAAO5E,CAAC,CAACmF,CAAT;AACC,qBAAK,SAAL;AAAgBnF,kBAAAA,CAAC,CAACmF,CAAF,GAAM,GAAN;AAAWnF,kBAAAA,CAAC,CAACD,CAAF,GAAMqB,YAAY,CAAC8C,IAAI,CAAC,eAAD,CAAL,CAAlB;AAA2C;;AACtE,qBAAK,OAAL;AAAclE,kBAAAA,CAAC,CAACmF,CAAF,GAAM,GAAN;AAAWnF,kBAAAA,CAAC,CAACD,CAAF,GAAMqF,UAAU,CAAClB,IAAI,CAAC7C,KAAN,CAAhB;AAA8B;;AACvD,qBAAK,YAAL;AAAmBrB,kBAAAA,CAAC,CAACmF,CAAF,GAAM,GAAN;AAAWnF,kBAAAA,CAAC,CAACD,CAAF,GAAMqF,UAAU,CAAClB,IAAI,CAAC7C,KAAN,CAAhB;AAA8B;;AAC5D,qBAAK,UAAL;AAAiBrB,kBAAAA,CAAC,CAACmF,CAAF,GAAM,GAAN;AAAWnF,kBAAAA,CAAC,CAACD,CAAF,GAAMqF,UAAU,CAAClB,IAAI,CAAC7C,KAAN,CAAhB;AAA8B;;AAC1D,qBAAK,MAAL;AAAarB,kBAAAA,CAAC,CAACmF,CAAF,GAAM,GAAN;AAAWnF,kBAAAA,CAAC,CAACD,CAAF,GAAMuB,OAAO,CAAC4C,IAAI,CAAC,YAAD,CAAL,CAAb;AAAmClE,kBAAAA,CAAC,CAACV,CAAF,GAAM,QAAN;AAAgB;;AAC3E,qBAAK,MAAL;AAAaU,kBAAAA,CAAC,CAACmF,CAAF,GAAM,GAAN;AAAWnF,kBAAAA,CAAC,CAACD,CAAF,GAAM2B,YAAY,CAACwC,IAAI,CAAC,YAAD,CAAL,CAAZ,GAAiC,KAAvC;AAA8C;;AACtE,qBAAK,QAAL;AAAelE,kBAAAA,CAAC,CAACmF,CAAF,GAAM,GAAN;AAAW;;AAC1B;AAAS,wBAAM,IAAIvI,KAAJ,CAAU,4BAA4BoD,CAAC,CAACmF,CAAxC,CAAN;AARV;AAUA,aAzBI,MAyBE;AACN,kBAAGnF,CAAC,CAACmF,CAAF,KAAQ,GAAX,EAAgBnF,CAAC,CAACD,CAAF,GAAMoE,KAAN;AAChB,kBAAGA,KAAH,EAAUnE,CAAC,CAACF,CAAF,GAAMqE,KAAN;AACV,kBAAG,EAAE/B,IAAI,CAACiD,SAAL,IAAkBjD,IAAI,CAACiD,SAAL,GAAiBf,CAArC,CAAH,EAA4CL,EAAE,CAAC5H,SAAS,GAAGiJ,WAAZ,CAAwB;AAACb,gBAAAA,CAAC,EAACH,CAAH;AAAK9E,gBAAAA,CAAC,EAAC+E;AAAP,eAAxB,CAAD,CAAF,GAAyCvE,CAAzC;AAC5CA,cAAAA,CAAC,GAAG,IAAJ;AACA;;AACD;AAAO;;AAER;;AACA,eAAK,kBAAL,CA9DiC,CA8DR;;AACzB,eAAK,aAAL,CA/DiC,CA+Db;;AACpB,eAAK,SAAL,CAhEiC,CAgEjB;;AAChB,eAAK,iBAAL;AAAwB;AACvB,gBAAGsC,EAAE,CAAC,CAAD,CAAF,KAAQ,GAAX,EAAe;AAAC,kBAAG,CAACoB,GAAG,GAACD,KAAK,CAAC8B,GAAN,EAAL,EAAkB,CAAlB,MAAuBjD,EAAE,CAAC,CAAD,CAA5B,EAAiC,MAAM,gBAAcoB,GAApB;AAAyB,aAA1E,MACK,IAAGpB,EAAE,CAAC,CAAD,CAAF,CAAM4C,MAAN,CAAa5C,EAAE,CAAC,CAAD,CAAF,CAAMnF,MAAN,GAAa,CAA1B,MAAiC,GAApC,EAAyCsG,KAAK,CAACuB,IAAN,CAAW,CAAC1C,EAAE,CAAC,CAAD,CAAH,EAAQ,IAAR,CAAX;;AAC9C;;AAED;;AACA,eAAK,QAAL,CAvEiC,CAuElB;;AACf,eAAK,OAAL;AAAc;AACb,gBAAGA,EAAE,CAAC,CAAD,CAAF,KAAQ,GAAX,EAAe;AAAC,kBAAG,CAACoB,GAAG,GAACD,KAAK,CAAC8B,GAAN,EAAL,EAAkB,CAAlB,MAAuBjD,EAAE,CAAC,CAAD,CAA5B,EAAiC,MAAM,gBAAcoB,GAApB;AAAyB,aAA1E,MACK,IAAGpB,EAAE,CAAC,CAAD,CAAF,CAAM4C,MAAN,CAAa5C,EAAE,CAAC,CAAD,CAAF,CAAMnF,MAAN,GAAa,CAA1B,MAAiC,GAApC,EAAyCsG,KAAK,CAACuB,IAAN,CAAW,CAAC1C,EAAE,CAAC,CAAD,CAAH,EAAQ,KAAR,CAAX;;AAC9C;;AAED,eAAK,cAAL,CA7EiC,CA6EZ;;AACrB,eAAK,kBAAL,CA9EiC,CA8ER;;AACzB,eAAK,YAAL,CA/EiC,CA+Ed;;AACnB,eAAK,YAAL;AAAmB;AAClB,gBAAGA,EAAE,CAAC,CAAD,CAAF,KAAQ,GAAX,EAAe;AACdoC,cAAAA,iBAAiB,CAACf,KAAK,CAACsB,IAAP,CAAjB,GAAgCrB,EAAhC;AACA,kBAAG,CAACF,GAAG,GAACD,KAAK,CAAC8B,GAAN,EAAL,EAAkB,CAAlB,MAAuBjD,EAAE,CAAC,CAAD,CAA5B,EAAiC,MAAM,gBAAcoB,GAApB;AACjC,aAHD,MAGO,IAAGpB,EAAE,CAAC,CAAD,CAAF,CAAM4C,MAAN,CAAa5C,EAAE,CAAC,CAAD,CAAF,CAAMnF,MAAN,GAAa,CAA1B,MAAiC,GAApC,EAAyC;AAC/CyG,cAAAA,EAAE,GAAG,EAAL;AACAD,cAAAA,KAAK,GAAGxE,WAAW,CAACmD,EAAE,CAAC,CAAD,CAAH,CAAnB;AACAmB,cAAAA,KAAK,CAACuB,IAAN,CAAW,CAAC1C,EAAE,CAAC,CAAD,CAAH,EAAQ,IAAR,CAAX;AACA;;AAAC;;AAEH,eAAK,QAAL;AAAe;AAAO;;AACtB,eAAK,kBAAL;AAAyB;AAAO;;AAEhC,eAAK,OAAL;AAAc;AAAO;;AACrB,eAAK,WAAL;AAAkB;AAAO;;AAEzB,eAAK,sBAAL;AAA6B;AAAO;;AACpC,eAAK,kBAAL;AAAyB;AAAO;;AAChC,eAAK,yBAAL;AAAgC;AAAO;;AACvC,eAAK,sBAAL;AAA6B;AAAO;;AACpC,eAAK,uBAAL;AAA8B;AAAO;;AAErC,eAAK,QAAL;AAAe;AACd,oBAAOmB,KAAK,CAACA,KAAK,CAACtG,MAAN,GAAa,CAAd,CAAL,CAAsB,CAAtB,CAAP;AACC,mBAAK,YAAL;AACA,mBAAK,YAAL;AACCiC,gBAAAA,GAAG,GAAGD,WAAW,CAACmD,EAAE,CAAC,CAAD,CAAH,CAAjB;AACAsB,gBAAAA,EAAE,IAAIX,cAAc,CAACX,EAAE,CAAC,CAAD,CAAH,CAAd,CAAsBlD,GAAG,CAACoG,KAAJ,KAAY,MAAZ,GAAmB,CAAnB,GAAqB,CAA3C,CAAN;AAAqD;AAJvD;;AAKE;;AAEH,eAAK,KAAL,CA9GiC,CA8GrB;;AACZ,eAAK,OAAL,CA/GiC,CA+GnB;;AACd,eAAK,MAAL,CAhHiC,CAgHpB;;AACb,eAAK,KAAL,CAjHiC,CAiHrB;;AACZ,eAAK,aAAL,CAlHiC,CAkHb;;AACpB,eAAK,cAAL,CAnHiC,CAmHZ;;AACrB,eAAK,SAAL,CApHiC,CAoHjB;;AAChB,eAAK,OAAL,CArHiC,CAqHnB;;AACd,eAAK,SAAL,CAtHiC,CAsHjB;;AAChB,eAAK,SAAL,CAvHiC,CAuHjB;;AAChB,eAAK,OAAL;AAAc;AACb,oBAAO/B,KAAK,CAACA,KAAK,CAACtG,MAAN,GAAa,CAAd,CAAL,CAAsB,CAAtB,CAAP;AACC,mBAAK,YAAL;AACA,mBAAK,YAAL;AACCiC,gBAAAA,GAAG,GAAGD,WAAW,CAACmD,EAAE,CAAC,CAAD,CAAH,CAAjB;AACAsB,gBAAAA,EAAE,IAAIX,cAAc,CAACX,EAAE,CAAC,CAAD,CAAH,CAAd,CAAsBlD,GAAG,CAACoG,KAAJ,KAAY,MAAZ,GAAmB,CAAnB,GAAqB,CAA3C,CAAN;AAAqD;AAJvD;;AAKE;;AAEH,eAAK,eAAL;AAAsB;AAAO;;AAC7B,eAAK,SAAL;AAAgB;AAAO;;AACvB,eAAK,YAAL;AAAmB;AAAO;;AAC1B,eAAK,MAAL;AAAa;AACZ,gBAAGlD,EAAE,CAAC,CAAD,CAAF,CAAM5C,MAAN,CAAa,CAAC,CAAd,MAAqB,IAAxB,EAA8B,MAA9B,KACK,IAAG4C,EAAE,CAAC,CAAD,CAAF,KAAQ,GAAX,EAAgB,QAAOmB,KAAK,CAACA,KAAK,CAACtG,MAAN,GAAa,CAAd,CAAL,CAAsB,CAAtB,CAAP;AACpB,mBAAK,cAAL;AACA,mBAAK,YAAL;AACA,mBAAK,YAAL;AACCyG,gBAAAA,EAAE,IAAIvB,GAAG,CAACtE,KAAJ,CAAU8F,IAAV,EAAgBvB,EAAE,CAACmD,KAAnB,CAAN;AACA;AALmB,aAAhB,MAOA5B,IAAI,GAAGvB,EAAE,CAACmD,KAAH,GAAWnD,EAAE,CAAC,CAAD,CAAF,CAAMnF,MAAxB;AACL;;AACD,eAAK,cAAL;AAAqB;AAAO;;AAC5B,eAAK,iBAAL;AAAwB;AAAO;;AAE/B,eAAK,MAAL;AAAa;AAAO;;AAEpB,eAAK,OAAL;AAAc;AAAO;;AACrB,eAAK,cAAL;AAAqB;AAAO;;AAE5B,eAAK,oBAAL;AAA2B;;AAC3B,eAAK,sBAAL;AAA6B;AAAO;;AACpC,eAAK,mBAAL;AAA0B;AAAO;;AACjC,eAAK,aAAL;AAAoB;AAAO;;AAC3B,eAAK,MAAL;AAAa;AAAO;;AACpB,eAAK,GAAL;AACC,gBAAGmF,EAAE,CAAC,CAAD,CAAF,KAAQ,GAAX,EAAgB6B,KAAK,GAAGxB,YAAY,CAACN,GAAG,CAACtE,KAAJ,CAAUqG,QAAV,EAAmB9B,EAAE,CAACmD,KAAtB,CAAD,EAA+BpB,QAA/B,CAApB,CAAhB,KACK;AAAEA,cAAAA,QAAQ,GAAGlF,WAAW,CAACmD,EAAE,CAAC,CAAD,CAAH,CAAtB;AAA+B8B,cAAAA,QAAQ,GAAG9B,EAAE,CAACmD,KAAH,GAAWnD,EAAE,CAAC,CAAD,CAAF,CAAMnF,MAA5B;AAAqC;AAC3E;AAAO;;AACR,eAAK,GAAL;AAAU;AAAO;;AACjB,eAAK,MAAL;AAAa;AAAO;;AACpB,eAAK,YAAL;AAAmB;;AAEnB,eAAK,QAAL;AAAe;AAAO;;AACtB,eAAK,OAAL;AAAc;AAAO;;AACrB,eAAK,MAAL;AAAa;AAAO;;AAEpB,eAAK,iBAAL;AAAwB;AAAO;;AAC/B,eAAK,gBAAL;AAAuB;AAAO;;AAC9B,eAAK,QAAL;AAAe;AAAO;;AACtB,eAAK,YAAL;AAAmB;AAAO;;AAC1B,eAAK,WAAL;AAAkB;AAAO;;AACzB,eAAK,kBAAL;AAAyB;AAAO;;AAChC;AAAS,gBAAGiF,IAAI,CAACsD,GAAR,EAAa,MAAMpD,EAAN;AA7KW;AAAlC;;AA+KA,UAAIS,GAAG,GAAG;AACTgB,QAAAA,MAAM,EAAEA,MADC;AAETC,QAAAA,UAAU,EAAEA;AAFH,OAAV;AAIA,aAAOjB,GAAP;AACA,KAlMD;AAmMA,GAjNuB,EAAxB;AAkNA;;;AACA,MAAI4C,SAAS,GAAG,SAAZA,SAAY,CAASzH,GAAT,EAAckE,IAAd,EAAoB;AACnC;AACA,WAAOY,iBAAiB,CAACvE,UAAU,CAACP,GAAD,EAAM,aAAN,CAAX,EAAiCkE,IAAjC,CAAxB;AACA,GAHD;;AAIAjG,EAAAA,GAAG,CAACwJ,SAAJ,GAAgBA,SAAhB;AACC,CAzZD,EAyZG,OAAO7G,OAAP,KAAmB,WAAnB,GAAiCA,OAAjC,GAA2C3C,GAzZ9C","sourcesContent":["/* ods.js (C) 2014 SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*jshint -W041 */\nvar ODS = {};\n(function make_ods(ODS) {\n/* Open Document Format for Office Applications (OpenDocument) Version 1.2 */\nvar get_utils = function() {\n\tif(typeof XLSX !== 'undefined') return XLSX.utils;\n\tif(typeof module !== \"undefined\" && typeof require !== 'undefined') try {\n\t\treturn require('../' + 'xlsx').utils;\n\t} catch(e) {\n\t\ttry { return require('./' + 'xlsx').utils; }\n\t\tcatch(ee) { return require('xl' + 'sx').utils; }\n\t}\n\tthrow new Error(\"Cannot find XLSX utils\");\n};\nvar has_buf = (typeof Buffer !== 'undefined');\n\nfunction cc2str(arr) {\n\tvar o = \"\";\n\tfor(var i = 0; i != arr.length; ++i) o += String.fromCharCode(arr[i]);\n\treturn o;\n}\nfunction getdata(data) {\n\tif(!data) return null;\n\tif(data.data) return data.data;\n\tif(data.asNodeBuffer && has_buf) return data.asNodeBuffer().toString('binary');\n\tif(data.asBinary) return data.asBinary();\n\tif(data._data && data._data.getContent) return cc2str(Array.prototype.slice.call(data._data.getContent(),0));\n\treturn null;\n}\n\nfunction safegetzipfile(zip, file) {\n\tvar f = file; if(zip.files[f]) return zip.files[f];\n\tf = file.toLowerCase(); if(zip.files[f]) return zip.files[f];\n\tf = f.replace(/\\//g,'\\\\'); if(zip.files[f]) return zip.files[f];\n\treturn null;\n}\n\nfunction getzipfile(zip, file) {\n\tvar o = safegetzipfile(zip, file);\n\tif(o == null) throw new Error(\"Cannot find file \" + file + \" in zip\");\n\treturn o;\n}\n\nfunction getzipdata(zip, file, safe) {\n\tif(!safe) return getdata(getzipfile(zip, file));\n\tif(!file) return null;\n\ttry { return getzipdata(zip, file); } catch(e) { return null; }\n}\n\nvar _fs, jszip;\nif(typeof JSZip !== 'undefined') jszip = JSZip;\nif (typeof exports !== 'undefined') {\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tif(has_buf && typeof jszip === 'undefined') jszip = require('js'+'zip');\n\t\tif(typeof jszip === 'undefined') jszip = require('./js'+'zip').JSZip;\n\t\t_fs = require('f'+'s');\n\t}\n}\nvar attregexg=/\\b[\\w:-]+=[\"'][^\"]*['\"]/g;\nvar tagregex=/<[^>]*>/g;\nvar nsregex=/<\\w*:/, nsregex2 = /<(\\/?)\\w+:/;\nfunction parsexmltag(tag, skip_root) {\n\tvar z = [];\n\tvar eq = 0, c = 0;\n\tfor(; eq !== tag.length; ++eq) if((c = tag.charCodeAt(eq)) === 32 || c === 10 || c === 13) break;\n\tif(!skip_root) z[0] = tag.substr(0, eq);\n\tif(eq === tag.length) return z;\n\tvar m = tag.match(attregexg), j=0, w=\"\", v=\"\", i=0, q=\"\", cc=\"\";\n\tif(m) for(i = 0; i != m.length; ++i) {\n\t\tcc = m[i];\n\t\tfor(c=0; c != cc.length; ++c) if(cc.charCodeAt(c) === 61) break;\n\t\tq = cc.substr(0,c); v = cc.substring(c+2, cc.length-1);\n\t\tfor(j=0;j!=q.length;++j) if(q.charCodeAt(j) === 58) break;\n\t\tif(j===q.length) z[q] = v;\n\t\telse z[(j===5 && q.substr(0,5)===\"xmlns\"?\"xmlns\":\"\")+q.substr(j+1)] = v;\n\t}\n\treturn z;\n}\nfunction strip_ns(x) { return x.replace(nsregex2, \"<$1\"); }\n\nvar encodings = {\n\t'&quot;': '\"',\n\t'&apos;': \"'\",\n\t'&gt;': '>',\n\t'&lt;': '<',\n\t'&amp;': '&'\n};\nvar rencoding = {\n\t'\"': '&quot;',\n\t\"'\": '&apos;',\n\t'>': '&gt;',\n\t'<': '&lt;',\n\t'&': '&amp;'\n};\nvar rencstr = \"&<>'\\\"\".split(\"\");\n\n// TODO: CP remap (need to read file version to determine OS)\nvar encregex = /&[a-z]*;/g, coderegex = /_x([\\da-fA-F]+)_/g;\nfunction unescapexml(text){\n\tvar s = text + '';\n\treturn s.replace(encregex, function($$) { return encodings[$$]; }).replace(coderegex,function(m,c) {return String.fromCharCode(parseInt(c,16));});\n}\nvar decregex=/[&<>'\"]/g, charegex = /[\\u0000-\\u0008\\u000b-\\u001f]/g;\nfunction escapexml(text){\n\tvar s = text + '';\n\treturn s.replace(decregex, function(y) { return rencoding[y]; }).replace(charegex,function(s) { return \"_x\" + (\"000\"+s.charCodeAt(0).toString(16)).substr(-4) + \"_\";});\n}\n\nfunction parsexmlbool(value, tag) {\n\tswitch(value) {\n\t\tcase '1': case 'true': case 'TRUE': return true;\n\t\t/* case '0': case 'false': case 'FALSE':*/\n\t\tdefault: return false;\n\t}\n}\n\nfunction datenum(v) {\n\tvar epoch = Date.parse(v);\n\treturn (epoch + 2209161600000) / (24 * 60 * 60 * 1000);\n}\n\n/* ISO 8601 Duration */\nfunction parse_isodur(s) {\n\tvar sec = 0, mt = 0, time = false;\n\tvar m = s.match(/P([0-9\\.]+Y)?([0-9\\.]+M)?([0-9\\.]+D)?T([0-9\\.]+H)?([0-9\\.]+M)?([0-9\\.]+S)?/);\n\tif(!m) throw new Error(\"|\" + s + \"| is not an ISO8601 Duration\");\n\tfor(var i = 1; i != m.length; ++i) {\n\t\tif(!m[i]) continue;\n\t\tmt = 1;\n\t\tif(i > 3) time = true;\n\t\tswitch(m[i].substr(m[i].length-1)) {\n\t\t\tcase 'Y':\n\t\t\t\tthrow new Error(\"Unsupported ISO Duration Field: \" + m[i].substr(m[i].length-1));\n\t\t\tcase 'D': mt *= 24;\n\t\t\t\t/* falls through */\n\t\t\tcase 'H': mt *= 60;\n\t\t\t\t/* falls through */\n\t\t\tcase 'M':\n\t\t\t\tif(!time) throw new Error(\"Unsupported ISO Duration Field: M\");\n\t\t\t\telse mt *= 60;\n\t\t\t\t/* falls through */\n\t\t\tcase 'S': break;\n\t\t}\n\t\tsec += mt * parseInt(m[i], 10);\n\t}\n\treturn sec;\n}\n/* copied from js-xls (C) SheetJS Apache2 license */\nfunction xlml_normalize(d) {\n\tif(has_buf && Buffer.isBuffer(d)) return d.toString('utf8');\n\tif(typeof d === 'string') return d;\n\tthrow \"badf\";\n}\n\nvar xlmlregex = /<(\\/?)([a-z0-9]*:|)([\\w-]+)[^>]*>/mg;\n/* Part 3 Section 4 Manifest File */\nvar CT_ODS = \"application/vnd.oasis.opendocument.spreadsheet\";\nvar parse_manifest = function(d, opts) {\n\tvar str = xlml_normalize(d);\n\tvar Rn;\n\tvar FEtag;\n\twhile((Rn = xlmlregex.exec(str))) switch(Rn[3]) {\n\t\tcase 'manifest': break; // 4.2 <manifest:manifest>\n\t\tcase 'file-entry': // 4.3 <manifest:file-entry>\n\t\t\tFEtag = parsexmltag(Rn[0]);\n\t\t\tif(FEtag.path == '/' && FEtag.type !== CT_ODS) throw new Error(\"This OpenDocument is not a spreadsheet\");\n\t\t\tbreak;\n\t\tcase 'encryption-data': // 4.4 <manifest:encryption-data>\n\t\tcase 'algorithm': // 4.5 <manifest:algorithm>\n\t\tcase 'start-key-generation': // 4.6 <manifest:start-key-generation>\n\t\tcase 'key-derivation': // 4.7 <manifest:key-derivation>\n\t\t\tthrow new Error(\"Unsupported ODS Encryption\");\n\t\tdefault: throw Rn;\n\t}\n};\nvar parse_text_p = function(text, tag) {\n\treturn utf8read(text.replace(/<text:s\\/>/g,\" \").replace(/<[^>]*>/g,\"\"));\n};\n\nvar utf8read = function utf8reada(orig) {\n\tvar out = \"\", i = 0, c = 0, d = 0, e = 0, f = 0, w = 0;\n\twhile (i < orig.length) {\n\t\tc = orig.charCodeAt(i++);\n\t\tif (c < 128) { out += String.fromCharCode(c); continue; }\n\t\td = orig.charCodeAt(i++);\n\t\tif (c>191 && c<224) { out += String.fromCharCode(((c & 31) << 6) | (d & 63)); continue; }\n\t\te = orig.charCodeAt(i++);\n\t\tif (c < 240) { out += String.fromCharCode(((c & 15) << 12) | ((d & 63) << 6) | (e & 63)); continue; }\n\t\tf = orig.charCodeAt(i++);\n\t\tw = (((c & 7) << 18) | ((d & 63) << 12) | ((e & 63) << 6) | (f & 63))-65536;\n\t\tout += String.fromCharCode(0xD800 + ((w>>>10)&1023));\n\t\tout += String.fromCharCode(0xDC00 + (w&1023));\n\t}\n\treturn out;\n};\nvar parse_content_xml = (function() {\n\n\tvar number_formats = {\n\t\t/* ods name: [short ssf fmt, long ssf fmt] */\n\t\tday: [\"d\", \"dd\"],\n\t\tmonth: [\"m\", \"mm\"],\n\t\tyear: [\"y\", \"yy\"],\n\t\thours: [\"h\", \"hh\"],\n\t\tminutes: [\"m\", \"mm\"],\n\t\tseconds: [\"s\", \"ss\"],\n\t\t\"am-pm\": [\"A/P\", \"AM/PM\"],\n\t\t\"day-of-week\": [\"ddd\", \"dddd\"]\n\t};\n\n\treturn function pcx(d, opts) {\n\t\tvar str = xlml_normalize(d);\n\t\tvar state = [], tmp;\n\t\tvar tag;\n\t\tvar NFtag, NF, pidx;\n\t\tvar sheetag;\n\t\tvar Sheets = {}, SheetNames = [], ws = {};\n\t\tvar Rn, q;\n\t\tvar ctag;\n\t\tvar textp, textpidx, textptag;\n\t\tvar R, C, range = {s: {r:1000000,c:10000000}, e: {r:0, c:0}};\n\t\tvar number_format_map = {};\n\t\tvar merges = [], mrange = {}, mR = 0, mC = 0;\n\n\t\twhile((Rn = xlmlregex.exec(str))) switch(Rn[3]) {\n\n\t\t\tcase 'table': // 9.1.2 <table:table>\n\t\t\t\tif(Rn[1]==='/') {\n\t\t\t\t\tif(range.e.c >= range.s.c && range.e.r >= range.s.r) ws['!ref'] = get_utils().encode_range(range);\n\t\t\t\t\tif(merges.length) ws['!merges'] = merges;\n\t\t\t\t\tSheetNames.push(sheetag.name);\n\t\t\t\t\tSheets[sheetag.name] = ws;\n\t\t\t\t}\n\t\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') {\n\t\t\t\t\tsheetag = parsexmltag(Rn[0]);\n\t\t\t\t\tR = C = -1;\n\t\t\t\t\trange.s.r = range.s.c = 10000000; range.e.r = range.e.c = 0;\n\t\t\t\t\tws = {}; merges = [];\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'table-row': // 9.1.3 <table:table-row>\n\t\t\t\tif(Rn[1] === '/') break;\n\t\t\t\t++R; C = -1; break;\n\t\t\tcase 'covered-table-cell': // 9.1.5 table:covered-table-cell\n\t\t\t\t++C; break; /* stub */\n\t\t\tcase 'table-cell':\n\t\t\t\tif(Rn[0].charAt(Rn[0].length-2) === '/') {\n\t\t\t\t\tctag = parsexmltag(Rn[0]);\n\t\t\t\t\tif(ctag['number-columns-repeated']) C+= parseInt(ctag['number-columns-repeated'], 10);\n\t\t\t\t\telse ++C;\n\t\t\t\t}\n\t\t\t\telse if(Rn[1]!=='/') {\n\t\t\t\t\t++C;\n\t\t\t\t\tif(C > range.e.c) range.e.c = C;\n\t\t\t\t\tif(R > range.e.r) range.e.r = R;\n\t\t\t\t\tif(C < range.s.c) range.s.c = C;\n\t\t\t\t\tif(R < range.s.r) range.s.r = R;\n\t\t\t\t\tctag = parsexmltag(Rn[0]);\n\t\t\t\t\tq = {t:ctag['value-type'], v:null};\n\t\t\t\t\tif(ctag['number-columns-spanned'] || ctag['number-rows-spanned']) {\n\t\t\t\t\t\tmR = parseInt(ctag['number-rows-spanned'],10) || 0;\n\t\t\t\t\t\tmC = parseInt(ctag['number-columns-spanned'],10) || 0;\n\t\t\t\t\t\tmrange = {s: {r:R,c:C}, e:{r:R + mR-1,c:C + mC-1}};\n\t\t\t\t\t\tmerges.push(mrange);\n\t\t\t\t\t}\n\t\t\t\t\t/* 19.385 office:value-type */\n\t\t\t\t\tswitch(q.t) {\n\t\t\t\t\t\tcase 'boolean': q.t = 'b'; q.v = parsexmlbool(ctag['boolean-value']); break;\n\t\t\t\t\t\tcase 'float': q.t = 'n'; q.v = parseFloat(ctag.value); break;\n\t\t\t\t\t\tcase 'percentage': q.t = 'n'; q.v = parseFloat(ctag.value); break;\n\t\t\t\t\t\tcase 'currency': q.t = 'n'; q.v = parseFloat(ctag.value); break;\n\t\t\t\t\t\tcase 'date': q.t = 'n'; q.v = datenum(ctag['date-value']); q.z = 'm/d/yy'; break;\n\t\t\t\t\t\tcase 'time': q.t = 'n'; q.v = parse_isodur(ctag['time-value'])/86400; break;\n\t\t\t\t\t\tcase 'string': q.t = 's'; break;\n\t\t\t\t\t\tdefault: throw new Error('Unsupported value type ' + q.t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif(q.t === 's') q.v = textp;\n\t\t\t\t\tif(textp) q.w = textp;\n\t\t\t\t\tif(!(opts.sheetRows && opts.sheetRows < R)) ws[get_utils().encode_cell({r:R,c:C})] = q;\n\t\t\t\t\tq = null;\n\t\t\t\t}\n\t\t\t\tbreak; // 9.1.4 <table:table-cell>\n\n\t\t\t/* pure state */\n\t\t\tcase 'document-content': // 3.1.3.2 <office:document-content>\n\t\t\tcase 'spreadsheet': // 3.7 <office:spreadsheet>\n\t\t\tcase 'scripts': // 3.12 <office:scripts>\n\t\t\tcase 'font-face-decls': // 3.14 <office:font-face-decls>\n\t\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw \"Bad state: \"+tmp;}\n\t\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], true]);\n\t\t\t\tbreak;\n\n\t\t\t/* ignore state */\n\t\t\tcase 'shapes': // 9.2.8 <table:shapes>\n\t\t\tcase 'frame': // 10.4.2 <draw:frame>\n\t\t\t\tif(Rn[1]==='/'){if((tmp=state.pop())[0]!==Rn[3]) throw \"Bad state: \"+tmp;}\n\t\t\t\telse if(Rn[0].charAt(Rn[0].length-2) !== '/') state.push([Rn[3], false]);\n\t\t\t\tbreak;\n\n\t\t\tcase 'number-style': // 16.27.2 <number:number-style>\n\t\t\tcase 'percentage-style': // 16.27.9 <number:percentage-style>\n\t\t\tcase 'date-style': // 16.27.10 <number:date-style>\n\t\t\tcase 'time-style': // 16.27.18 <number:time-style>\n\t\t\t\tif(Rn[1]==='/'){\n\t\t\t\t\tnumber_format_map[NFtag.name] = NF;\n\t\t\t\t\tif((tmp=state.pop())[0]!==Rn[3]) throw \"Bad state: \"+tmp;\n\t\t\t\t} else if(Rn[0].charAt(Rn[0].length-2) !== '/') {\n\t\t\t\t\tNF = \"\";\n\t\t\t\t\tNFtag = parsexmltag(Rn[0]);\n\t\t\t\t\tstate.push([Rn[3], true]);\n\t\t\t\t} break;\n\n\t\t\tcase 'script': break; // 3.13 <office:script>\n\t\t\tcase 'automatic-styles': break; // 3.15.3 <office:automatic-styles>\n\n\t\t\tcase 'style': break; // 16.2 <style:style>\n\t\t\tcase 'font-face': break; // 16.21 <style:font-face>\n\n\t\t\tcase 'paragraph-properties': break; // 17.6 <style:paragraph-properties>\n\t\t\tcase 'table-properties': break; // 17.15 <style:table-properties>\n\t\t\tcase 'table-column-properties': break; // 17.16 <style:table-column-properties>\n\t\t\tcase 'table-row-properties': break; // 17.17 <style:table-row-properties>\n\t\t\tcase 'table-cell-properties': break; // 17.18 <style:table-cell-properties>\n\n\t\t\tcase 'number': // 16.27.3 <number:number>\n\t\t\t\tswitch(state[state.length-1][0]) {\n\t\t\t\t\tcase 'time-style':\n\t\t\t\t\tcase 'date-style':\n\t\t\t\t\t\ttag = parsexmltag(Rn[0]);\n\t\t\t\t\t\tNF += number_formats[Rn[3]][tag.style==='long'?1:0]; break;\n\t\t\t\t} break;\n\n\t\t\tcase 'day': // 16.27.11 <number:day>\n\t\t\tcase 'month': // 16.27.12 <number:month>\n\t\t\tcase 'year': // 16.27.13 <number:year>\n\t\t\tcase 'era': // 16.27.14 <number:era>\n\t\t\tcase 'day-of-week': // 16.27.15 <number:day-of-week>\n\t\t\tcase 'week-of-year': // 16.27.16 <number:week-of-year>\n\t\t\tcase 'quarter': // 16.27.17 <number:quarter>\n\t\t\tcase 'hours': // 16.27.19 <number:hours>\n\t\t\tcase 'minutes': // 16.27.20 <number:minutes>\n\t\t\tcase 'seconds': // 16.27.21 <number:seconds>\n\t\t\tcase 'am-pm': // 16.27.22 <number:am-pm>\n\t\t\t\tswitch(state[state.length-1][0]) {\n\t\t\t\t\tcase 'time-style':\n\t\t\t\t\tcase 'date-style':\n\t\t\t\t\t\ttag = parsexmltag(Rn[0]);\n\t\t\t\t\t\tNF += number_formats[Rn[3]][tag.style==='long'?1:0]; break;\n\t\t\t\t} break;\n\n\t\t\tcase 'boolean-style': break; // 16.27.23 <number:boolean-style>\n\t\t\tcase 'boolean': break; // 16.27.24 <number:boolean>\n\t\t\tcase 'text-style': break; // 16.27.25 <number:text-style>\n\t\t\tcase 'text': // 16.27.26 <number:text>\n\t\t\t\tif(Rn[0].substr(-2) === \"/>\") break;\n\t\t\t\telse if(Rn[1]===\"/\") switch(state[state.length-1][0]) {\n\t\t\t\t\tcase 'number-style':\n\t\t\t\t\tcase 'date-style':\n\t\t\t\t\tcase 'time-style':\n\t\t\t\t\t\tNF += str.slice(pidx, Rn.index);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse pidx = Rn.index + Rn[0].length;\n\t\t\t\tbreak;\n\t\t\tcase 'text-content': break; // 16.27.27 <number:text-content>\n\t\t\tcase 'text-properties': break; // 16.27.27 <style:text-properties>\n\n\t\t\tcase 'body': break; // 3.3 16.9.6 19.726.3\n\n\t\t\tcase 'forms': break; // 12.25.2 13.2\n\t\t\tcase 'table-column': break; // 9.1.6 <table:table-column>\n\n\t\t\tcase 'graphic-properties': break;\n\t\t\tcase 'calculation-settings': break; // 9.4.1 <table:calculation-settings>\n\t\t\tcase 'named-expressions': break; // 9.4.11 <table:named-expressions>\n\t\t\tcase 'named-range': break; // 9.4.11 <table:named-range>\n\t\t\tcase 'span': break; // <text:span>\n\t\t\tcase 'p':\n\t\t\t\tif(Rn[1]==='/') textp = parse_text_p(str.slice(textpidx,Rn.index), textptag);\n\t\t\t\telse { textptag = parsexmltag(Rn[0]); textpidx = Rn.index + Rn[0].length; }\n\t\t\t\tbreak; // <text:p>\n\t\t\tcase 's': break; // <text:s>\n\t\t\tcase 'date': break; // <*:date>\n\t\t\tcase 'annotation': break;\n\n\t\t\tcase 'object': break; // 10.4.6.2 <draw:object>\n\t\t\tcase 'title': break; // <*:title>\n\t\t\tcase 'desc': break; // <*:desc>\n\n\t\t\tcase 'database-ranges': break; // 9.4.14 <table:database-ranges>\n\t\t\tcase 'database-range': break; // 9.4.15 <table:database-range>\n\t\t\tcase 'filter': break; // 9.5.2 <table:filter>\n\t\t\tcase 'filter-and': break; // 9.5.3 <table:filter-and>\n\t\t\tcase 'filter-or': break; // 9.5.4 <table:filter-or>\n\t\t\tcase 'filter-condition': break; // 9.5.5 <table:filter-condition>\n\t\t\tdefault: if(opts.WTF) throw Rn;\n\t\t}\n\t\tvar out = {\n\t\t\tSheets: Sheets,\n\t\t\tSheetNames: SheetNames\n\t\t};\n\t\treturn out;\n\t};\n})();\n/* Part 3: Packages */\nvar parse_ods = function(zip, opts) {\n\t//var manifest = parse_manifest(getzipdata(zip, 'META-INF/manifest.xml'));\n\treturn parse_content_xml(getzipdata(zip, 'content.xml'), opts);\n};\nODS.parse_ods = parse_ods;\n})(typeof exports !== 'undefined' ? exports : ODS);\n"]},"metadata":{},"sourceType":"script"}