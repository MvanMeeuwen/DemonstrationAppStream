{"ast":null,"code":"import _slicedToArray from\"/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  display: grid;\\n  padding: 2em;\\n  grid-template-columns: 1fr 1fr;\\n  grid-template-rows: 1000px;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState,useContext,useEffect}from'react';import{AppContext}from'../Context';import{map,without,filter}from'lodash';import{Storage}from'aws-amplify';import{Form,Input,Button,Select,message,Typography,AutoComplete,Row,Col,Checkbox,Progress,Result}from'antd';import styled from'styled-components';import{CheckOutlined,RollbackOutlined}from'@ant-design/icons';import{BrowserRouter as Router,Route,Link}from\"react-router-dom\";var formItemLayout={labelCol:{sm:{span:8}}};function isString(x){return Object.prototype.toString.call(x)===\"[object String]\";}var TextArea=Input.TextArea;var Title=Typography.Title;var Option=Select.Option;var AppLayout=styled.div(_templateObject());var Confirmation=function Confirmation(){var data=useContext(AppContext);var docData=data['demo']['Items'];var entities_list=data['entities_list'];var _useState=useState(0),_useState2=_slicedToArray(_useState,2),count=_useState2[0],setCount=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),image=_useState4[0],setImage=_useState4[1];var doc_unique_ids=[];docData.map(function(notice){doc_unique_ids.push(notice.unique_id);});var fetchData=function fetchData(){Storage.get(doc_unique_ids[count]+'.jpeg',{level:'public'}).then(function(data){return setImage(data);}).catch(function(err){return console.log(err);});};useEffect(function(){fetchData();},[count]);var data_elements=[\"TAX YEAR\",\"NOTICE DATE\",\"AMOUNT\",\"NOTICE NUMBER\",\"DUE DATE\"];var initialValues=docData[count];var keys=Object.keys(initialValues);var values=Object.values(initialValues);var initialFormValues={};keys.map(function(key){var item=initialValues[key];if(isString(item)){initialFormValues[key]=item;}else{initialFormValues[key]=item[0];}});var _Form$useForm=Form.useForm(),_Form$useForm2=_slicedToArray(_Form$useForm,1),form=_Form$useForm2[0];var document_types=[\"Announcement\",\"Refund\",\"Payment\"];var document_type_json=[];document_types.map(function(type){document_type_json.push({'value':type});});var entities_list_json=[];entities_list.map(function(entity){entities_list_json.push({'value':entity});});var states=[\"Alabama\",\"Alaska\",\"Arkansas\",\"Arizona\",\"California\",\"Colorado\",\"Connecticut\",\"Delaware\",\"Florida\",\"Georgia\",\"Hawaii\",\"Iowa\",\"Idaho\",\"Illinois\",\"Indiana\",\"Kansas\",\"Kentucky\",\"Louisiana\",\"Maine\",\"Maryland\",\"Massachusetts\",\"Michigan\",\"Minnesota\",\"Missouri\",\"Mississippi\",\"Montana\",\"North Carolina\",\"North Dakota\",\"Nebraska\",\"New Hampshire\",\"New Jersey\",\"New Mexico\",\"Nevada\",\"New York\",\"Ohio\",\"Oklahoma\",\"Oregon\",\"Pennsylvania\",\"Rhode Island\",\"South Carolina\",\"South Dakota\",\"Tennessee\",\"Texas\",\"Utah\",\"Virginia\",\"Vermont\",\"Washington\",\"Wisconsin\",\"West Virginia\",\"Wyoming\"];var statesjson=[];states.map(function(state){statesjson.push({'value':state});});var announcement_types=[\"Apportionment issues\",\"Information request\",\"Audit\",\"Net operating losses\"];var announcement_types_json=[];announcement_types.map(function(type){announcement_types_json.push({'value':type});});var form_list=[/*#__PURE__*/React.createElement(Form.Item,{name:\"state\",label:\"STATE\",key:\"state\"},/*#__PURE__*/React.createElement(AutoComplete,{options:statesjson,filterOption:function filterOption(inputValue,option){return option.value.toUpperCase().indexOf(inputValue.toUpperCase())!==-1;}},/*#__PURE__*/React.createElement(Input,{size:\"large\"}))),/*#__PURE__*/React.createElement(Form.Item,{name:\"document_type\",label:\"NOTICE CATEGORY\",key:\"document_type\"},/*#__PURE__*/React.createElement(AutoComplete,{options:document_type_json},/*#__PURE__*/React.createElement(Input,{size:\"large\"}))),/*#__PURE__*/React.createElement(Form.Item,{name:\"label\",label:\"NOTICE TYPE\",key:\"label\"},/*#__PURE__*/React.createElement(Input,{size:\"large\"}))];if(keys.includes(\"announcement_type\")){var announcement_type_item=/*#__PURE__*/React.createElement(Form.Item,{label:\"ANNOUNCEMENT TYPE\",name:\"announcement_type\",key:\"announcement_type\"},/*#__PURE__*/React.createElement(AutoComplete,{options:announcement_types_json},/*#__PURE__*/React.createElement(Input,{size:\"large\"})));form_list.push(announcement_type_item);}var entity_field=/*#__PURE__*/React.createElement(Form.Item,{name:\"entity\",label:\"ENTITY\",key:\"entity_name\"},/*#__PURE__*/React.createElement(AutoComplete,{options:entities_list_json},/*#__PURE__*/React.createElement(Input,{size:\"large\"})));form_list.push(entity_field);var id_field=/*#__PURE__*/React.createElement(Form.Item,{name:\"ID\",label:\"FEIN / ACCOUNT ID\",key:\"ID\"},/*#__PURE__*/React.createElement(Input,{size:\"large\"}));form_list.push(id_field);keys.map(function(field){if(data_elements.includes(field)){var defaultvalue=initialValues[field][0];var optionvalues=[];initialValues[field].map(function(option){optionvalues.push({'value':option});});var formitem=/*#__PURE__*/React.createElement(Form.Item,{label:field,name:field,key:field},/*#__PURE__*/React.createElement(AutoComplete,{options:optionvalues},/*#__PURE__*/React.createElement(Input,{size:\"large\"})));form_list.push(formitem);}});var form_list_tail=/*#__PURE__*/React.createElement(Form.Item,{name:\"remarks\",label:\"REMARKS\",key:\"remarks\"},/*#__PURE__*/React.createElement(TextArea,{placeholder:\"Additional remarks\",autoSize:{minRows:2,maxRows:6}}));form_list.push(form_list_tail);var progress_percentage=Math.round(count/(docData.length-1)*100);var showFeedback=function showFeedback(){message.info('Notice has been confirmed');setCount(count+1);form.resetFields();};var showNegative=function showNegative(){message.info('Notice will be manually reviewed');setCount(count+1);form.resetFields();};if(count==13){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Result,{status:\"success\",title:\"The backlog is empty!\",extra:/*#__PURE__*/React.createElement(Button,{type:\"primary\",key:\"console\"},/*#__PURE__*/React.createElement(Link,{to:\"/management\"},\"Go to Notice management\"))}));}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(AppLayout,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"img\",{src:image,width:\"700px\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"rightHandside\"},/*#__PURE__*/React.createElement(\"div\",{style:{padding:'1em'}},/*#__PURE__*/React.createElement(\"div\",{className:\"actualTitle\",style:{marginBottom:'1em'}},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:8}),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Title,{level:4},\"Classification\"))),/*#__PURE__*/React.createElement(Progress,{percent:progress_percentage,status:\"active\"}))),/*#__PURE__*/React.createElement(Form,Object.assign({},formItemLayout,{layout:\"horizontal\",form:form,initialValues:initialFormValues,onFinish:showFeedback}),form_list.map(function(field){return field;}),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:8}),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Button,{type:\"primary\",htmlType:\"submit\",style:{float:'center'}},/*#__PURE__*/React.createElement(CheckOutlined,null),\"Confirm classification\")))))));};export default Confirmation;","map":{"version":3,"sources":["/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/Confirmation/Confirmation.js"],"names":["React","useState","useContext","useEffect","AppContext","map","without","filter","Storage","Form","Input","Button","Select","message","Typography","AutoComplete","Row","Col","Checkbox","Progress","Result","styled","CheckOutlined","RollbackOutlined","BrowserRouter","Router","Route","Link","formItemLayout","labelCol","sm","span","isString","x","Object","prototype","toString","call","TextArea","Title","Option","AppLayout","div","Confirmation","data","docData","entities_list","count","setCount","image","setImage","doc_unique_ids","notice","push","unique_id","fetchData","get","level","then","catch","err","console","log","data_elements","initialValues","keys","values","initialFormValues","key","item","useForm","form","document_types","document_type_json","type","entities_list_json","entity","states","statesjson","state","announcement_types","announcement_types_json","form_list","inputValue","option","value","toUpperCase","indexOf","includes","announcement_type_item","entity_field","id_field","field","defaultvalue","optionvalues","formitem","form_list_tail","minRows","maxRows","progress_percentage","Math","round","length","showFeedback","info","resetFields","showNegative","padding","marginBottom","float"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from 'react';\nimport { AppContext } from '../Context';\nimport { map, without, filter} from 'lodash';\nimport { Storage } from 'aws-amplify'\nimport { Form, Input, Button, Select, message, Typography, AutoComplete, Row, Col, Checkbox, Progress, Result} from 'antd';\nimport styled from 'styled-components';\nimport { CheckOutlined, RollbackOutlined} from '@ant-design/icons';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n\nconst formItemLayout = {\n    labelCol: {\n        sm: { span: 8 },\n    }, \n  \n};\n\n\nfunction isString(x) {\n    return Object.prototype.toString.call(x) === \"[object String]\"\n  }\n\n\nconst { TextArea } = Input;\nconst { Title } = Typography; \nconst { Option } = Select;\nconst AppLayout = styled.div`\n  display: grid;\n  padding: 2em;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1000px;\n` \n\n\n\nconst Confirmation = () => {\n    \n    const data = useContext(AppContext)\n    const docData = data['demo']['Items']\n    const entities_list = data['entities_list']\n    const [count, setCount] = useState(0)\n    const [image, setImage] = useState(null)\n\n    const doc_unique_ids = []\n    docData.map(notice => {\n        doc_unique_ids.push(notice.unique_id)\n    })\n     \n    const fetchData = () => {\n        Storage.get(doc_unique_ids[count] + '.jpeg', {level: 'public'})\n        .then(data => setImage(data))\n        .catch(err => console.log(err))\n        }\n    \n    useEffect(() => {\n        fetchData();\n      }, [count]);\n    \n    \n    \n    const data_elements = [\"TAX YEAR\", \"NOTICE DATE\", \"AMOUNT\", \"NOTICE NUMBER\",  \"DUE DATE\"]\n\n    const initialValues = docData[count]\n    \n    \n    \n    let keys = Object.keys(initialValues)\n    let values = Object.values(initialValues)\n    const initialFormValues = {}\n    \n    keys.map(key => {\n        let item = initialValues[key]\n        if ( isString(item) ) {\n            initialFormValues[key]  = item\n        } else {\n            initialFormValues[key] = item[0]\n        }\n        \n    })\n\n    \n    const [form] = Form.useForm();\n    const document_types = [\"Announcement\", \"Refund\", \"Payment\"]\n    \n    const document_type_json = []\n    document_types.map(type => {\n        document_type_json.push({'value' : type})\n    })\n\n    const entities_list_json = []\n    entities_list.map(entity => {\n        entities_list_json.push({'value': entity})\n    })\n    \n\n    const states = [\"Alabama\",\"Alaska\",\"Arkansas\",\"Arizona\",\"California\",\"Colorado\",\"Connecticut\",\"Delaware\",\"Florida\",\"Georgia\",\"Hawaii\",\"Iowa\",\"Idaho\",\"Illinois\",\"Indiana\",\"Kansas\",\"Kentucky\",\"Louisiana\",\"Maine\",\"Maryland\",\"Massachusetts\",\"Michigan\",\"Minnesota\",\"Missouri\",\"Mississippi\",\"Montana\",\"North Carolina\",\"North Dakota\",\"Nebraska\",\"New Hampshire\",\"New Jersey\",\"New Mexico\",\"Nevada\",\"New York\",\"Ohio\",\"Oklahoma\",\"Oregon\",\"Pennsylvania\",\"Rhode Island\",\"South Carolina\",\"South Dakota\",\"Tennessee\",\"Texas\",\"Utah\",\"Virginia\",\"Vermont\",\"Washington\",\"Wisconsin\",\"West Virginia\",\"Wyoming\"]\n    let statesjson = []\n    states.map(state => {\n        statesjson.push({'value' : state})\n\n    })\n\n\n    let announcement_types = [\"Apportionment issues\", \"Information request\", \"Audit\", \"Net operating losses\"]\n    let announcement_types_json = []\n    announcement_types.map(type => {\n        announcement_types_json.push({'value' : type})\n\n    })\n \n    \n\n\n    let form_list = [\n        <Form.Item\n            name = \"state\"\n            label = \"STATE\"\n            key =\"state\"\n        >\n            <AutoComplete\n                options = {statesjson}\n                filterOption={(inputValue, option) =>\n                    option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n            }>\n                <Input size = \"large\"/>\n            </AutoComplete>\n        </Form.Item>,\n       \n          <Form.Item\n          name = \"document_type\"\n          label = \"NOTICE CATEGORY\"\n          key = \"document_type\"       \n          >\n              <AutoComplete\n              options = {document_type_json}\n              >\n                  <Input size = \"large\"/>\n              </AutoComplete>\n            </Form.Item>,\n            <Form.Item\n                name = \"label\"\n                label = \"NOTICE TYPE\"\n                key = \"label\"\n            >   \n                <Input size = \"large\"/>\n            </Form.Item>]\n\n\n\n\nif(keys.includes(\"announcement_type\")) {\n    let announcement_type_item = \n        <Form.Item\n            label = \"ANNOUNCEMENT TYPE\"\n            name = \"announcement_type\"\n            key = \"announcement_type\"\n        >\n\n        <AutoComplete\n            options = {announcement_types_json}>\n            <Input size = \"large\"/>\n        </AutoComplete>\n    \n        \n    </Form.Item>\nform_list.push(announcement_type_item)   \n\n\n   }\n\n\n\n\n\n  let entity_field =      <Form.Item\n             name = \"entity\"\n             label = \"ENTITY\"\n             key = \"entity_name\"\n             >   \n             <AutoComplete\n                 options = {entities_list_json}\n                 >         \n                 <Input size = \"large\"/>\n                 </AutoComplete>\n             </Form.Item>\n    \n    form_list.push(entity_field)   \n\n\n  let id_field =      <Form.Item\n  name = \"ID\"\n  label = \"FEIN / ACCOUNT ID\"\n  key = \"ID\"\n  >   \n           \n      <Input size = \"large\"/>\n  \n  </Form.Item>\n\nform_list.push(id_field)   \n\n    \n  \n\n    keys.map(field => {\n        if (data_elements.includes(field)) {\n    \n            let defaultvalue = initialValues[field][0]\n            let optionvalues = []\n            initialValues[field].map(option => {\n                optionvalues.push({'value' : option})\n            })\n\n            let formitem = <Form.Item\n                            label = {field}\n                            name = {field}\n                            key = {field}\n                            >\n                                 <AutoComplete\n                                    options = {optionvalues}\n                                 >\n                                <Input size = \"large\"/>\n                                </AutoComplete>\n                            </Form.Item>\n            form_list.push(formitem)   \n        } \n    })\n        let form_list_tail =  <Form.Item\n                                name=\"remarks\"\n                                label=\"REMARKS\"\n                                key=\"remarks\">\n                            <TextArea\n                                placeholder=\"Additional remarks\"\n                                autoSize={{ minRows: 2, maxRows: 6 }}\n                            />\n                            </Form.Item>         \n        form_list.push(form_list_tail)\n    const progress_percentage = Math.round((count/(docData.length-1))*100)\n\n    const showFeedback = () => {\n        message.info('Notice has been confirmed');\n        setCount(count + 1)\n        form.resetFields();\n    }\n\n    const showNegative = () => {\n        message.info('Notice will be manually reviewed');\n        setCount(count + 1)\n        form.resetFields();\n    }\n    \n    if (count == 13) {\n        return <>\n            <Result\n                status=\"success\"\n                title=\"The backlog is empty!\"\n                \n                    extra={\n      <Button type=\"primary\" key=\"console\">\n            <Link to ='/management' >Go to Notice management</Link>\n      </Button>}\n  />\n\n        </>\n\n\n    }\n    return <>\n        <AppLayout>\n            <div>\n            <img src = {image} width = '700px' />\n\n            </div>\n            <div className = \"rightHandside\">\n                <div style = {{padding: '1em'}}>\n                    <div className =\"actualTitle\" style ={{marginBottom: '1em'}}>     \n                    <Row>\n                        <Col sm={8}>\n                        </Col>\n                        <Col>\n                        <Title level = {4}> \n                            Classification\n                        </Title>\n                        \n                        </Col>\n                    </Row>    \n\n                        <Progress percent={progress_percentage} status=\"active\" />\n                    </div>\n                </div>\n                    <Form\n                        {...formItemLayout}\n                        layout = \"horizontal\"\n                        form = {form}\n                        initialValues={initialFormValues}\n                        onFinish = {showFeedback}\n                    >\n                        {form_list.map(field => {\n                            return (\n                                field\n                            )\n                        })\n                        }\n                        <Row>\n                            <Col sm={8}>\n                            </Col>\n                            <Col>\n                            <Button type = \"primary\" \n                                    htmlType = \"submit\"\n                                    style = {{float:'center'}}\n                                    >\n                                <CheckOutlined />\n                                Confirm classification\n                            </Button>\n                            </Col>\n                        </Row> \n                    </Form>\n            </div>\n        </AppLayout>\n\n    </> \n}\n\n\nexport default Confirmation;"]},"metadata":{},"sourceType":"module"}