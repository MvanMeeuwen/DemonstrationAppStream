{"ast":null,"code":"import React from 'react';\nimport Input from './Input';\n\nvar SingleSelector = function SingleSelector(_ref) {\n  var inputElement = _ref.inputElement,\n      prefixCls = _ref.prefixCls,\n      id = _ref.id,\n      inputRef = _ref.inputRef,\n      disabled = _ref.disabled,\n      autoFocus = _ref.autoFocus,\n      accessibilityIndex = _ref.accessibilityIndex,\n      mode = _ref.mode,\n      open = _ref.open,\n      values = _ref.values,\n      placeholder = _ref.placeholder,\n      tabIndex = _ref.tabIndex,\n      showSearch = _ref.showSearch,\n      searchValue = _ref.searchValue,\n      activeValue = _ref.activeValue,\n      onInputKeyDown = _ref.onInputKeyDown,\n      onInputMouseDown = _ref.onInputMouseDown,\n      onInputChange = _ref.onInputChange;\n  var combobox = mode === 'combobox';\n  var inputEditable = combobox || showSearch && open;\n  var item = values[0];\n\n  var getDisplayValue = function getDisplayValue(value) {\n    return value === null ? '' : String(value);\n  };\n\n  var inputValue = searchValue;\n\n  if (combobox) {\n    inputValue = item ? getDisplayValue(item.value) : activeValue || searchValue;\n  } // Not show text when closed expect combobox mode\n\n\n  var hasTextInput = mode !== 'combobox' && !open ? false : !!inputValue;\n  return React.createElement(React.Fragment, null, React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-selection-search\")\n  }, React.createElement(Input, {\n    ref: inputRef,\n    prefixCls: prefixCls,\n    id: id,\n    open: open,\n    inputElement: inputElement,\n    disabled: disabled,\n    autoFocus: autoFocus,\n    editable: inputEditable,\n    accessibilityIndex: accessibilityIndex,\n    value: inputValue,\n    onKeyDown: onInputKeyDown,\n    onMouseDown: onInputMouseDown,\n    onChange: onInputChange,\n    tabIndex: tabIndex\n  })), !combobox && item && !hasTextInput && React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-selection-item\")\n  }, item.label), !item && !hasTextInput && React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-selection-placeholder\")\n  }, placeholder));\n};\n\nexport default SingleSelector;","map":{"version":3,"sources":["/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/node_modules/rc-select/es/Selector/SingleSelector.js"],"names":["React","Input","SingleSelector","_ref","inputElement","prefixCls","id","inputRef","disabled","autoFocus","accessibilityIndex","mode","open","values","placeholder","tabIndex","showSearch","searchValue","activeValue","onInputKeyDown","onInputMouseDown","onInputChange","combobox","inputEditable","item","getDisplayValue","value","String","inputValue","hasTextInput","createElement","Fragment","className","concat","ref","editable","onKeyDown","onMouseDown","onChange","label"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Input from './Input';\n\nvar SingleSelector = function SingleSelector(_ref) {\n  var inputElement = _ref.inputElement,\n      prefixCls = _ref.prefixCls,\n      id = _ref.id,\n      inputRef = _ref.inputRef,\n      disabled = _ref.disabled,\n      autoFocus = _ref.autoFocus,\n      accessibilityIndex = _ref.accessibilityIndex,\n      mode = _ref.mode,\n      open = _ref.open,\n      values = _ref.values,\n      placeholder = _ref.placeholder,\n      tabIndex = _ref.tabIndex,\n      showSearch = _ref.showSearch,\n      searchValue = _ref.searchValue,\n      activeValue = _ref.activeValue,\n      onInputKeyDown = _ref.onInputKeyDown,\n      onInputMouseDown = _ref.onInputMouseDown,\n      onInputChange = _ref.onInputChange;\n  var combobox = mode === 'combobox';\n  var inputEditable = combobox || showSearch && open;\n  var item = values[0];\n\n  var getDisplayValue = function getDisplayValue(value) {\n    return value === null ? '' : String(value);\n  };\n\n  var inputValue = searchValue;\n\n  if (combobox) {\n    inputValue = item ? getDisplayValue(item.value) : activeValue || searchValue;\n  } // Not show text when closed expect combobox mode\n\n\n  var hasTextInput = mode !== 'combobox' && !open ? false : !!inputValue;\n  return React.createElement(React.Fragment, null, React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-selection-search\")\n  }, React.createElement(Input, {\n    ref: inputRef,\n    prefixCls: prefixCls,\n    id: id,\n    open: open,\n    inputElement: inputElement,\n    disabled: disabled,\n    autoFocus: autoFocus,\n    editable: inputEditable,\n    accessibilityIndex: accessibilityIndex,\n    value: inputValue,\n    onKeyDown: onInputKeyDown,\n    onMouseDown: onInputMouseDown,\n    onChange: onInputChange,\n    tabIndex: tabIndex\n  })), !combobox && item && !hasTextInput && React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-selection-item\")\n  }, item.label), !item && !hasTextInput && React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-selection-placeholder\")\n  }, placeholder));\n};\n\nexport default SingleSelector;"]},"metadata":{},"sourceType":"module"}