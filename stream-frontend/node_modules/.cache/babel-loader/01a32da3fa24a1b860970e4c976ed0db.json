{"ast":null,"code":"import React,{PureComponent}from'react';import{BarChart,Bar,Cell,XAxis,YAxis,CartesianGrid,Tooltip,Legend}from'recharts';import{groupBy,filter}from'lodash';var BarEntities=function BarEntities(documents){var grouped_entities=groupBy(documents.documents,function(n){return n.entity_name;});console.log(grouped_entities);var entities=Object.keys(grouped_entities);var arrSum=function arrSum(arr){return arr.reduce(function(a,b){return a+b;},0);};var list_of_objects=[];for(var i=0;i<entities.length;i++){var data_object={};var index=entities[i];var entity_docs=grouped_entities[index];data_object.entity_name=index;var amount_refund=[];var amount_payment=[];for(var _i=0;_i<entity_docs.length;_i++){if(entity_docs[_i].document_type==\"Payment\"){amount_payment.push(entity_docs[_i].amount);}else if(entity_docs[_i].document_type==\"Refund\"){amount_refund.push(Math.round(entity_docs[_i].amount));}}data_object.amount_payment=arrSum(amount_payment);data_object.amount_refund=arrSum(amount_refund);data_object.amount_total=data_object.amount_refund+data_object.amount_payment;data_object.nr_payments=amount_payment.length;data_object.nr_refunds=amount_refund.length;data_object.nr_announcements=entity_docs.length-amount_payment.length-amount_refund.length;list_of_objects.push(data_object);}console.log(list_of_objects);var sorted_list=list_of_objects.sort(function(a,b){return b.amount_total-a.amount_total;});var bar_list=[];var reduced_data=[];for(var _i2=0;_i2<5;_i2++){reduced_data.push(sorted_list[_i2]);var barelement=/*#__PURE__*/React.createElement(Bar,{dataKey:\"amount_refund\",fill:\"#8884d8\"});bar_list.push(barelement);}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(BarChart,{width:900,height:500,data:reduced_data,margin:{top:5,right:30,left:20,bottom:5}},/*#__PURE__*/React.createElement(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/React.createElement(XAxis,{dataKey:\"entity_name\"}),/*#__PURE__*/React.createElement(YAxis,null),/*#__PURE__*/React.createElement(Tooltip,null),/*#__PURE__*/React.createElement(Legend,null),/*#__PURE__*/React.createElement(Bar,{dataKey:\"amount_refund\",fill:\"#8884d8\"}),/*#__PURE__*/React.createElement(Bar,{dataKey:\"amount_payment\",fill:\"#82ca9d\"})));};export default BarEntities;","map":{"version":3,"sources":["/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/DashboardB/BarEntities.js"],"names":["React","PureComponent","BarChart","Bar","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","groupBy","filter","BarEntities","documents","grouped_entities","n","entity_name","console","log","entities","Object","keys","arrSum","arr","reduce","a","b","list_of_objects","i","length","data_object","index","entity_docs","amount_refund","amount_payment","document_type","push","amount","Math","round","amount_total","nr_payments","nr_refunds","nr_announcements","sorted_list","sort","bar_list","reduced_data","barelement","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport {\n  BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nimport {groupBy, filter} from 'lodash';\n\n\n\nconst BarEntities = (documents) => {\n    \n        \n\n    \n    \n        var grouped_entities = groupBy(documents.documents, function(n) {\n          return n.entity_name;\n        })\n\n        console.log(grouped_entities)\n\n        let entities = Object.keys(grouped_entities);\n        \n\n        \n        const arrSum = arr => arr.reduce((a,b) => a + b, 0);\n        const list_of_objects = [];\n        for(let i = 0; i < entities.length; i++) {\n            const data_object = {};\n            let index = entities[i];\n            let entity_docs = grouped_entities[index];\n            data_object.entity_name = index\n            let amount_refund = []\n            let amount_payment = []\n            for (let i = 0; i < entity_docs.length; i++) {\n                if (entity_docs[i].document_type == \"Payment\") {\n                    amount_payment.push(entity_docs[i].amount)\n                    \n                  } else if (entity_docs[i].document_type == \"Refund\") { \n                    amount_refund.push(Math.round(entity_docs[i].amount))\n                  }\n            }\n\n            data_object.amount_payment = arrSum(amount_payment)\n            data_object.amount_refund = arrSum(amount_refund)\n            data_object.amount_total = data_object.amount_refund + data_object.amount_payment\n            data_object.nr_payments = amount_payment.length\n            data_object.nr_refunds = amount_refund.length\n            data_object.nr_announcements = entity_docs.length - amount_payment.length - amount_refund.length\n\n\n\n\n            list_of_objects.push(data_object)\n\n\n\n\n        }\n        console.log(list_of_objects)\n\n        const sorted_list = list_of_objects.sort((a, b) => (b.amount_total - a.amount_total))\n\n\n        const bar_list = []\n        const reduced_data = []\n        for (let i = 0; i < 5; i++) {\n            reduced_data.push(sorted_list[i])\n            let barelement = <Bar dataKey=\"amount_refund\" fill=\"#8884d8\" />;\n            bar_list.push(barelement)\n        }\n\n\n    return <>\n        <BarChart\n        width={900}\n        height={500}\n        data = {reduced_data}\n        margin={{\n          top: 5, right: 30, left: 20, bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"entity_name\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"amount_refund\" fill=\"#8884d8\" />\n        <Bar dataKey=\"amount_payment\" fill=\"#82ca9d\" />\n      </BarChart>\n    </>\n}\n\n\nexport default BarEntities;"]},"metadata":{},"sourceType":"module"}