{"ast":null,"code":"var _jsxFileName = \"/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/DashboardB/LineChart.js\";\nimport React, { PureComponent } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { line, map } from 'd3';\n\nconst Graphed = ({\n  data,\n  variable\n}) => {\n  const colors = ['#1890ff', \"#389e0d\", \"#d4380d\"];\n  const types = [\"refunds\", \"payments\", \"announcements\"];\n  const typelist = [];\n\n  for (let i = 0; i < types.length; i++) {\n    let line = /*#__PURE__*/React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: types[i],\n      stroke: colors[i],\n      strokeWidth: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 20\n      }\n    });\n    typelist.push(line);\n  }\n\n  const amount_list = [];\n  const amount = [/*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"amount_refund\",\n    stroke: colors[0],\n    strokeWidth: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"amount_payment\",\n    stroke: colors[1],\n    strokeWidth: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  })];\n  let unit = variable === \"dollar\" ? \"$\" : \"\";\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography.Title, {\n    level: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, \"Time view\"), /*#__PURE__*/React.createElement(Typography.Paragraph, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Cumulative \", props.variable === \"dollar\" ? \"dollar value\" : \"number of notices\", \" per month\"), /*#__PURE__*/React.createElement(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(LineChart, {\n    width: 800,\n    height: 400,\n    data: data,\n    margin: {\n      top: 5,\n      right: 30,\n      left: 20,\n      bottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"month\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    unit: unit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), variable === \"dollar\" ? amount : typelist));\n};\n\nexport default Graphed;","map":{"version":3,"sources":["/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/DashboardB/LineChart.js"],"names":["React","PureComponent","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","line","map","Graphed","data","variable","colors","types","typelist","i","length","push","amount_list","amount","unit","props","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\nimport { line, map } from 'd3';\n\n\n\n\nconst Graphed = ({data, variable}) => {\n\n    \n\n    const colors = ['#1890ff', \"#389e0d\", \"#d4380d\"]\n    const types = [\"refunds\", \"payments\", \"announcements\"] \n    \n    const typelist = [];\n    for (let i = 0; i < types.length; i++){\n        let line = <Line type=\"monotone\" dataKey={types[i]} stroke={colors[i]} strokeWidth={2} />\n        typelist.push(line)\n    }\n\n    const amount_list = []\n\n    \n    const amount = [<Line type=\"monotone\" dataKey={\"amount_refund\"} stroke={colors[0]} strokeWidth={2} />,\n                    <Line type=\"monotone\" dataKey={\"amount_payment\"} stroke={colors[1]} strokeWidth={2} />]\n\n    let unit = variable === \"dollar\" ? \"$\" : \"\"\n   \n    return <>\n    <Typography.Title level = {2} >\n          Time view\n        </Typography.Title>\n        <Typography.Paragraph>\n        Cumulative {props.variable === \"dollar\"? \"dollar value\" : \"number of notices\"} per month\n        </Typography.Paragraph>\n    <AppLayout></AppLayout>\n\n      <LineChart\n        width={800}\n        height={400}\n        data={data}\n        margin={{\n          top: 5, right: 30, left: 20, bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"month\" />\n        <YAxis unit={unit}/>\n        <Tooltip />\n        <Legend />\n        {variable === \"dollar\" ? amount : typelist}\n\n      </LineChart>\n    </>;\n  \n}\n\nexport default Graphed;"]},"metadata":{},"sourceType":"module"}