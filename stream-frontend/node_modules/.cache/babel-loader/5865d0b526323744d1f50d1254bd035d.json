{"ast":null,"code":"/* FileSaver.js\n * A saveAs() FileSaver implementation.\n * 1.3.2\n * 2016-06-16 18:25:19\n *\n * By Eli Grey, http://eligrey.com\n * License: MIT\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n */\n\n/*global self */\n\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\nvar saveAs = saveAs || function (view) {\n  \"use strict\"; // IE <10 is explicitly unsupported\n\n  if (typeof view === \"undefined\" || typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\n    return;\n  }\n\n  var doc = view.document // only get URL when necessary in case Blob.js hasn't overridden it yet\n  ,\n      get_URL = function () {\n    return view.URL || view.webkitURL || view;\n  },\n      save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\"),\n      can_use_save_link = (\"download\" in save_link),\n      click = function (node) {\n    var event = new MouseEvent(\"click\");\n    node.dispatchEvent(event);\n  },\n      is_safari = /constructor/i.test(view.HTMLElement) || view.safari,\n      is_chrome_ios = /CriOS\\/[\\d]+/.test(navigator.userAgent),\n      throw_outside = function (ex) {\n    (view.setImmediate || view.setTimeout)(function () {\n      throw ex;\n    }, 0);\n  },\n      force_saveable_type = \"application/octet-stream\" // the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\n  ,\n      arbitrary_revoke_timeout = 1000 * 40 // in ms\n  ,\n      revoke = function (file) {\n    var revoker = function () {\n      if (typeof file === \"string\") {\n        // file is an object URL\n        get_URL().revokeObjectURL(file);\n      } else {\n        // file is a File\n        file.remove();\n      }\n    };\n\n    setTimeout(revoker, arbitrary_revoke_timeout);\n  },\n      dispatch = function (filesaver, event_types, event) {\n    event_types = [].concat(event_types);\n    var i = event_types.length;\n\n    while (i--) {\n      var listener = filesaver[\"on\" + event_types[i]];\n\n      if (typeof listener === \"function\") {\n        try {\n          listener.call(filesaver, event || filesaver);\n        } catch (ex) {\n          throw_outside(ex);\n        }\n      }\n    }\n  },\n      auto_bom = function (blob) {\n    // prepend BOM for UTF-8 XML and text/* types (including HTML)\n    // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n    if (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n      return new Blob([String.fromCharCode(0xFEFF), blob], {\n        type: blob.type\n      });\n    }\n\n    return blob;\n  },\n      FileSaver = function (blob, name, no_auto_bom) {\n    if (!no_auto_bom) {\n      blob = auto_bom(blob);\n    } // First try a.download, then web filesystem, then object URLs\n\n\n    var filesaver = this,\n        type = blob.type,\n        force = type === force_saveable_type,\n        object_url,\n        dispatch_all = function () {\n      dispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n    } // on any filesys errors revert to saving with object URLs\n    ,\n        fs_error = function () {\n      if ((is_chrome_ios || force && is_safari) && view.FileReader) {\n        // Safari doesn't allow downloading of blob urls\n        var reader = new FileReader();\n\n        reader.onloadend = function () {\n          var url = is_chrome_ios ? reader.result : reader.result.replace(/^data:[^;]*;/, 'data:attachment/file;');\n          var popup = view.open(url, '_blank');\n          if (!popup) view.location.href = url;\n          url = undefined; // release reference before dispatching\n\n          filesaver.readyState = filesaver.DONE;\n          dispatch_all();\n        };\n\n        reader.readAsDataURL(blob);\n        filesaver.readyState = filesaver.INIT;\n        return;\n      } // don't create more object URLs than needed\n\n\n      if (!object_url) {\n        object_url = get_URL().createObjectURL(blob);\n      }\n\n      if (force) {\n        view.location.href = object_url;\n      } else {\n        var opened = view.open(object_url, \"_blank\");\n\n        if (!opened) {\n          // Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html\n          view.location.href = object_url;\n        }\n      }\n\n      filesaver.readyState = filesaver.DONE;\n      dispatch_all();\n      revoke(object_url);\n    };\n\n    filesaver.readyState = filesaver.INIT;\n\n    if (can_use_save_link) {\n      object_url = get_URL().createObjectURL(blob);\n      setTimeout(function () {\n        save_link.href = object_url;\n        save_link.download = name;\n        click(save_link);\n        dispatch_all();\n        revoke(object_url);\n        filesaver.readyState = filesaver.DONE;\n      });\n      return;\n    }\n\n    fs_error();\n  },\n      FS_proto = FileSaver.prototype,\n      saveAs = function (blob, name, no_auto_bom) {\n    return new FileSaver(blob, name || blob.name || \"download\", no_auto_bom);\n  }; // IE 10+ (native saveAs)\n\n\n  if (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\n    return function (blob, name, no_auto_bom) {\n      name = name || blob.name || \"download\";\n\n      if (!no_auto_bom) {\n        blob = auto_bom(blob);\n      }\n\n      return navigator.msSaveOrOpenBlob(blob, name);\n    };\n  }\n\n  FS_proto.abort = function () {};\n\n  FS_proto.readyState = FS_proto.INIT = 0;\n  FS_proto.WRITING = 1;\n  FS_proto.DONE = 2;\n  FS_proto.error = FS_proto.onwritestart = FS_proto.onprogress = FS_proto.onwrite = FS_proto.onabort = FS_proto.onerror = FS_proto.onwriteend = null;\n  return saveAs;\n}(typeof self !== \"undefined\" && self || typeof window !== \"undefined\" && window || this.content); // `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\n\nif (typeof module !== \"undefined\" && module.exports) {\n  module.exports.saveAs = saveAs;\n} else if (typeof define !== \"undefined\" && define !== null && define.amd !== null) {\n  define(\"FileSaver.js\", function () {\n    return saveAs;\n  });\n}","map":{"version":3,"sources":["/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/node_modules/file-saver/FileSaver.js"],"names":["saveAs","view","navigator","test","userAgent","doc","document","get_URL","URL","webkitURL","save_link","createElementNS","can_use_save_link","click","node","event","MouseEvent","dispatchEvent","is_safari","HTMLElement","safari","is_chrome_ios","throw_outside","ex","setImmediate","setTimeout","force_saveable_type","arbitrary_revoke_timeout","revoke","file","revoker","revokeObjectURL","remove","dispatch","filesaver","event_types","concat","i","length","listener","call","auto_bom","blob","type","Blob","String","fromCharCode","FileSaver","name","no_auto_bom","force","object_url","dispatch_all","split","fs_error","FileReader","reader","onloadend","url","result","replace","popup","open","location","href","undefined","readyState","DONE","readAsDataURL","INIT","createObjectURL","opened","download","FS_proto","prototype","msSaveOrOpenBlob","abort","WRITING","error","onwritestart","onprogress","onwrite","onabort","onerror","onwriteend","self","window","content","module","exports","define","amd"],"mappings":"AAAA;;;;;;;;;;AAUA;;AACA;;AAEA;AAEA,IAAIA,MAAM,GAAGA,MAAM,IAAK,UAASC,IAAT,EAAe;AACtC,eADsC,CAEtC;;AACA,MAAI,OAAOA,IAAP,KAAgB,WAAhB,IAA+B,OAAOC,SAAP,KAAqB,WAArB,IAAoC,eAAeC,IAAf,CAAoBD,SAAS,CAACE,SAA9B,CAAvE,EAAiH;AAChH;AACA;;AACD,MACGC,GAAG,GAAGJ,IAAI,CAACK,QADd,CAEG;AAFH;AAAA,MAGGC,OAAO,GAAG,YAAW;AACtB,WAAON,IAAI,CAACO,GAAL,IAAYP,IAAI,CAACQ,SAAjB,IAA8BR,IAArC;AACA,GALF;AAAA,MAMGS,SAAS,GAAGL,GAAG,CAACM,eAAJ,CAAoB,8BAApB,EAAoD,GAApD,CANf;AAAA,MAOGC,iBAAiB,IAAG,cAAcF,SAAjB,CAPpB;AAAA,MAQGG,KAAK,GAAG,UAASC,IAAT,EAAe;AACxB,QAAIC,KAAK,GAAG,IAAIC,UAAJ,CAAe,OAAf,CAAZ;AACAF,IAAAA,IAAI,CAACG,aAAL,CAAmBF,KAAnB;AACA,GAXF;AAAA,MAYGG,SAAS,GAAG,eAAef,IAAf,CAAoBF,IAAI,CAACkB,WAAzB,KAAyClB,IAAI,CAACmB,MAZ7D;AAAA,MAaGC,aAAa,GAAE,eAAelB,IAAf,CAAoBD,SAAS,CAACE,SAA9B,CAblB;AAAA,MAcGkB,aAAa,GAAG,UAASC,EAAT,EAAa;AAC9B,KAACtB,IAAI,CAACuB,YAAL,IAAqBvB,IAAI,CAACwB,UAA3B,EAAuC,YAAW;AACjD,YAAMF,EAAN;AACA,KAFD,EAEG,CAFH;AAGA,GAlBF;AAAA,MAmBGG,mBAAmB,GAAG,0BAnBzB,CAoBC;AApBD;AAAA,MAqBGC,wBAAwB,GAAG,OAAO,EArBrC,CAqBwC;AArBxC;AAAA,MAsBGC,MAAM,GAAG,UAASC,IAAT,EAAe;AACzB,QAAIC,OAAO,GAAG,YAAW;AACxB,UAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAAE;AAC/BtB,QAAAA,OAAO,GAAGwB,eAAV,CAA0BF,IAA1B;AACA,OAFD,MAEO;AAAE;AACRA,QAAAA,IAAI,CAACG,MAAL;AACA;AACD,KAND;;AAOAP,IAAAA,UAAU,CAACK,OAAD,EAAUH,wBAAV,CAAV;AACA,GA/BF;AAAA,MAgCGM,QAAQ,GAAG,UAASC,SAAT,EAAoBC,WAApB,EAAiCpB,KAAjC,EAAwC;AACpDoB,IAAAA,WAAW,GAAG,GAAGC,MAAH,CAAUD,WAAV,CAAd;AACA,QAAIE,CAAC,GAAGF,WAAW,CAACG,MAApB;;AACA,WAAOD,CAAC,EAAR,EAAY;AACX,UAAIE,QAAQ,GAAGL,SAAS,CAAC,OAAOC,WAAW,CAACE,CAAD,CAAnB,CAAxB;;AACA,UAAI,OAAOE,QAAP,KAAoB,UAAxB,EAAoC;AACnC,YAAI;AACHA,UAAAA,QAAQ,CAACC,IAAT,CAAcN,SAAd,EAAyBnB,KAAK,IAAImB,SAAlC;AACA,SAFD,CAEE,OAAOX,EAAP,EAAW;AACZD,UAAAA,aAAa,CAACC,EAAD,CAAb;AACA;AACD;AACD;AACD,GA7CF;AAAA,MA8CGkB,QAAQ,GAAG,UAASC,IAAT,EAAe;AAC3B;AACA;AACA,QAAI,6EAA6EvC,IAA7E,CAAkFuC,IAAI,CAACC,IAAvF,CAAJ,EAAkG;AACjG,aAAO,IAAIC,IAAJ,CAAS,CAACC,MAAM,CAACC,YAAP,CAAoB,MAApB,CAAD,EAA8BJ,IAA9B,CAAT,EAA8C;AAACC,QAAAA,IAAI,EAAED,IAAI,CAACC;AAAZ,OAA9C,CAAP;AACA;;AACD,WAAOD,IAAP;AACA,GArDF;AAAA,MAsDGK,SAAS,GAAG,UAASL,IAAT,EAAeM,IAAf,EAAqBC,WAArB,EAAkC;AAC/C,QAAI,CAACA,WAAL,EAAkB;AACjBP,MAAAA,IAAI,GAAGD,QAAQ,CAACC,IAAD,CAAf;AACA,KAH8C,CAI/C;;;AACA,QACGR,SAAS,GAAG,IADf;AAAA,QAEGS,IAAI,GAAGD,IAAI,CAACC,IAFf;AAAA,QAGGO,KAAK,GAAGP,IAAI,KAAKjB,mBAHpB;AAAA,QAIGyB,UAJH;AAAA,QAKGC,YAAY,GAAG,YAAW;AAC3BnB,MAAAA,QAAQ,CAACC,SAAD,EAAY,qCAAqCmB,KAArC,CAA2C,GAA3C,CAAZ,CAAR;AACA,KAPF,CAQC;AARD;AAAA,QASGC,QAAQ,GAAG,YAAW;AACvB,UAAI,CAACjC,aAAa,IAAK6B,KAAK,IAAIhC,SAA5B,KAA2CjB,IAAI,CAACsD,UAApD,EAAgE;AAC/D;AACA,YAAIC,MAAM,GAAG,IAAID,UAAJ,EAAb;;AACAC,QAAAA,MAAM,CAACC,SAAP,GAAmB,YAAW;AAC7B,cAAIC,GAAG,GAAGrC,aAAa,GAAGmC,MAAM,CAACG,MAAV,GAAmBH,MAAM,CAACG,MAAP,CAAcC,OAAd,CAAsB,cAAtB,EAAsC,uBAAtC,CAA1C;AACA,cAAIC,KAAK,GAAG5D,IAAI,CAAC6D,IAAL,CAAUJ,GAAV,EAAe,QAAf,CAAZ;AACA,cAAG,CAACG,KAAJ,EAAW5D,IAAI,CAAC8D,QAAL,CAAcC,IAAd,GAAqBN,GAArB;AACXA,UAAAA,GAAG,GAACO,SAAJ,CAJ6B,CAId;;AACf/B,UAAAA,SAAS,CAACgC,UAAV,GAAuBhC,SAAS,CAACiC,IAAjC;AACAf,UAAAA,YAAY;AACZ,SAPD;;AAQAI,QAAAA,MAAM,CAACY,aAAP,CAAqB1B,IAArB;AACAR,QAAAA,SAAS,CAACgC,UAAV,GAAuBhC,SAAS,CAACmC,IAAjC;AACA;AACA,OAfsB,CAgBvB;;;AACA,UAAI,CAAClB,UAAL,EAAiB;AAChBA,QAAAA,UAAU,GAAG5C,OAAO,GAAG+D,eAAV,CAA0B5B,IAA1B,CAAb;AACA;;AACD,UAAIQ,KAAJ,EAAW;AACVjD,QAAAA,IAAI,CAAC8D,QAAL,CAAcC,IAAd,GAAqBb,UAArB;AACA,OAFD,MAEO;AACN,YAAIoB,MAAM,GAAGtE,IAAI,CAAC6D,IAAL,CAAUX,UAAV,EAAsB,QAAtB,CAAb;;AACA,YAAI,CAACoB,MAAL,EAAa;AACZ;AACAtE,UAAAA,IAAI,CAAC8D,QAAL,CAAcC,IAAd,GAAqBb,UAArB;AACA;AACD;;AACDjB,MAAAA,SAAS,CAACgC,UAAV,GAAuBhC,SAAS,CAACiC,IAAjC;AACAf,MAAAA,YAAY;AACZxB,MAAAA,MAAM,CAACuB,UAAD,CAAN;AACA,KAzCF;;AA2CAjB,IAAAA,SAAS,CAACgC,UAAV,GAAuBhC,SAAS,CAACmC,IAAjC;;AAEA,QAAIzD,iBAAJ,EAAuB;AACtBuC,MAAAA,UAAU,GAAG5C,OAAO,GAAG+D,eAAV,CAA0B5B,IAA1B,CAAb;AACAjB,MAAAA,UAAU,CAAC,YAAW;AACrBf,QAAAA,SAAS,CAACsD,IAAV,GAAiBb,UAAjB;AACAzC,QAAAA,SAAS,CAAC8D,QAAV,GAAqBxB,IAArB;AACAnC,QAAAA,KAAK,CAACH,SAAD,CAAL;AACA0C,QAAAA,YAAY;AACZxB,QAAAA,MAAM,CAACuB,UAAD,CAAN;AACAjB,QAAAA,SAAS,CAACgC,UAAV,GAAuBhC,SAAS,CAACiC,IAAjC;AACA,OAPS,CAAV;AAQA;AACA;;AAEDb,IAAAA,QAAQ;AACR,GAtHF;AAAA,MAuHGmB,QAAQ,GAAG1B,SAAS,CAAC2B,SAvHxB;AAAA,MAwHG1E,MAAM,GAAG,UAAS0C,IAAT,EAAeM,IAAf,EAAqBC,WAArB,EAAkC;AAC5C,WAAO,IAAIF,SAAJ,CAAcL,IAAd,EAAoBM,IAAI,IAAIN,IAAI,CAACM,IAAb,IAAqB,UAAzC,EAAqDC,WAArD,CAAP;AACA,GA1HF,CANsC,CAkItC;;;AACA,MAAI,OAAO/C,SAAP,KAAqB,WAArB,IAAoCA,SAAS,CAACyE,gBAAlD,EAAoE;AACnE,WAAO,UAASjC,IAAT,EAAeM,IAAf,EAAqBC,WAArB,EAAkC;AACxCD,MAAAA,IAAI,GAAGA,IAAI,IAAIN,IAAI,CAACM,IAAb,IAAqB,UAA5B;;AAEA,UAAI,CAACC,WAAL,EAAkB;AACjBP,QAAAA,IAAI,GAAGD,QAAQ,CAACC,IAAD,CAAf;AACA;;AACD,aAAOxC,SAAS,CAACyE,gBAAV,CAA2BjC,IAA3B,EAAiCM,IAAjC,CAAP;AACA,KAPD;AAQA;;AAEDyB,EAAAA,QAAQ,CAACG,KAAT,GAAiB,YAAU,CAAE,CAA7B;;AACAH,EAAAA,QAAQ,CAACP,UAAT,GAAsBO,QAAQ,CAACJ,IAAT,GAAgB,CAAtC;AACAI,EAAAA,QAAQ,CAACI,OAAT,GAAmB,CAAnB;AACAJ,EAAAA,QAAQ,CAACN,IAAT,GAAgB,CAAhB;AAEAM,EAAAA,QAAQ,CAACK,KAAT,GACAL,QAAQ,CAACM,YAAT,GACAN,QAAQ,CAACO,UAAT,GACAP,QAAQ,CAACQ,OAAT,GACAR,QAAQ,CAACS,OAAT,GACAT,QAAQ,CAACU,OAAT,GACAV,QAAQ,CAACW,UAAT,GACC,IAPD;AASA,SAAOpF,MAAP;AACA,CA7JuB,CA8JpB,OAAOqF,IAAP,KAAgB,WAAhB,IAA+BA,IAA/B,IACA,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MADjC,IAEA,KAAKC,OAhKe,CAAxB,C,CAkKA;AACA;AACA;;;AAEA,IAAI,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,OAA5C,EAAqD;AACnDD,EAAAA,MAAM,CAACC,OAAP,CAAezF,MAAf,GAAwBA,MAAxB;AACD,CAFD,MAEO,IAAK,OAAO0F,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,KAAK,IAA7C,IAAuDA,MAAM,CAACC,GAAP,KAAe,IAA1E,EAAiF;AACtFD,EAAAA,MAAM,CAAC,cAAD,EAAiB,YAAW;AAChC,WAAO1F,MAAP;AACD,GAFK,CAAN;AAGD","sourcesContent":["/* FileSaver.js\n * A saveAs() FileSaver implementation.\n * 1.3.2\n * 2016-06-16 18:25:19\n *\n * By Eli Grey, http://eligrey.com\n * License: MIT\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = saveAs || (function(view) {\n\t\"use strict\";\n\t// IE <10 is explicitly unsupported\n\tif (typeof view === \"undefined\" || typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\n\t\treturn;\n\t}\n\tvar\n\t\t  doc = view.document\n\t\t  // only get URL when necessary in case Blob.js hasn't overridden it yet\n\t\t, get_URL = function() {\n\t\t\treturn view.URL || view.webkitURL || view;\n\t\t}\n\t\t, save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t, can_use_save_link = \"download\" in save_link\n\t\t, click = function(node) {\n\t\t\tvar event = new MouseEvent(\"click\");\n\t\t\tnode.dispatchEvent(event);\n\t\t}\n\t\t, is_safari = /constructor/i.test(view.HTMLElement) || view.safari\n\t\t, is_chrome_ios =/CriOS\\/[\\d]+/.test(navigator.userAgent)\n\t\t, throw_outside = function(ex) {\n\t\t\t(view.setImmediate || view.setTimeout)(function() {\n\t\t\t\tthrow ex;\n\t\t\t}, 0);\n\t\t}\n\t\t, force_saveable_type = \"application/octet-stream\"\n\t\t// the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\n\t\t, arbitrary_revoke_timeout = 1000 * 40 // in ms\n\t\t, revoke = function(file) {\n\t\t\tvar revoker = function() {\n\t\t\t\tif (typeof file === \"string\") { // file is an object URL\n\t\t\t\t\tget_URL().revokeObjectURL(file);\n\t\t\t\t} else { // file is a File\n\t\t\t\t\tfile.remove();\n\t\t\t\t}\n\t\t\t};\n\t\t\tsetTimeout(revoker, arbitrary_revoke_timeout);\n\t\t}\n\t\t, dispatch = function(filesaver, event_types, event) {\n\t\t\tevent_types = [].concat(event_types);\n\t\t\tvar i = event_types.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar listener = filesaver[\"on\" + event_types[i]];\n\t\t\t\tif (typeof listener === \"function\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlistener.call(filesaver, event || filesaver);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t, auto_bom = function(blob) {\n\t\t\t// prepend BOM for UTF-8 XML and text/* types (including HTML)\n\t\t\t// note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n\t\t\tif (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n\t\t\t\treturn new Blob([String.fromCharCode(0xFEFF), blob], {type: blob.type});\n\t\t\t}\n\t\t\treturn blob;\n\t\t}\n\t\t, FileSaver = function(blob, name, no_auto_bom) {\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\t// First try a.download, then web filesystem, then object URLs\n\t\t\tvar\n\t\t\t\t  filesaver = this\n\t\t\t\t, type = blob.type\n\t\t\t\t, force = type === force_saveable_type\n\t\t\t\t, object_url\n\t\t\t\t, dispatch_all = function() {\n\t\t\t\t\tdispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n\t\t\t\t}\n\t\t\t\t// on any filesys errors revert to saving with object URLs\n\t\t\t\t, fs_error = function() {\n\t\t\t\t\tif ((is_chrome_ios || (force && is_safari)) && view.FileReader) {\n\t\t\t\t\t\t// Safari doesn't allow downloading of blob urls\n\t\t\t\t\t\tvar reader = new FileReader();\n\t\t\t\t\t\treader.onloadend = function() {\n\t\t\t\t\t\t\tvar url = is_chrome_ios ? reader.result : reader.result.replace(/^data:[^;]*;/, 'data:attachment/file;');\n\t\t\t\t\t\t\tvar popup = view.open(url, '_blank');\n\t\t\t\t\t\t\tif(!popup) view.location.href = url;\n\t\t\t\t\t\t\turl=undefined; // release reference before dispatching\n\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\tdispatch_all();\n\t\t\t\t\t\t};\n\t\t\t\t\t\treader.readAsDataURL(blob);\n\t\t\t\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// don't create more object URLs than needed\n\t\t\t\t\tif (!object_url) {\n\t\t\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\t\t}\n\t\t\t\t\tif (force) {\n\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar opened = view.open(object_url, \"_blank\");\n\t\t\t\t\t\tif (!opened) {\n\t\t\t\t\t\t\t// Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html\n\t\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t}\n\t\t\t;\n\t\t\tfilesaver.readyState = filesaver.INIT;\n\n\t\t\tif (can_use_save_link) {\n\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tsave_link.href = object_url;\n\t\t\t\t\tsave_link.download = name;\n\t\t\t\t\tclick(save_link);\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfs_error();\n\t\t}\n\t\t, FS_proto = FileSaver.prototype\n\t\t, saveAs = function(blob, name, no_auto_bom) {\n\t\t\treturn new FileSaver(blob, name || blob.name || \"download\", no_auto_bom);\n\t\t}\n\t;\n\t// IE 10+ (native saveAs)\n\tif (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\n\t\treturn function(blob, name, no_auto_bom) {\n\t\t\tname = name || blob.name || \"download\";\n\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\treturn navigator.msSaveOrOpenBlob(blob, name);\n\t\t};\n\t}\n\n\tFS_proto.abort = function(){};\n\tFS_proto.readyState = FS_proto.INIT = 0;\n\tFS_proto.WRITING = 1;\n\tFS_proto.DONE = 2;\n\n\tFS_proto.error =\n\tFS_proto.onwritestart =\n\tFS_proto.onprogress =\n\tFS_proto.onwrite =\n\tFS_proto.onabort =\n\tFS_proto.onerror =\n\tFS_proto.onwriteend =\n\t\tnull;\n\n\treturn saveAs;\n}(\n\t   typeof self !== \"undefined\" && self\n\t|| typeof window !== \"undefined\" && window\n\t|| this.content\n));\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\nif (typeof module !== \"undefined\" && module.exports) {\n  module.exports.saveAs = saveAs;\n} else if ((typeof define !== \"undefined\" && define !== null) && (define.amd !== null)) {\n  define(\"FileSaver.js\", function() {\n    return saveAs;\n  });\n}\n"]},"metadata":{},"sourceType":"script"}