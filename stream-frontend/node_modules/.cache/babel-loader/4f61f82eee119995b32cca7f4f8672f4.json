{"ast":null,"code":"import { groupBy, filter } from 'lodash';\nimport moment from 'moment';\n\nconst group_month = documents => {\n  var month_grouping = groupBy(documents, function (n) {\n    return n.month;\n  });\n  let months = Object.keys(month_grouping);\n\n  const arrSum = arr => arr.reduce((a, b) => a + b, 0);\n\n  const list_of_objects = [];\n\n  for (let i = 0; i < months.length; i++) {\n    const data_object = {};\n    let index = months[i];\n    let test = month_grouping[index];\n    let amount = [];\n\n    for (let i = 0; i < test.length; i++) {\n      amount.push(test[i].amount);\n    }\n\n    data_object.amount = arrSum(amount);\n    var groups = groupBy(test, function (n) {\n      return n.document_type;\n    });\n    data_object.month = index;\n    data_object.refunds = groups['Refund'].length;\n    data_object.payments = groups['Payment'].length;\n    data_object.announcements = groups['Announcement'].length;\n    data_object.epoch = moment(index, \"YYYY/MM\").valueOf();\n    list_of_objects.push(data_object);\n  }\n\n  list_of_objects.sort(function (a, b) {\n    return a.epoch - b.epoch;\n  });\n  return list_of_objects;\n};\n\nexport default group_month;","map":{"version":3,"sources":["/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/Dashboard/utils.js"],"names":["groupBy","filter","moment","group_month","documents","month_grouping","n","month","months","Object","keys","arrSum","arr","reduce","a","b","list_of_objects","i","length","data_object","index","test","amount","push","groups","document_type","refunds","payments","announcements","epoch","valueOf","sort"],"mappings":"AAAA,SAAQA,OAAR,EAAiBC,MAAjB,QAA8B,QAA9B;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,WAAW,GAAIC,SAAD,IAAe;AAC/B,MAAIC,cAAc,GAAGL,OAAO,CAACI,SAAD,EAAY,UAASE,CAAT,EAAY;AAClD,WAAOA,CAAC,CAACC,KAAT;AACD,GAF2B,CAA5B;AAKH,MAAIC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYL,cAAZ,CAAb;;AACA,QAAMM,MAAM,GAAGC,GAAG,IAAIA,GAAG,CAACC,MAAJ,CAAW,CAACC,CAAD,EAAGC,CAAH,KAASD,CAAC,GAAGC,CAAxB,EAA2B,CAA3B,CAAtB;;AAEC,QAAMC,eAAe,GAAG,EAAxB;;AACA,OAAI,IAAIC,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAET,MAAM,CAACU,MAAxB,EAAgCD,CAAC,EAAjC,EAAoC;AAChC,UAAME,WAAW,GAAG,EAApB;AACA,QAAIC,KAAK,GAAGZ,MAAM,CAACS,CAAD,CAAlB;AACA,QAAII,IAAI,GAAGhB,cAAc,CAACe,KAAD,CAAzB;AACA,QAAIE,MAAM,GAAG,EAAb;;AACA,SAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGI,IAAI,CAACH,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpCK,MAAAA,MAAM,CAACC,IAAP,CAAYF,IAAI,CAACJ,CAAD,CAAJ,CAAQK,MAApB;AACD;;AACDH,IAAAA,WAAW,CAACG,MAAZ,GAAqBX,MAAM,CAACW,MAAD,CAA3B;AAEA,QAAIE,MAAM,GAAGxB,OAAO,CAACqB,IAAD,EAAO,UAASf,CAAT,EAAW;AAChC,aAAOA,CAAC,CAACmB,aAAT;AACL,KAFmB,CAApB;AAGAN,IAAAA,WAAW,CAACZ,KAAZ,GAAoBa,KAApB;AACAD,IAAAA,WAAW,CAACO,OAAZ,GAAsBF,MAAM,CAAC,QAAD,CAAN,CAAiBN,MAAvC;AACAC,IAAAA,WAAW,CAACQ,QAAZ,GAAuBH,MAAM,CAAC,SAAD,CAAN,CAAkBN,MAAzC;AACAC,IAAAA,WAAW,CAACS,aAAZ,GAA4BJ,MAAM,CAAC,cAAD,CAAN,CAAuBN,MAAnD;AACAC,IAAAA,WAAW,CAACU,KAAZ,GAAoB3B,MAAM,CAACkB,KAAD,EAAQ,SAAR,CAAN,CAAyBU,OAAzB,EAApB;AACAd,IAAAA,eAAe,CAACO,IAAhB,CAAqBJ,WAArB;AACH;;AAEDH,EAAAA,eAAe,CAACe,IAAhB,CAAqB,UAASjB,CAAT,EAAYC,CAAZ,EAAe;AAClC,WAAOD,CAAC,CAACe,KAAF,GAAUd,CAAC,CAACc,KAAnB;AACD,GAFD;AAGD,SAAOb,eAAP;AAEA,CApCD;;AAsCA,eAAeb,WAAf","sourcesContent":["import {groupBy, filter} from 'lodash';\nimport moment from 'moment';\n\nconst group_month = (documents) => {\n    var month_grouping = groupBy(documents, function(n) {\n      return n.month;\n    });\n\n\n let months = Object.keys(month_grouping);\n const arrSum = arr => arr.reduce((a,b) => a + b, 0);\n\n  const list_of_objects = [];\n  for(let i =0; i< months.length; i++){\n      const data_object = {}\n      let index = months[i]\n      let test = month_grouping[index];\n      let amount = []\n      for (let i = 0; i < test.length; i++) {\n        amount.push(test[i].amount)\n      }\n      data_object.amount = arrSum(amount)\n\n      var groups = groupBy(test, function(n){\n            return n.document_type        \n      })\n      data_object.month = index \n      data_object.refunds = groups['Refund'].length\n      data_object.payments = groups['Payment'].length\n      data_object.announcements = groups['Announcement'].length\n      data_object.epoch = moment(index, \"YYYY/MM\").valueOf()\n      list_of_objects.push(data_object)\n  }\n  \n  list_of_objects.sort(function(a, b) {\n    return a.epoch - b.epoch;\n  })\n return list_of_objects\n\n}\n\nexport default group_month"]},"metadata":{},"sourceType":"module"}