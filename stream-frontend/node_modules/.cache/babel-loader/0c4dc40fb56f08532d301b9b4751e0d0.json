{"ast":null,"code":"var _jsxFileName = \"/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/NoticeManagement/Export.js\";\nimport React from 'react';\nimport ReactExport from \"react-data-export\";\nimport { Button, Select, Divider, Typography, Table } from 'antd';\nimport { ExportOutlined } from '@ant-design/icons';\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nconst Export = data => {\n  const columns_new = [{\n    title: \"Tax Authority\",\n    width: {\n      wch: 20\n    }\n  }, {\n    title: \"Tax Year\",\n    width: {\n      wch: 10\n    }\n  }, {\n    title: \"Entity name\",\n    width: {\n      wch: 50\n    }\n  }, {\n    title: \"Document type\",\n    width: {\n      wch: 20\n    }\n  }, {\n    title: \"Status\",\n    width: {\n      wch: 20\n    }\n  }, {\n    title: \"Dollar value\",\n    width: {\n      wch: 10\n    }\n  }, {\n    title: \"Notice date\",\n    width: {\n      wch: 15\n    }\n  }, {\n    title: \"Payment due\",\n    width: {\n      wch: 15\n    }\n  }];\n  const ordered_documents = [];\n  data.map(item => {\n    let ordered_item = {\n      'state': item.state,\n      'tax_year': item.tax_year,\n      'entity_name': item.entity_name,\n      'document_type': item.document_type,\n      'status': item.status,\n      'amount': item.amount,\n      'notice_date': item.notice_date,\n      'payment_due': item.payment_due\n    };\n    let row = [];\n    const values = Object.values(ordered_item);\n\n    for (let i = 0; i < values.length; i++) {\n      let element = {\n        value: values[i]\n      };\n      row.push(element);\n    }\n\n    ordered_documents.push(row);\n  });\n  const documentsExport = [{\n    columns: columns_new,\n    data: ordered_documents\n  }];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"block\",\n    style: {\n      display: 'block',\n      paddingBottom: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Number of documents in selection: \", data.length), /*#__PURE__*/React.createElement(ExcelFile, {\n    filename: \"StreamDownload\",\n    element: /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(ExportOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    }), \" Export to Excel \"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ExcelSheet, {\n    dataSet: documentsExport,\n    name: \"Organization\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default Export;","map":{"version":3,"sources":["/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/NoticeManagement/Export.js"],"names":["React","ReactExport","Button","Select","Divider","Typography","Table","ExportOutlined","ExcelFile","ExcelSheet","ExcelColumn","Export","data","columns_new","title","width","wch","ordered_documents","map","item","ordered_item","state","tax_year","entity_name","document_type","status","amount","notice_date","payment_due","row","values","Object","i","length","element","value","push","documentsExport","columns","display","paddingBottom"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,OAAzB,EAAkCC,UAAlC,EAA8CC,KAA9C,QAA0D,MAA1D;AACA,SAASC,cAAT,QAA+B,mBAA/B;AAEA,MAAMC,SAAS,GAAGP,WAAW,CAACO,SAA9B;AACA,MAAMC,UAAU,GAAGR,WAAW,CAACO,SAAZ,CAAsBC,UAAzC;AACA,MAAMC,WAAW,GAAGT,WAAW,CAACO,SAAZ,CAAsBE,WAA1C;;AAKA,MAAMC,MAAM,GAAIC,IAAD,IAAU;AAEnB,QAAMC,WAAW,GAAG,CAClB;AAAEC,IAAAA,KAAK,EAAE,eAAT;AAA0BC,IAAAA,KAAK,EAAE;AAACC,MAAAA,GAAG,EAAE;AAAN;AAAjC,GADkB,EAElB;AAAEF,IAAAA,KAAK,EAAE,UAAT;AAAqBC,IAAAA,KAAK,EAAE;AAACC,MAAAA,GAAG,EAAE;AAAN;AAA5B,GAFkB,EAGlB;AAAEF,IAAAA,KAAK,EAAE,aAAT;AAAwBC,IAAAA,KAAK,EAAE;AAACC,MAAAA,GAAG,EAAE;AAAN;AAA/B,GAHkB,EAIlB;AAAEF,IAAAA,KAAK,EAAE,eAAT;AAA0BC,IAAAA,KAAK,EAAE;AAACC,MAAAA,GAAG,EAAE;AAAN;AAAjC,GAJkB,EAKlB;AAAEF,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,KAAK,EAAE;AAACC,MAAAA,GAAG,EAAE;AAAN;AAA1B,GALkB,EAMlB;AAAEF,IAAAA,KAAK,EAAE,cAAT;AAAyBC,IAAAA,KAAK,EAAE;AAACC,MAAAA,GAAG,EAAE;AAAN;AAAhC,GANkB,EAOlB;AAAEF,IAAAA,KAAK,EAAE,aAAT;AAAwBC,IAAAA,KAAK,EAAE;AAACC,MAAAA,GAAG,EAAE;AAAN;AAA/B,GAPkB,EAQlB;AAAEF,IAAAA,KAAK,EAAE,aAAT;AAAwBC,IAAAA,KAAK,EAAE;AAACC,MAAAA,GAAG,EAAE;AAAN;AAA/B,GARkB,CAApB;AAWF,QAAMC,iBAAiB,GAAG,EAA1B;AACAL,EAAAA,IAAI,CAACM,GAAL,CAASC,IAAI,IAAI;AACb,QAAIC,YAAY,GAAG;AACf,eAASD,IAAI,CAACE,KADC;AAEf,kBAAYF,IAAI,CAACG,QAFF;AAGf,qBAAeH,IAAI,CAACI,WAHL;AAIf,uBAAiBJ,IAAI,CAACK,aAJP;AAKf,gBAAUL,IAAI,CAACM,MALA;AAMf,gBAAUN,IAAI,CAACO,MANA;AAOf,qBAAeP,IAAI,CAACQ,WAPL;AAQf,qBAAeR,IAAI,CAACS;AARL,KAAnB;AAUA,QAAIC,GAAG,GAAG,EAAV;AACA,UAAMC,MAAM,GAAGC,MAAM,CAACD,MAAP,CAAcV,YAAd,CAAf;;AACA,SAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACG,MAA3B,EAAmCD,CAAC,EAApC,EAAyC;AACrC,UAAIE,OAAO,GAAG;AAACC,QAAAA,KAAK,EAAEL,MAAM,CAACE,CAAD;AAAd,OAAd;AACAH,MAAAA,GAAG,CAACO,IAAJ,CAASF,OAAT;AACH;;AACDjB,IAAAA,iBAAiB,CAACmB,IAAlB,CAAuBP,GAAvB;AACH,GAlBD;AAuBA,QAAMQ,eAAe,GAAG,CAAC;AACrBC,IAAAA,OAAO,EAAEzB,WADY;AAErBD,IAAAA,IAAI,EAAEK;AAFe,GAAD,CAAxB;AAMA,sBAAO,uDAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAG,OAAjB;AAAyB,IAAA,KAAK,EAAI;AAACsB,MAAAA,OAAO,EAAE,OAAV;AAAmBC,MAAAA,aAAa,EAAE;AAAlC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACmC5B,IAAI,CAACqB,MADxC,CADA,eAII,oBAAC,SAAD;AAAY,IAAA,QAAQ,EAAE,gBAAtB;AACI,IAAA,OAAO,eAAE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAG,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACD,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC,sBADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEI,eAArB;AAAsC,IAAA,IAAI,EAAC,cAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAJJ,CAFD,CAAP;AAmBH,CA9DD;;AAgEA,eAAe1B,MAAf","sourcesContent":["import React from 'react';\nimport ReactExport from \"react-data-export\";\nimport { Button, Select, Divider, Typography, Table} from 'antd';\nimport { ExportOutlined } from '@ant-design/icons';\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\n\n\n\nconst Export = (data) => {\n\n      const columns_new = [\n        { title: \"Tax Authority\", width: {wch: 20}},\n        { title: \"Tax Year\", width: {wch: 10}},\n        { title: \"Entity name\", width: {wch: 50}},\n        { title: \"Document type\", width: {wch: 20} },\n        { title: \"Status\", width: {wch: 20}},\n        { title: \"Dollar value\", width: {wch: 10}},\n        { title: \"Notice date\", width: {wch: 15}},\n        { title: \"Payment due\", width: {wch: 15}}\n        \n      ]\n    const ordered_documents = []\n    data.map(item => {\n        let ordered_item = {\n            'state': item.state,\n            'tax_year': item.tax_year,\n            'entity_name': item.entity_name,\n            'document_type': item.document_type,\n            'status': item.status,\n            'amount': item.amount, \n            'notice_date': item.notice_date,\n            'payment_due': item.payment_due\n        }\n        let row = []\n        const values = Object.values(ordered_item)\n        for (let i = 0; i < values.length; i ++ ){\n            let element = {value: values[i]}\n            row.push(element)\n        }\n        ordered_documents.push(row)\n    })\n\n\n   \n\n    const documentsExport = [{\n        columns: columns_new,\n        data: ordered_documents\n    }];\n\n    \n    return <>\n\n            <div>\n            <div className = \"block\" style = {{display: 'block', paddingBottom: \"20px\"}}>\n            Number of documents in selection: {data.length}\n            </div>\n                <ExcelFile  filename =\"StreamDownload\" \n                    element={<Button type = \"primary\">\n                            <ExportOutlined /> Export to Excel </Button>}>\n                    <ExcelSheet dataSet={documentsExport} name=\"Organization\"/>\n                </ExcelFile>\n            </div>\n    \n\n    \n\n\n    </>\n    \n}\n\nexport default Export; "]},"metadata":{},"sourceType":"module"}