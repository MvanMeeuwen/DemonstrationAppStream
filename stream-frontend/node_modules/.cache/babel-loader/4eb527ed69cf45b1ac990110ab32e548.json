{"ast":null,"code":"import _slicedToArray from\"/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Auth}from'aws-amplify';import{Button,Descriptions,Divider,List,Drawer,Form,Input,Select,Typography,notification}from'antd';var Option=Select.Option;var DrawerComponent=function DrawerComponent(drawervisibility,setDrawervisibility){var _Form$useForm=Form.useForm(),_Form$useForm2=_slicedToArray(_Form$useForm,1),form=_Form$useForm2[0];var _Form$useForm3=Form.useForm(),_Form$useForm4=_slicedToArray(_Form$useForm3,1),verificationform=_Form$useForm4[0];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),confirmcodeVisibility=_useState2[0],setConfirmcodeVisibility=_useState2[1];var _useState3=useState('user'),_useState4=_slicedToArray(_useState3,2),newuser=_useState4[0],setNewuser=_useState4[1];var closeDrawer=function closeDrawer(){setDrawervisibility(false);};var confirmNotification=function confirmNotification(email){notification.open({message:'Sent confirmation',description:'An invitation as well as a verification code has been sent to'+email});};var submitCredentials=function submitCredentials(values){setConfirmcodeVisibility(true);console.log('values:',values);var username=values.name;setNewuser(username);var password=values.password;var email=values.email;var customer=values.customer;var access_level=values.access_level;Auth.signUp({username:username,password:password,attributes:{'email':email,// optional\n'custom:customer':customer,'custom:access_level':access_level// optional - E.164 number convention\n// other custom attributes \n},validationData:[]//optional\n}).then(function(data){console.log(data);confirmNotification(values.email);}).catch(function(err){return console.log(err);});};var verifyUser=function verifyUser(values){console.log(values);var code=values.code;var username=newuser;Auth.confirmSignUp(username,code,{// Optional. Force user confirmation irrespective of existing alias. By default set to True.\nforceAliasCreation:true}).then(function(data){return console.log(data);}).catch(function(err){return console.log(err);});};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Drawer,{title:\"Create a new account\",width:360,visible:drawervisibility,onClose:closeDrawer,bodyStyle:{paddingBottom:80,border:\"1px solid rgb(230,230,230)\"},footer:/*#__PURE__*/React.createElement(\"div\",{style:{textAlign:'right'}})},/*#__PURE__*/React.createElement(Form,{layout:\"vertical\",form:form,onFinish:submitCredentials,hideRequiredMark:true},/*#__PURE__*/React.createElement(Form.Item,{name:\"name\",label:\"Name\",rules:[{required:true,message:'Please enter user name'}]},/*#__PURE__*/React.createElement(Input,{placeholder:\"Please enter user name\"})),/*#__PURE__*/React.createElement(Form.Item,{name:\"email\",label:\"Email\",rules:[{required:true,message:'Please enter your email'}]},/*#__PURE__*/React.createElement(Input,{placeholder:\"Please enter email address\"})),/*#__PURE__*/React.createElement(Form.Item,{name:\"password\",label:\"Temporary password\",rules:[{required:true,message:'Please select a temporary password'}]},/*#__PURE__*/React.createElement(Input.Password,{placeholder:\"Please select temporary password\"})),/*#__PURE__*/React.createElement(Form.Item,{name:\"access_level\",label:\"Access level\",rules:[{required:true,message:'Please indicate access rights'}]},/*#__PURE__*/React.createElement(Select,{placeholder:\"Indicate access rights\"},/*#__PURE__*/React.createElement(Option,{value:\"admin\"},\"Administrator access\"),/*#__PURE__*/React.createElement(Option,{value:\"full\"},\"Full access\"),/*#__PURE__*/React.createElement(Option,{value:\"third-party\"},\"Customized access\"))),/*#__PURE__*/React.createElement(Form.Item,{name:\"customer\",label:\"Customer\",rules:[{required:true,message:'Please the name of your organization'}]},/*#__PURE__*/React.createElement(Input,{placeholder:\"Please the name of your organization\"})),/*#__PURE__*/React.createElement(Button,{type:\"primary\",htmlType:\"submit\"},\"Add user\"))));};export default DrawerComponent;","map":{"version":3,"sources":["/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/Admin/DrawerComponent.js"],"names":["React","useState","Auth","Button","Descriptions","Divider","List","Drawer","Form","Input","Select","Typography","notification","Option","DrawerComponent","drawervisibility","setDrawervisibility","useForm","form","verificationform","confirmcodeVisibility","setConfirmcodeVisibility","newuser","setNewuser","closeDrawer","confirmNotification","email","open","message","description","submitCredentials","values","console","log","username","name","password","customer","access_level","signUp","attributes","validationData","then","data","catch","err","verifyUser","code","confirmSignUp","forceAliasCreation","paddingBottom","border","textAlign","required"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport {Auth} from 'aws-amplify';\n\n\nimport { Button, Descriptions, Divider, List, Drawer, Form, Input, Select , Typography, notification} from 'antd';\n\nconst { Option } = Select;\nconst DrawerComponent = (drawervisibility, setDrawervisibility) => {\n    const [form] = Form.useForm();\n    const [verificationform] = Form.useForm();\n\n    const [confirmcodeVisibility, setConfirmcodeVisibility] = useState(false)\n    const [newuser, setNewuser] = useState('user')\n    \n    const closeDrawer = () => {\n        setDrawervisibility(false)\n    };\n\n    const confirmNotification = (email) => {\n\n      notification.open({\n        message: 'Sent confirmation',\n        description:\n          'An invitation as well as a verification code has been sent to' + email \n      });\n\n\n\n    }\n\n    const submitCredentials = (values) => {\n        setConfirmcodeVisibility(true)\n        console.log('values:', values);\n        let username = values.name\n        setNewuser(username)\n        let password = values.password\n        let email  = values.email\n        let customer = values.customer\n        let access_level = values.access_level\n        Auth.signUp({\n            username,\n            password,\n            attributes: {\n                'email': email,          // optional\n                'custom:customer': customer,\n                 'custom:access_level': access_level  // optional - E.164 number convention\n                // other custom attributes \n            },\n            validationData: []  //optional\n            })\n            .then(data => {\n              console.log(data)\n              confirmNotification(values.email)\n            })\n            .catch(err => console.log(err));\n\n      }\n\n\n    const verifyUser = (values) => {\n        console.log(values)\n        let code = values.code\n        let username = newuser\n        Auth.confirmSignUp(username, code, {\n            // Optional. Force user confirmation irrespective of existing alias. By default set to True.\n            forceAliasCreation: true    \n          }).then(data => console.log(data))\n          .catch(err => console.log(err));\n        \n\n    }\n    return <>\n     \n     <Drawer\n        title=\"Create a new account\"\n        width={360}\n         visible={drawervisibility}\n         onClose={closeDrawer}\n         bodyStyle={{ paddingBottom: 80, border: \"1px solid rgb(230,230,230)\" }}\n         footer={\n           <div\n             style={{\n               textAlign: 'right',\n             }}\n           >\n           </div>\n         }\n        >\n\n        <Form \n            layout=\"vertical\"\n            form = {form} \n            onFinish={submitCredentials}\n            hideRequiredMark>\n                <Form.Item\n                  name=\"name\"\n                  label=\"Name\"\n                  rules={[{ required: true, message: 'Please enter user name' }]}\n                >\n                  <Input placeholder=\"Please enter user name\" />\n                </Form.Item>\n                <Form.Item\n                  name=\"email\"\n                  label=\"Email\"\n                  rules={[{ required: true, message: 'Please enter your email' }]}\n                >\n                  <Input placeholder=\"Please enter email address\" />\n                </Form.Item>\n                \n                <Form.Item\n                  name=\"password\"\n                  label=\"Temporary password\"\n                  rules={[{ required: true, message: 'Please select a temporary password' }]}\n                >\n             <Input.Password placeholder=\"Please select temporary password\" />\n                </Form.Item>     \n                <Form.Item\n                  name=\"access_level\"\n                  label=\"Access level\"\n                  rules={[{ required: true, message: 'Please indicate access rights' }]}\n                >\n                  <Select placeholder=\"Indicate access rights\">\n                    <Option value=\"admin\">Administrator access</Option>\n                    <Option value=\"full\">Full access</Option>\n                    <Option value=\"third-party\">Customized access</Option>\n                  </Select>\n                </Form.Item>     \n\n                <Form.Item\n                  name=\"customer\"\n                  label=\"Customer\"\n                  rules={[{ required: true, message: 'Please the name of your organization' }]}\n                >\n                  <Input placeholder=\"Please the name of your organization\" />\n                </Form.Item>\n           \n              <Button type=\"primary\" htmlType=\"submit\">\n                Add user\n              </Button>\n          </Form>\n\n       \n\n       \n              \n          \n          \n          \n   \n        </Drawer>\n    </>\n}\n\nexport default DrawerComponent"]},"metadata":{},"sourceType":"module"}