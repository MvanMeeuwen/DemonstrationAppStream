{"ast":null,"code":"var _jsxFileName = \"/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/Admin/DrawerComponent.js\";\nimport React, { useState } from 'react';\nimport { Auth } from 'aws-amplify';\nimport { Button, Descriptions, Divider, List, Drawer, Form, Input, Select, Typography, notification } from 'antd';\nconst {\n  Option\n} = Select;\n\nconst DrawerComponent = (drawervisibility, setDrawervisibility) => {\n  const [form] = Form.useForm();\n  const [verificationform] = Form.useForm();\n  const [confirmcodeVisibility, setConfirmcodeVisibility] = useState(false);\n  const [newuser, setNewuser] = useState('user');\n\n  const closeDrawer = () => {\n    setDrawervisibility(false);\n  };\n\n  const confirmNotification = email => {\n    notification.open({\n      message: 'Sent confirmation',\n      description: 'An invitation as well as a verification code has been sent to' + email\n    });\n  };\n\n  const submitCredentials = values => {\n    setConfirmcodeVisibility(true);\n    console.log('values:', values);\n    let username = values.name;\n    setNewuser(username);\n    let password = values.password;\n    let email = values.email;\n    let customer = values.customer;\n    Auth.signUp({\n      username,\n      password,\n      attributes: {\n        'email': email,\n        // optional\n        'custom:customer': customer // optional - E.164 number convention\n        // other custom attributes \n\n      },\n      validationData: [] //optional\n\n    }).then(data => {\n      console.log(data);\n      confirmNotification(values.email);\n    }).catch(err => console.log(err));\n  };\n\n  const verifyUser = values => {\n    console.log(values);\n    let code = values.code;\n    let username = newuser;\n    Auth.confirmSignUp(username, code, {\n      // Optional. Force user confirmation irrespective of existing alias. By default set to True.\n      forceAliasCreation: true\n    }).then(data => console.log(data)).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Drawer, {\n    title: \"Create a new account\",\n    width: 360,\n    visible: drawervisibility,\n    onClose: closeDrawer,\n    bodyStyle: {\n      paddingBottom: 80,\n      border: \"1px solid rgb(230,230,230)\"\n    },\n    footer: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 12\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    layout: \"vertical\",\n    form: form,\n    onFinish: submitCredentials,\n    hideRequiredMark: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"name\",\n    label: \"Name\",\n    rules: [{\n      required: true,\n      message: 'Please enter user name'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Please enter user name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"email\",\n    label: \"Email\",\n    rules: [{\n      required: true,\n      message: 'Please enter your email'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Please enter email address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"password\",\n    label: \"Temporary password\",\n    rules: [{\n      required: true,\n      message: 'Please select a temporary password'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    placeholder: \"Please select temporary password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 14\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"accessrights\",\n    label: \"Access rights\",\n    rules: [{\n      required: true,\n      message: 'Please indicate access rights'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Indicate access rights\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, \"Full access\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"read-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, \"Read-only access\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"third-pary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, \"Third-party service provider\"))), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"customer\",\n    label: \"Customer\",\n    rules: [{\n      required: true,\n      message: 'Please the name of your organization'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Please the name of your organization\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, \"Add user\"))));\n};\n\nexport default DrawerComponent;","map":{"version":3,"sources":["/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/Admin/DrawerComponent.js"],"names":["React","useState","Auth","Button","Descriptions","Divider","List","Drawer","Form","Input","Select","Typography","notification","Option","DrawerComponent","drawervisibility","setDrawervisibility","form","useForm","verificationform","confirmcodeVisibility","setConfirmcodeVisibility","newuser","setNewuser","closeDrawer","confirmNotification","email","open","message","description","submitCredentials","values","console","log","username","name","password","customer","signUp","attributes","validationData","then","data","catch","err","verifyUser","code","confirmSignUp","forceAliasCreation","paddingBottom","border","textAlign","required"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport {Auth} from 'aws-amplify';\n\n\nimport { Button, Descriptions, Divider, List, Drawer, Form, Input, Select , Typography, notification} from 'antd';\n\nconst { Option } = Select;\nconst DrawerComponent = (drawervisibility, setDrawervisibility) => {\n    const [form] = Form.useForm();\n    const [verificationform] = Form.useForm();\n\n    const [confirmcodeVisibility, setConfirmcodeVisibility] = useState(false)\n    const [newuser, setNewuser] = useState('user')\n    \n    const closeDrawer = () => {\n        setDrawervisibility(false)\n    };\n\n    const confirmNotification = (email) => {\n\n      notification.open({\n        message: 'Sent confirmation',\n        description:\n          'An invitation as well as a verification code has been sent to' + email \n      });\n\n\n\n    }\n\n    const submitCredentials = (values) => {\n        setConfirmcodeVisibility(true)\n        console.log('values:', values);\n        let username = values.name\n        setNewuser(username)\n        let password = values.password\n        let email  = values.email\n        let customer = values.customer\n        Auth.signUp({\n            username,\n            password,\n            attributes: {\n                'email': email,          // optional\n                'custom:customer': customer   // optional - E.164 number convention\n                // other custom attributes \n            },\n            validationData: []  //optional\n            })\n            .then(data => {\n              console.log(data)\n              confirmNotification(values.email)\n            })\n            .catch(err => console.log(err));\n\n      }\n\n\n    const verifyUser = (values) => {\n        console.log(values)\n        let code = values.code\n        let username = newuser\n        Auth.confirmSignUp(username, code, {\n            // Optional. Force user confirmation irrespective of existing alias. By default set to True.\n            forceAliasCreation: true    \n          }).then(data => console.log(data))\n          .catch(err => console.log(err));\n        \n\n    }\n    return <>\n     \n     <Drawer\n        title=\"Create a new account\"\n        width={360}\n         visible={drawervisibility}\n         onClose={closeDrawer}\n         bodyStyle={{ paddingBottom: 80, border: \"1px solid rgb(230,230,230)\" }}\n         footer={\n           <div\n             style={{\n               textAlign: 'right',\n             }}\n           >\n           </div>\n         }\n        >\n\n        <Form \n            layout=\"vertical\"\n            form = {form} \n            onFinish={submitCredentials}\n            hideRequiredMark>\n                <Form.Item\n                  name=\"name\"\n                  label=\"Name\"\n                  rules={[{ required: true, message: 'Please enter user name' }]}\n                >\n                  <Input placeholder=\"Please enter user name\" />\n                </Form.Item>\n                <Form.Item\n                  name=\"email\"\n                  label=\"Email\"\n                  rules={[{ required: true, message: 'Please enter your email' }]}\n                >\n                  <Input placeholder=\"Please enter email address\" />\n                </Form.Item>\n                \n                <Form.Item\n                  name=\"password\"\n                  label=\"Temporary password\"\n                  rules={[{ required: true, message: 'Please select a temporary password' }]}\n                >\n             <Input.Password placeholder=\"Please select temporary password\" />\n                </Form.Item>     \n                <Form.Item\n                  name=\"accessrights\"\n                  label=\"Access rights\"\n                  rules={[{ required: true, message: 'Please indicate access rights' }]}\n                >\n                  <Select placeholder=\"Indicate access rights\">\n                    <Option value=\"full\">Full access</Option>\n                    <Option value=\"read-only\">Read-only access</Option>\n                    <Option value=\"third-pary\">Third-party service provider</Option>\n                  </Select>\n                </Form.Item>     \n\n                <Form.Item\n                  name=\"customer\"\n                  label=\"Customer\"\n                  rules={[{ required: true, message: 'Please the name of your organization' }]}\n                >\n                  <Input placeholder=\"Please the name of your organization\" />\n                </Form.Item>\n           \n              <Button type=\"primary\" htmlType=\"submit\">\n                Add user\n              </Button>\n          </Form>\n\n       \n\n       \n              \n          \n          \n          \n   \n        </Drawer>\n    </>\n}\n\nexport default DrawerComponent"]},"metadata":{},"sourceType":"module"}