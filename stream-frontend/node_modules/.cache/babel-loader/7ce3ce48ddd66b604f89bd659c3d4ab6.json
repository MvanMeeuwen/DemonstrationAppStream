{"ast":null,"code":"import _slicedToArray from\"/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  display: grid;\\n  padding: 1em;\\n  grid-template-columns: 1fr 3fr;\\n  grid-template-rows: 1000px;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useContext,useState}from'react';import{AppContext}from'../Context';import styled from'styled-components';import moment from'moment';import{Select,Typography,Spin,DatePicker,Row,Col}from'antd';import LineChart from'./LineChart';import group_month from'./utils';var Option=Select.Option;var MonthPicker=DatePicker.MonthPicker;var Title=Typography.Title;var AppLayout=styled.div(_templateObject());var Dashboard=function Dashboard(){var contextData=useContext(AppContext);var documents=contextData['ledger'];var entities=contextData['entities_list'];var _useState=useState(entities),_useState2=_slicedToArray(_useState,2),selectedEntities=_useState2[0],setSelectedEntities=_useState2[1];var _useState3=useState(\"notices\"),_useState4=_slicedToArray(_useState3,2),variable=_useState4[0],setVariable=_useState4[1];var dateFormat='YYYY-MM-DD';var startStr=moment('2019-01-01',dateFormat);var _useState5=useState(startStr),_useState6=_slicedToArray(_useState5,2),startDate=_useState6[0],setstartDate=_useState6[1];var now=moment().toDate();var endStr=moment(now,dateFormat);var _useState7=useState(endStr),_useState8=_slicedToArray(_useState7,2),endDate=_useState8[0],setendDate=_useState8[1];var handleentityChange=function handleentityChange(event){if(event.length==0){setSelectedEntities(entities);}else{setSelectedEntities(event);}};function handlestartChange(date,dateString){setstartDate(date);}function handleendChange(date,dateString){setendDate(date);}var dateFormatown=\"MM/DD/YYYY\";var documents_filtered=[];documents.map(function(item){var date_check=moment(item.notice_date,dateFormatown);item.month=moment(item.notice_date).format('YYYY/MM');if(selectedEntities.includes(item.entity_name)&&date_check.isAfter(startDate)&&date_check.isBefore(endDate)){documents_filtered.push(item);}});var filtered_data=group_month(documents_filtered);var entitieschildren=[];entities.map(function(entity){entitieschildren.push(/*#__PURE__*/React.createElement(Option,{key:entity},entity));});return/*#__PURE__*/React.createElement(AppLayout,null,/*#__PURE__*/React.createElement(\"div\",{style:{padding:'20px'}},/*#__PURE__*/React.createElement(Title,{level:4},\"Selection criteria\"),/*#__PURE__*/React.createElement(\"p\",null,\"Variable:\"),/*#__PURE__*/React.createElement(Select,{style:{width:300},defaultValue:variable,onChange:function onChange(event){return setVariable(event);}},/*#__PURE__*/React.createElement(Option,{value:\"dollar\"},\"Dollar value \"),/*#__PURE__*/React.createElement(Option,{value:\"notices\"},\"Number of notices\")),/*#__PURE__*/React.createElement(\"div\",{style:{paddingTop:'1em'}},/*#__PURE__*/React.createElement(Row,{gutter:10},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"p\",null,\"Starting date\"),/*#__PURE__*/React.createElement(MonthPicker,{defaultValue:startStr,onChange:handlestartChange})),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"p\",null,\"Ending date:\"),/*#__PURE__*/React.createElement(MonthPicker,{style:{float:'right'},defaultValue:endDate,onChange:handleendChange}))))),/*#__PURE__*/React.createElement(\"div\",{style:{padding:'20px',marginLeft:'20px'}},/*#__PURE__*/React.createElement(LineChart,{data:filtered_data,variable:variable})));};export default Dashboard;","map":{"version":3,"sources":["/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/Dashboard/Dashboard.js"],"names":["React","useContext","useState","AppContext","styled","moment","Select","Typography","Spin","DatePicker","Row","Col","LineChart","group_month","Option","MonthPicker","Title","AppLayout","div","Dashboard","contextData","documents","entities","selectedEntities","setSelectedEntities","variable","setVariable","dateFormat","startStr","startDate","setstartDate","now","toDate","endStr","endDate","setendDate","handleentityChange","event","length","handlestartChange","date","dateString","handleendChange","dateFormatown","documents_filtered","map","item","date_check","notice_date","month","format","includes","entity_name","isAfter","isBefore","push","filtered_data","entitieschildren","entity","padding","width","paddingTop","float","marginLeft"],"mappings":"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","sourcesContent":["import React, {useContext, useState} from 'react';\nimport { AppContext } from '../Context';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\n\nimport {Select, Typography, Spin, DatePicker, Row, Col} from 'antd';\n\n\nimport LineChart  from './LineChart'\n\nimport group_month from './utils'\n\nconst {Option} = Select;\nconst { MonthPicker } = DatePicker;\nconst {Title} = Typography;\n\nconst AppLayout = styled.div`\n  display: grid;\n  padding: 1em;\n  grid-template-columns: 1fr 3fr;\n  grid-template-rows: 1000px;\n`\n\nconst Dashboard = () => {\n    const contextData = useContext(AppContext)\n    const documents = contextData['ledger'];\n    const entities = contextData['entities_list']\n    \n    const [selectedEntities, setSelectedEntities] = useState(entities)\n\n    const [variable, setVariable] = useState(\"notices\")\n    const dateFormat = 'YYYY-MM-DD';\n    const startStr = moment('2019-01-01', dateFormat) \n    const [startDate, setstartDate] = useState(startStr)\n    \n    const now = moment().toDate()\n    const endStr = moment(now, dateFormat) \n    const [endDate, setendDate] = useState(endStr)\n\n      \n\n    const handleentityChange = (event) => {\n      if (event.length == 0) {\n          setSelectedEntities(entities)\n      } else {\n          setSelectedEntities(event)\n      }\n  }\n\n  function handlestartChange(date, dateString) {\n    setstartDate(date)\n  }\n\n  function handleendChange(date, dateString) {\n    setendDate(date)\n}\n\n    let dateFormatown = \"MM/DD/YYYY\"\n    \n\n    const documents_filtered = []\n    documents.map(item => {\n          let date_check = moment(item.notice_date, dateFormatown)          \n          item.month = moment(item.notice_date).format('YYYY/MM')\n          if (selectedEntities.includes(item.entity_name) && \n             date_check.isAfter(startDate) &&\n             date_check.isBefore(endDate)\n          ) {\n            documents_filtered.push(item)\n          }\n    })\n    \n    const filtered_data = group_month(documents_filtered)\n\n   \n\n\n    const entitieschildren = []\n    entities.map(entity =>{\n        entitieschildren.push(<Option key={entity}>{entity}</Option>)\n    })\n\n    \n    return (\n        <AppLayout>\n            <div style ={{padding: '20px'}}>\n            <Title level={4}>\n                Selection criteria\n            </Title>\n            <p>\n            Variable:\n            </p>\n            <Select\n             style={{ width: 300 }}\n             defaultValue={variable}\n             onChange ={event => setVariable(event)}\n             >\n                <Option value=\"dollar\">Dollar value </Option>\n                <Option value=\"notices\">Number of notices</Option>\n            </Select>\n            \n        \n            <div style = {{paddingTop: '1em'}}>\n            <Row gutter = {10}>\n                <Col>\n                <p>\n                Starting date\n                </p>\n                <MonthPicker \n            defaultValue={startStr}\n            onChange={handlestartChange}\n            />\n                </Col>\n            <Col>\n            <p>\n                Ending date:\n                </p>\n            <MonthPicker \n            style = {{float:'right'}}\n            defaultValue={endDate}\n            onChange={handleendChange}\n            />\n            </Col>\n            \n            \n            </Row>\n            </div>\n    \n        </div>\n\n\n        <div style ={{padding: '20px', \n                  marginLeft: '20px'}}>\n            <LineChart data = {filtered_data} variable = {variable}/>\n        </div>        \n\n\n        \n        </AppLayout>\n\n\n        )\n    \n}\n\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}