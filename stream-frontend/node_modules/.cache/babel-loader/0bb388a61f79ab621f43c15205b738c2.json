{"ast":null,"code":"var _jsxFileName = \"/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/Admin/DataElementsManagement.js\";\nimport React from 'react';\nimport { Button, Descriptions, Divider, List, Drawer, Form, Input, Select, Typography, Checkbox, notification } from 'antd';\nimport { SyncOutlined } from '@ant-design/icons';\nconst {\n  Title\n} = Typography;\nconst allDataElements = [\"State\", \"Entity name\", \"FEIN\", \"Notice category\", \"Notice Type\", \"Amount USD\", \"Notice Date\"];\nconst selectedDataElements = [\"State\", \"Entity name\", \"Notice category\", \"Amount USD\", \"Notice Date\"];\n\nconst DataElementsManagement = () => {\n  const [elementsForm] = Form.useForm();\n  const dataelements_fieldlist = [];\n  allDataElements.map(item => {\n    if (selectedDataElements.includes(item)) {\n      const formitem = /*#__PURE__*/React.createElement(Form.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 26\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        defaultChecked: \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }\n      }, item));\n      dataelements_fieldlist.push(formitem);\n    } else {\n      let formitem = /*#__PURE__*/React.createElement(Form.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 26\n        }\n      }, item));\n      dataelements_fieldlist.push(formitem);\n    }\n  });\n\n  const openNotification = () => {\n    notification.open({\n      message: 'Data elements have been updated',\n      description: 'Please refresh your browser for the results to be propagated.',\n      onClick: () => {\n        console.log('Notification Clicked!');\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"dataelementslist\",\n    style: {\n      padding: '20px',\n      backgroundColor: 'white',\n      border: \"1px solid rgb(230,230,230)\",\n      marginTop: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"  Selected data elements \"), /*#__PURE__*/React.createElement(Form, {\n    layout: \"vertical\",\n    form: elementsForm,\n    onFinish: openNotification,\n    hideRequiredMark: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, dataelements_fieldlist.map(field => {\n    return field;\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SyncOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }), \" Update\")));\n};\n\nexport default DataElementsManagement;","map":{"version":3,"sources":["/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/Admin/DataElementsManagement.js"],"names":["React","Button","Descriptions","Divider","List","Drawer","Form","Input","Select","Typography","Checkbox","notification","SyncOutlined","Title","allDataElements","selectedDataElements","DataElementsManagement","elementsForm","useForm","dataelements_fieldlist","map","item","includes","formitem","push","openNotification","open","message","description","onClick","console","log","padding","backgroundColor","border","marginTop","field"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { Button, Descriptions, Divider, \n    List, Drawer, Form, Input, Select, Typography,\n    Checkbox, notification\n} from 'antd';\n\nimport { SyncOutlined } from '@ant-design/icons';\n\nconst { Title } = Typography;\n\nconst allDataElements = [\"State\", \"Entity name\", \"FEIN\", \"Notice category\", \"Notice Type\",  \"Amount USD\", \"Notice Date\"]\nconst selectedDataElements = [\"State\", \"Entity name\", \"Notice category\", \"Amount USD\", \"Notice Date\"]\n\n\nconst DataElementsManagement = () => {\n    const [elementsForm] = Form.useForm();\n    const dataelements_fieldlist = [];\n    allDataElements.map(item => {\n        if (selectedDataElements.includes(item)) {\n        const formitem = <Form.Item>\n                        <Checkbox defaultChecked = \"true\">\n                            {item}</Checkbox>\n                    </Form.Item>\n        dataelements_fieldlist.push(formitem)\n\n        } else {\n        let formitem = <Form.Item >\n                         <Checkbox>{item}</Checkbox>\n                   </Form.Item>\n        dataelements_fieldlist.push(formitem)\n            \n        }\n    })\n\n    const openNotification = () => {\n        notification.open({\n          message: 'Data elements have been updated',\n          description:\n            'Please refresh your browser for the results to be propagated.',\n          onClick: () => {\n            console.log('Notification Clicked!');\n          },\n        });\n      };\n\n\n\n    return (\n        <div id = \"dataelementslist\"\n            style ={{padding: '20px', \n                  backgroundColor: 'white', \n                  border: \"1px solid rgb(230,230,230)\", \n                  marginTop: '20px'}}\n                  >\n\n        <Title level = {4}>  Selected data elements </Title>\n\n\n        <Form\n            layout=\"vertical\"\n            form = {elementsForm} \n            onFinish={openNotification}\n            hideRequiredMark>\n                {\n                    dataelements_fieldlist.map(field => {\n                        return (\n\n                            field\n                             \n                        )\n                    })\n                }\n            <Button type = \"primary\" htmlType=\"submit\">\n            <SyncOutlined /> Update\n              </Button>\n\n        </Form>\n    \n        </div>\n    )\n    \n}\n\nexport default DataElementsManagement;"]},"metadata":{},"sourceType":"module"}