{"ast":null,"code":"var _jsxFileName = \"/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/Confirmation/Confirmation.js\";\nimport React, { useState, useContext } from 'react';\nimport { AppContext } from '../Context';\nimport { map, without, filter } from 'lodash';\nimport { Form, Input, Button, Select, message, Typography, AutoComplete, Row, Col, Checkbox, Progress } from 'antd';\nimport styled from 'styled-components';\nimport { CheckOutlined, RollbackOutlined } from '@ant-design/icons';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nconst formItemLayout = {\n  labelCol: {\n    sm: {\n      span: 8\n    }\n  }\n};\nconst {\n  TextArea\n} = Input;\nconst {\n  Title\n} = Typography;\nconst {\n  Option\n} = Select;\nconst AppLayout = styled.div`\n  display: grid;\n  padding: 2em;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1000px;\n`;\n\nconst Confirmation = () => {\n  console.log(unique_id);\n  const data = useContext(AppContext);\n  const docData = data['demo'];\n  const entities_list = data['entities_list'];\n  const [count, setCount] = useState(0);\n  const doc_unique_ids = [];\n  docData.map(notice => {\n    console.log(notice);\n  });\n  const initialValues = docData[count];\n  let keys = Object.keys(docData[count]);\n  let values = Object.values(docData[count]);\n  const [form] = Form.useForm();\n  const document_types = [\"Announcement\", \"Refund\", \"Payment\"];\n  const document_type_json = [];\n  document_types.map(type => {\n    document_type_json.push({\n      'value': type\n    });\n  });\n  const entities_list_json = [];\n  entities_list.map(entity => {\n    entities_list_json.push({\n      'value': entity\n    });\n  });\n  const states = [\"Alabama\", \"Alaska\", \"Arkansas\", \"Arizona\", \"California\", \"Colorado\", \"Connecticut\", \"Delaware\", \"Florida\", \"Georgia\", \"Hawaii\", \"Iowa\", \"Idaho\", \"Illinois\", \"Indiana\", \"Kansas\", \"Kentucky\", \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Missouri\", \"Mississippi\", \"Montana\", \"North Carolina\", \"North Dakota\", \"Nebraska\", \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"Nevada\", \"New York\", \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Rhode Island\", \"South Carolina\", \"South Dakota\", \"Tennessee\", \"Texas\", \"Utah\", \"Virginia\", \"Vermont\", \"Washington\", \"Wisconsin\", \"West Virginia\", \"Wyoming\"];\n  let statesjson = [];\n  states.map(state => {\n    statesjson.push({\n      'value': state\n    });\n  });\n  let form_list = [/*#__PURE__*/React.createElement(Form.Item, {\n    name: \"state\",\n    label: \"State\",\n    key: \"state\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AutoComplete, {\n    options: statesjson,\n    filterOption: (inputValue, option) => option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"entity_name\",\n    label: \"Entity\",\n    key: \"entity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AutoComplete, {\n    options: entities_list_json,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"document_type\",\n    label: \"Notice type\",\n    key: \"document_type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AutoComplete, {\n    options: document_type_json,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"amount\",\n    label: \"Amount due, $\",\n    key: \"amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"notice_date\",\n    label: \"Notice date\",\n    key: \"notice_date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"status\",\n    label: \"Status\",\n    key: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    defaultValue: initialValues.status,\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"in_progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, \"In Progress\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"filed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, \"Filed\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"complete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, \"Complete\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"extension\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, \"Extension\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"rxed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, \"Notice Rx'd\"))), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"remarks\",\n    label: \"Remarks\",\n    key: \"remarks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    placeholder: \"Additional remarks\",\n    autoSize: {\n      minRows: 2,\n      maxRows: 6\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"third_party\",\n    label: \"Third party access\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    defaultChecked: initialValues.third_party,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }))];\n\n  const showFeedback = () => {\n    message.info('Notice has been updated');\n  };\n\n  const progress_percentage = 50;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: encodeURI(\"https://jpeg-bucket-stream.s3-eu-west-1.amazonaws.com/Maarten_QA_16f5b202-c619-462d-9d73-90543a307920.jpeg\"),\n    alt: \"new\",\n    width: 595,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rightHandside\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '1em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"actualTitle\",\n    style: {\n      marginBottom: '1em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 37\n    }\n  }, \"Classification\"))), /*#__PURE__*/React.createElement(Progress, {\n    percent: Math.round(progress_percentage),\n    status: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Form, Object.assign({}, formItemLayout, {\n    layout: \"horizontal\",\n    initialValues: initialValues,\n    onFinish: showFeedback,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }\n  }), form_list.map(field => {\n    return field;\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    style: {\n      float: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 42\n    }\n  }, /*#__PURE__*/React.createElement(CheckOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 49\n    }\n  }), \"Confirm classification\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingLeft: '50px',\n      marginTop: '1em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }\n  }))));\n};\n\nexport default Confirmation;","map":{"version":3,"sources":["/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/Confirmation/Confirmation.js"],"names":["React","useState","useContext","AppContext","map","without","filter","Form","Input","Button","Select","message","Typography","AutoComplete","Row","Col","Checkbox","Progress","styled","CheckOutlined","RollbackOutlined","BrowserRouter","Router","Route","Link","formItemLayout","labelCol","sm","span","TextArea","Title","Option","AppLayout","div","Confirmation","console","log","unique_id","data","docData","entities_list","count","setCount","doc_unique_ids","notice","initialValues","keys","Object","values","form","useForm","document_types","document_type_json","type","push","entities_list_json","entity","states","statesjson","state","form_list","inputValue","option","value","toUpperCase","indexOf","status","minRows","maxRows","third_party","showFeedback","info","progress_percentage","encodeURI","padding","marginBottom","Math","round","field","float","paddingLeft","marginTop"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from 'react';\nimport { AppContext } from '../Context';\nimport { map, without, filter} from 'lodash';\nimport { Form, Input, Button, Select, message, Typography, AutoComplete, Row, Col, Checkbox, Progress} from 'antd';\nimport styled from 'styled-components';\nimport { CheckOutlined, RollbackOutlined} from '@ant-design/icons';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n\n\nconst formItemLayout = {\n    labelCol: {\n        sm: { span: 8 },\n    }, \n  \n};\n\n\n\n\nconst { TextArea } = Input;\nconst { Title } = Typography; \nconst { Option } = Select;\nconst AppLayout = styled.div`\n  display: grid;\n  padding: 2em;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1000px;\n` \n\n\n\nconst Confirmation = () => {\n    \n\n    console.log(unique_id)\n    const data = useContext(AppContext)\n    const docData = data['demo']\n    const entities_list = data['entities_list']\n    const [count, setCount] = useState(0)\n\n\n    const doc_unique_ids = []\n    docData.map(notice => {\n        console.log(notice)\n    })\n\n    \n\n\n    const initialValues = docData[count]\n    let keys = Object.keys(docData[count])\n    let values = Object.values(docData[count])\n\n\n    const [form] = Form.useForm();\n    \n\n    \n        \n    const document_types = [\"Announcement\", \"Refund\", \"Payment\"]\n    const document_type_json = []\n    document_types.map(type => {\n        document_type_json.push({'value' : type})\n    })\n\n    const entities_list_json = []\n    entities_list.map(entity => {\n        entities_list_json.push({'value': entity})\n    })\n\n\n    const states = [\"Alabama\",\"Alaska\",\"Arkansas\",\"Arizona\",\"California\",\"Colorado\",\"Connecticut\",\"Delaware\",\"Florida\",\"Georgia\",\"Hawaii\",\"Iowa\",\"Idaho\",\"Illinois\",\"Indiana\",\"Kansas\",\"Kentucky\",\"Louisiana\",\"Maine\",\"Maryland\",\"Massachusetts\",\"Michigan\",\"Minnesota\",\"Missouri\",\"Mississippi\",\"Montana\",\"North Carolina\",\"North Dakota\",\"Nebraska\",\"New Hampshire\",\"New Jersey\",\"New Mexico\",\"Nevada\",\"New York\",\"Ohio\",\"Oklahoma\",\"Oregon\",\"Pennsylvania\",\"Rhode Island\",\"South Carolina\",\"South Dakota\",\"Tennessee\",\"Texas\",\"Utah\",\"Virginia\",\"Vermont\",\"Washington\",\"Wisconsin\",\"West Virginia\",\"Wyoming\"]\n    let statesjson = []\n    states.map(state => {\n        statesjson.push({'value' : state})\n\n    })\n\n\n    let form_list = [\n        <Form.Item\n        name = \"state\"\n        label = \"State\"\n        key =\"state\"\n\n        >\n                    <AutoComplete\n                            options = {statesjson}\n                            filterOption={(inputValue, option) =>\n                                option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n                              }>\n        <Input size = \"large\"/>\n        </AutoComplete>\n        </Form.Item>,\n            <Form.Item\n            name = \"entity_name\"\n            label = \"Entity\"\n            key = \"entity\"\n            \n            >   \n                <AutoComplete\n                    options = {entities_list_json}\n                    >         \n                    <Input size = \"large\"/>\n                    </AutoComplete>\n        </Form.Item>,\n\n        <Form.Item\n            name = \"document_type\"\n            label = \"Notice type\"\n            key = \"document_type\"\n                            \n            >\n                <AutoComplete\n                options = {document_type_json}\n                >\n                    <Input size = \"large\"/>\n                </AutoComplete>\n                \n        </Form.Item>,\n        <Form.Item\n            name = \"amount\"\n            \n            label = \"Amount due, $\"\n            key = \"amount\">\n                \n            <Input size = \"large\"/>\n        </Form.Item>,\n        <Form.Item\n            name = \"notice_date\"\n            label =\"Notice date\"\n            \n            key = \"notice_date\">\n                <Input size = 'large'/>\n        </Form.Item>,\n\n        <Form.Item\n            name = \"status\"\n            label =\"Status\"\n            key = \"\">\n                <Select defaultValue = {initialValues.status} size = \"large\">\n                    <Option value=\"in_progress\">In Progress</Option>\n                    <Option value=\"filed\">Filed</Option>\n                    <Option value=\"complete\">Complete</Option>\n                    <Option value=\"extension\">Extension</Option>\n                    <Option value=\"rxed\">Notice Rx'd</Option>\n                </Select>\n\n            \n        </Form.Item>,\n\n        <Form.Item\n            name=\"remarks\"\n            label=\"Remarks\"\n            key=\"remarks\">\n\n                    <TextArea\n                        placeholder=\"Additional remarks\"\n                        autoSize={{ minRows: 2, maxRows: 6 }}\n                    />\n            \n        </Form.Item>,\n\n        <Form.Item\n            name = \"third_party\"\n            label = \"Third party access\"\n    \n        >\n            <Checkbox defaultChecked = {initialValues.third_party} />\n                              \n\n        </Form.Item>\n    ]\n\n    const showFeedback = () => {\n        message.info('Notice has been updated');\n    }\n\n    const progress_percentage = 50;\n    return <>\n    <AppLayout>\n    <div>\n    <img \n      src={encodeURI(\"https://jpeg-bucket-stream.s3-eu-west-1.amazonaws.com/Maarten_QA_16f5b202-c619-462d-9d73-90543a307920.jpeg\")}\n      alt=\"new\"\n      width={595}\n    />\n            </div>\n\n            <div className = \"rightHandside\">\n                <div style = {{padding: '1em'}}>\n            \n                        <div className =\"actualTitle\" style ={{marginBottom: '1em'}}>     \n                        <Row>\n                                    <Col sm={8}>\n                                    </Col>\n                                    <Col>\n                                    <Title level = {4}> \n                                        Classification\n                                    </Title>\n                                    \n                               \n\n                                </Col>\n                        </Row>    \n                      \n                                    <Progress percent={Math.round(progress_percentage)} status=\"active\" />\n                                    \n                                    \n                                    \n\n                            \n                            \n                          \n                    </div>\n                <Form\n                {...formItemLayout}\n                layout = \"horizontal\"\n                initialValues={initialValues}\n                onFinish = {showFeedback}\n                >\n                {form_list.map(field => {\n                    return (\n                        field\n                    )\n                })\n                }\n                <Row>\n                                    <Col sm={8}>\n                                    </Col>\n                                    <Col>\n                                         <Button type = \"primary\" \n                                                    htmlType = \"submit\"\n                                                    style = {{float:'center'}}\n                                                    >\n                                                <CheckOutlined />\n                                                Confirm classification\n                                            </Button>\n                                         \n\n\n                                    </Col>\n                </Row> \n\n\n                \n\n           \n          \n                </Form>\n                </div>\n\n\n                <div style = {{paddingLeft: '50px', marginTop:'1em'}}>\n         \n\n            \n               </div>\n\n            </div>\n\n\n    </AppLayout>\n        \n\n    </>\n}\n\nexport default Confirmation;"]},"metadata":{},"sourceType":"module"}