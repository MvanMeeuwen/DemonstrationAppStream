{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport Notification from 'rc-notification';\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined';\nimport ExclamationCircleFilled from '@ant-design/icons/ExclamationCircleFilled';\nimport CloseCircleFilled from '@ant-design/icons/CloseCircleFilled';\nimport CheckCircleFilled from '@ant-design/icons/CheckCircleFilled';\nimport InfoCircleFilled from '@ant-design/icons/InfoCircleFilled';\nvar defaultDuration = 3;\nvar defaultTop;\nvar messageInstance;\nvar key = 1;\nvar prefixCls = 'ant-message';\nvar transitionName = 'move-up';\nvar getContainer;\nvar maxCount;\n\nfunction getMessageInstance(callback) {\n  if (messageInstance) {\n    callback(messageInstance);\n    return;\n  }\n\n  Notification.newInstance({\n    prefixCls: prefixCls,\n    transitionName: transitionName,\n    style: {\n      top: defaultTop\n    },\n    getContainer: getContainer,\n    maxCount: maxCount\n  }, function (instance) {\n    if (messageInstance) {\n      callback(messageInstance);\n      return;\n    }\n\n    messageInstance = instance;\n    callback(instance);\n  });\n}\n\nvar iconMap = {\n  info: InfoCircleFilled,\n  success: CheckCircleFilled,\n  error: CloseCircleFilled,\n  warning: ExclamationCircleFilled,\n  loading: LoadingOutlined\n};\n\nfunction notice(args) {\n  var duration = args.duration !== undefined ? args.duration : defaultDuration;\n  var IconComponent = iconMap[args.type];\n  var target = args.key || key++;\n  var closePromise = new Promise(function (resolve) {\n    var callback = function callback() {\n      if (typeof args.onClose === 'function') {\n        args.onClose();\n      }\n\n      return resolve(true);\n    };\n\n    getMessageInstance(function (instance) {\n      instance.notice({\n        key: target,\n        duration: duration,\n        style: {},\n        content: /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-custom-content\").concat(args.type ? \" \".concat(prefixCls, \"-\").concat(args.type) : '')\n        }, args.icon || IconComponent && /*#__PURE__*/React.createElement(IconComponent, null), /*#__PURE__*/React.createElement(\"span\", null, args.content)),\n        onClose: callback\n      });\n    });\n  });\n\n  var result = function result() {\n    if (messageInstance) {\n      messageInstance.removeNotice(target);\n    }\n  };\n\n  result.then = function (filled, rejected) {\n    return closePromise.then(filled, rejected);\n  };\n\n  result.promise = closePromise;\n  return result;\n}\n\nfunction isArgsProps(content) {\n  return Object.prototype.toString.call(content) === '[object Object]' && !!content.content;\n}\n\nvar api = {\n  open: notice,\n  config: function config(options) {\n    if (options.top !== undefined) {\n      defaultTop = options.top;\n      messageInstance = null; // delete messageInstance for new defaultTop\n    }\n\n    if (options.duration !== undefined) {\n      defaultDuration = options.duration;\n    }\n\n    if (options.prefixCls !== undefined) {\n      prefixCls = options.prefixCls;\n    }\n\n    if (options.getContainer !== undefined) {\n      getContainer = options.getContainer;\n    }\n\n    if (options.transitionName !== undefined) {\n      transitionName = options.transitionName;\n      messageInstance = null; // delete messageInstance for new transitionName\n    }\n\n    if (options.maxCount !== undefined) {\n      maxCount = options.maxCount;\n      messageInstance = null;\n    }\n  },\n  destroy: function destroy() {\n    if (messageInstance) {\n      messageInstance.destroy();\n      messageInstance = null;\n    }\n  }\n};\n['success', 'info', 'warning', 'error', 'loading'].forEach(function (type) {\n  api[type] = function (content, duration, onClose) {\n    if (isArgsProps(content)) {\n      return api.open(_extends(_extends({}, content), {\n        type: type\n      }));\n    }\n\n    if (typeof duration === 'function') {\n      onClose = duration;\n      duration = undefined;\n    }\n\n    return api.open({\n      content: content,\n      duration: duration,\n      type: type,\n      onClose: onClose\n    });\n  };\n});\napi.warn = api.warning;\nexport default api;","map":{"version":3,"sources":["/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/node_modules/antd/es/message/index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","Notification","LoadingOutlined","ExclamationCircleFilled","CloseCircleFilled","CheckCircleFilled","InfoCircleFilled","defaultDuration","defaultTop","messageInstance","prefixCls","transitionName","getContainer","maxCount","getMessageInstance","callback","newInstance","style","top","instance","iconMap","info","success","error","warning","loading","notice","args","duration","undefined","IconComponent","type","closePromise","Promise","resolve","onClose","content","createElement","className","concat","icon","result","removeNotice","then","filled","rejected","promise","isArgsProps","toString","api","open","config","options","destroy","forEach","warn"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport Notification from 'rc-notification';\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined';\nimport ExclamationCircleFilled from '@ant-design/icons/ExclamationCircleFilled';\nimport CloseCircleFilled from '@ant-design/icons/CloseCircleFilled';\nimport CheckCircleFilled from '@ant-design/icons/CheckCircleFilled';\nimport InfoCircleFilled from '@ant-design/icons/InfoCircleFilled';\nvar defaultDuration = 3;\nvar defaultTop;\nvar messageInstance;\nvar key = 1;\nvar prefixCls = 'ant-message';\nvar transitionName = 'move-up';\nvar getContainer;\nvar maxCount;\n\nfunction getMessageInstance(callback) {\n  if (messageInstance) {\n    callback(messageInstance);\n    return;\n  }\n\n  Notification.newInstance({\n    prefixCls: prefixCls,\n    transitionName: transitionName,\n    style: {\n      top: defaultTop\n    },\n    getContainer: getContainer,\n    maxCount: maxCount\n  }, function (instance) {\n    if (messageInstance) {\n      callback(messageInstance);\n      return;\n    }\n\n    messageInstance = instance;\n    callback(instance);\n  });\n}\n\nvar iconMap = {\n  info: InfoCircleFilled,\n  success: CheckCircleFilled,\n  error: CloseCircleFilled,\n  warning: ExclamationCircleFilled,\n  loading: LoadingOutlined\n};\n\nfunction notice(args) {\n  var duration = args.duration !== undefined ? args.duration : defaultDuration;\n  var IconComponent = iconMap[args.type];\n  var target = args.key || key++;\n  var closePromise = new Promise(function (resolve) {\n    var callback = function callback() {\n      if (typeof args.onClose === 'function') {\n        args.onClose();\n      }\n\n      return resolve(true);\n    };\n\n    getMessageInstance(function (instance) {\n      instance.notice({\n        key: target,\n        duration: duration,\n        style: {},\n        content: /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-custom-content\").concat(args.type ? \" \".concat(prefixCls, \"-\").concat(args.type) : '')\n        }, args.icon || IconComponent && /*#__PURE__*/React.createElement(IconComponent, null), /*#__PURE__*/React.createElement(\"span\", null, args.content)),\n        onClose: callback\n      });\n    });\n  });\n\n  var result = function result() {\n    if (messageInstance) {\n      messageInstance.removeNotice(target);\n    }\n  };\n\n  result.then = function (filled, rejected) {\n    return closePromise.then(filled, rejected);\n  };\n\n  result.promise = closePromise;\n  return result;\n}\n\nfunction isArgsProps(content) {\n  return Object.prototype.toString.call(content) === '[object Object]' && !!content.content;\n}\n\nvar api = {\n  open: notice,\n  config: function config(options) {\n    if (options.top !== undefined) {\n      defaultTop = options.top;\n      messageInstance = null; // delete messageInstance for new defaultTop\n    }\n\n    if (options.duration !== undefined) {\n      defaultDuration = options.duration;\n    }\n\n    if (options.prefixCls !== undefined) {\n      prefixCls = options.prefixCls;\n    }\n\n    if (options.getContainer !== undefined) {\n      getContainer = options.getContainer;\n    }\n\n    if (options.transitionName !== undefined) {\n      transitionName = options.transitionName;\n      messageInstance = null; // delete messageInstance for new transitionName\n    }\n\n    if (options.maxCount !== undefined) {\n      maxCount = options.maxCount;\n      messageInstance = null;\n    }\n  },\n  destroy: function destroy() {\n    if (messageInstance) {\n      messageInstance.destroy();\n      messageInstance = null;\n    }\n  }\n};\n['success', 'info', 'warning', 'error', 'loading'].forEach(function (type) {\n  api[type] = function (content, duration, onClose) {\n    if (isArgsProps(content)) {\n      return api.open(_extends(_extends({}, content), {\n        type: type\n      }));\n    }\n\n    if (typeof duration === 'function') {\n      onClose = duration;\n      duration = undefined;\n    }\n\n    return api.open({\n      content: content,\n      duration: duration,\n      type: type,\n      onClose: onClose\n    });\n  };\n});\napi.warn = api.warning;\nexport default api;"]},"metadata":{},"sourceType":"module"}