{"ast":null,"code":"import React from'react';import ReactExport from\"react-data-export\";import{Button,Select,Divider,Typography,Table}from'antd';import{FileExcelOutlined}from'@ant-design/icons';var ExcelFile=ReactExport.ExcelFile;var ExcelSheet=ReactExport.ExcelFile.ExcelSheet;var ExcelColumn=ReactExport.ExcelFile.ExcelColumn;var Export=function Export(data){var columns_new=[{title:\"Tax Authority\",width:{wch:20}},{title:\"Tax Year\",width:{wch:10}},{title:\"Entity name\",width:{wch:50}},{title:\"Document type\",width:{wch:20}},{title:\"Announcement type\",width:{wch:20}},{title:\"Status\",width:{wch:20}},{title:\"Dollar value\",width:{wch:10}},{title:\"Notice date\",width:{wch:15}},{title:\"Payment due\",width:{wch:15}}];var ordered_documents=[];data.map(function(item){var ordered_item={'state':item.state,'tax_year':item.tax_year,'entity_name':item.entity_name,'document_type':item.document_type,'announcement_type':item.announcement_type,'status':item.status,'amount':item.amount,'notice_date':item.notice_date,'payment_due':item.payment_due};var row=[];var values=Object.values(ordered_item);for(var i=0;i<values.length;i++){var element={value:values[i]};row.push(element);}ordered_documents.push(row);});var documentsExport=[{columns:columns_new,data:ordered_documents}];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"block\",style:{display:'block',paddingBottom:\"20px\"}},\"Number of documents in selection: \",data.length),/*#__PURE__*/React.createElement(ExcelFile,{filename:\"StreamDownload\",element:/*#__PURE__*/React.createElement(Button,{type:\"primary\"},/*#__PURE__*/React.createElement(FileExcelOutlined,null),\" Export to Excel \")},/*#__PURE__*/React.createElement(ExcelSheet,{dataSet:documentsExport,name:\"Organization\"}))));};export default Export;","map":{"version":3,"sources":["/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/NoticeManagement/Export.js"],"names":["React","ReactExport","Button","Select","Divider","Typography","Table","FileExcelOutlined","ExcelFile","ExcelSheet","ExcelColumn","Export","data","columns_new","title","width","wch","ordered_documents","map","item","ordered_item","state","tax_year","entity_name","document_type","announcement_type","status","amount","notice_date","payment_due","row","values","Object","i","length","element","value","push","documentsExport","columns","display","paddingBottom"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactExport from \"react-data-export\";\nimport { Button, Select, Divider, Typography, Table} from 'antd';\nimport { FileExcelOutlined } from '@ant-design/icons';\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\n\n\n\nconst Export = (data) => {\n\n      const columns_new = [\n        { title: \"Tax Authority\", width: {wch: 20}},\n        { title: \"Tax Year\", width: {wch: 10}},\n        { title: \"Entity name\", width: {wch: 50}},\n        { title: \"Document type\", width: {wch: 20} },\n        { title: \"Announcement type\", width: {wch: 20} },\n        { title: \"Status\", width: {wch: 20}},\n        { title: \"Dollar value\", width: {wch: 10}},\n        { title: \"Notice date\", width: {wch: 15}},\n        { title: \"Payment due\", width: {wch: 15}}\n        \n      ]\n    const ordered_documents = []\n    data.map(item => {\n        let ordered_item = {\n            'state': item.state,\n            'tax_year': item.tax_year,\n            'entity_name': item.entity_name,\n            'document_type': item.document_type,\n            'announcement_type' : item.announcement_type,\n            'status': item.status,\n            'amount': item.amount, \n            'notice_date': item.notice_date,\n            'payment_due': item.payment_due\n        }\n        let row = []\n        const values = Object.values(ordered_item)\n        for (let i = 0; i < values.length; i ++ ){\n            let element = {value: values[i]}\n            row.push(element)\n        }\n        ordered_documents.push(row)\n    })\n\n\n   \n\n    const documentsExport = [{\n        columns: columns_new,\n        data: ordered_documents\n    }];\n\n    \n    return <>\n\n            <div>\n            <div className = \"block\" style = {{display: 'block', paddingBottom: \"20px\"}}>\n            Number of documents in selection: {data.length}\n            </div>\n                <ExcelFile  filename =\"StreamDownload\" \n                    element={<Button type = \"primary\">\n                            <FileExcelOutlined /> Export to Excel </Button>}>\n                    <ExcelSheet dataSet={documentsExport} name=\"Organization\"/>\n                </ExcelFile>\n            </div>\n    \n\n    \n\n\n    </>\n    \n}\n\nexport default Export; "]},"metadata":{},"sourceType":"module"}