{"ast":null,"code":"import _toConsumableArray from\"/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState}from'react';import{AppContext}from'../Context';import{Button,Descriptions,Divider,List,Drawer,Form,Input,Select,Typography}from'antd';import{PlusOutlined,LogoutOutlined}from'@ant-design/icons';var Title=Typography.Title;var EntityManagement=function EntityManagement(){var data=useContext(AppContext);var entity_list=data['entities_list'];console.log(entity_list);var entities=[];entity_list.map(function(item){entities.push({title:item});});var _useState=useState(entities),_useState2=_slicedToArray(_useState,2),orgs=_useState2[0],setOrgs=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),visible=_useState4[0],setvisible=_useState4[1];var _Form$useForm=Form.useForm(),_Form$useForm2=_slicedToArray(_Form$useForm,1),formorg=_Form$useForm2[0];var onFinish=function onFinish(values){console.log('values:',values);setOrgs(function(orgs){return[].concat(_toConsumableArray(orgs),[{'title':values.entity}]);});setvisible(false);};var entityform=/*#__PURE__*/React.createElement(Form,{style:{marginTop:'20px'},form:formorg,name:\"adduser\",onFinish:onFinish,hideRequiredMark:true},/*#__PURE__*/React.createElement(Form.Item,{name:\"entity\",label:\"Entity\",rules:[{required:true,message:'Please enter entity name'}]},/*#__PURE__*/React.createElement(Input,null)),/*#__PURE__*/React.createElement(Button,{type:\"primary\",htmlType:\"submit\"},\"Submit\"));return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{style:{padding:'20px',backgroundColor:'white',border:\"1px solid rgb(230,230,230)\",marginTop:'20px'}},/*#__PURE__*/React.createElement(Title,{level:4},\"  List of managed entitities \"),/*#__PURE__*/React.createElement(List,{itemLayout:\"horizontal\",dataSource:orgs,renderItem:function renderItem(item){return/*#__PURE__*/React.createElement(List.Item,{actions:[/*#__PURE__*/React.createElement(\"a\",{key:\"list-loadmore-edit\"},\"edit\"),/*#__PURE__*/React.createElement(\"a\",{key:\"list-loadmore-more\"},\"delete\")]},/*#__PURE__*/React.createElement(List.Item.Meta,{title:item.title}));}}),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return setvisible(true);},type:\"primary\"},/*#__PURE__*/React.createElement(PlusOutlined,null),\" New entity\"),visible===false?null:entityform));};export default EntityManagement;","map":{"version":3,"sources":["/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/Admin/EntityManagement.js"],"names":["React","useContext","useState","AppContext","Button","Descriptions","Divider","List","Drawer","Form","Input","Select","Typography","PlusOutlined","LogoutOutlined","Title","EntityManagement","data","entity_list","console","log","entities","map","item","push","title","orgs","setOrgs","visible","setvisible","useForm","formorg","onFinish","values","entity","entityform","marginTop","required","message","padding","backgroundColor","border"],"mappings":"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","sourcesContent":["import React, {useContext, useState} from 'react';\nimport { AppContext } from '../Context';\nimport { Button, Descriptions, Divider, List, Drawer, Form, Input, Select, Typography} from 'antd';\nimport { PlusOutlined, LogoutOutlined } from '@ant-design/icons';\nconst { Title } = Typography;\n\n\n\n\n\n\n\nconst EntityManagement = () => {\n  const data = useContext(AppContext)\n  const entity_list = data['entities_list']\n\n  console.log(entity_list)\n\n  const entities = []\n  entity_list.map(item => {\n    entities.push({title: item})\n  })\n\n  \n  \n\n\n    const [orgs, setOrgs] = useState(entities)\n    const [visible, setvisible] = useState(false)\n\n\n    const [formorg] = Form.useForm();\n\n    const onFinish = values => {\n        console.log('values:', values);\n        setOrgs(orgs => [...orgs, {'title': values.entity}])\n        setvisible(false)\n      };\n      \n    \n    const entityform =     <Form\n                                style = {{marginTop: '20px'}}\n                                form = {formorg}\n                                name = \"adduser\"\n                                onFinish={onFinish}\n                                hideRequiredMark>\n                            <Form.Item\n                                name=\"entity\"\n                                label=\"Entity\"\n                                rules={[{ required: true, message: 'Please enter entity name' }]}>\n                            <Input />\n                                </Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Submit\n                            </Button>\n                            </Form> \n\nreturn <>\n\n<div style ={{padding: '20px', \n                  backgroundColor: 'white', \n                  border: \"1px solid rgb(230,230,230)\", \n                  marginTop: '20px'}}>\n    <Title level = {4}>  List of managed entitities </Title>\n <List\n    itemLayout=\"horizontal\"\n    dataSource={orgs}\n    renderItem={item => (\n      <List.Item\n          actions={[<a key=\"list-loadmore-edit\">edit</a>, <a key=\"list-loadmore-more\">delete</a>]}\n\n        >\n        <List.Item.Meta\n          title={item.title}\n        />\n      </List.Item>\n    )}\n    \n  />      \n    <Button onClick={() => setvisible(true)} type =\"primary\">\n        <PlusOutlined/> New entity\n    </Button>\n\n    {visible === false ? null : entityform}\n\n\n    </div>\n        </>\n\n}\n\n\nexport default EntityManagement;\n"]},"metadata":{},"sourceType":"module"}