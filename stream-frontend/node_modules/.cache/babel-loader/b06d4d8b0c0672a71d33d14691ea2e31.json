{"ast":null,"code":"import React,{useRef,useEffect,useState}from\"react\";import{select,geoPath,geoAlbersUsa,min,max,scaleLinear,range}from\"d3\";import useResizeObserver from\"./useResizeObserver\";var Legend=function Legend(_ref){var data=_ref.data,property=_ref.property;var wrapperRef=useRef();var legendRef=useRef();var dimensions=useResizeObserver(wrapperRef);useEffect(function(){var legend=select(legendRef.current);var minProp=min(data.features,function(feature){return feature.properties[property];});var maxProp=max(data.features,function(feature){return feature.properties[property];});var colorScale=scaleLinear().domain([minProp,maxProp]).range([\"#edf0f3\",\"#096dd9\"]);var _ref2=dimensions||wrapperRef.current.getBoundingClientRect(),width=_ref2.width,height=_ref2.height;var diff=Math.abs(minProp-maxProp);var stepsize=diff/10;var colorRange=range(minProp,maxProp,stepsize);var colorLegend=[];var bandwith=[];for(var i=0;i<colorRange.length;i++){var num=colorRange[i];colorLegend.push(colorScale(num));if(i%2==0||i==colorRange.length){bandwith.push(Math.round(num).toString());}else{bandwith.push(\"\");}}legend.append(\"g\").selectAll(\"rect\").data(colorLegend).enter().append(\"rect\").attr(\"fill\",function(d,i){return colorLegend[i];}).attr(\"x\",function(d,i){return i*30;}).attr(\"y\",0).attr(\"width\",30).attr(\"height\",10);legend.append(\"g\").selectAll(\"text\").data(bandwith).enter().append(\"text\").attr(\"font-size\",\"10px\").attr(\"font-family\",\"HelveticaNeue-Light, Helvetica, sans-serif\").attr(\"x\",function(d,i){return i*30;}).attr(\"y\",20).text(function(d){return d;});},[data,dimensions,property]);return/*#__PURE__*/React.createElement(\"div\",{ref:wrapperRef,style:{heigth:\"30px\"}},/*#__PURE__*/React.createElement(\"svg\",{ref:legendRef,id:\"legend\"}));};export default Legend;","map":{"version":3,"sources":["/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/Backlog/Legend.js"],"names":["React","useRef","useEffect","useState","select","geoPath","geoAlbersUsa","min","max","scaleLinear","range","useResizeObserver","Legend","data","property","wrapperRef","legendRef","dimensions","legend","current","minProp","features","feature","properties","maxProp","colorScale","domain","getBoundingClientRect","width","height","diff","Math","abs","stepsize","colorRange","colorLegend","bandwith","i","length","num","push","round","toString","append","selectAll","enter","attr","d","text","heigth"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,SAAxB,CAAmCC,QAAnC,KAAmD,OAAnD,CACA,OAASC,MAAT,CAAiBC,OAAjB,CAA0BC,YAA1B,CAAwCC,GAAxC,CAA6CC,GAA7C,CAAkDC,WAAlD,CAA+DC,KAA/D,KAA4E,IAA5E,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAwB,IAArBC,CAAAA,IAAqB,MAArBA,IAAqB,CAAfC,QAAe,MAAfA,QAAe,CACnC,GAAMC,CAAAA,UAAU,CAAGd,MAAM,EAAzB,CACA,GAAMe,CAAAA,SAAS,CAAGf,MAAM,EAAxB,CACA,GAAMgB,CAAAA,UAAU,CAAGN,iBAAiB,CAACI,UAAD,CAApC,CAEAb,SAAS,CAAC,UAAM,CACZ,GAAMgB,CAAAA,MAAM,CAAGd,MAAM,CAACY,SAAS,CAACG,OAAX,CAArB,CACA,GAAMC,CAAAA,OAAO,CAAGb,GAAG,CAACM,IAAI,CAACQ,QAAN,CAAgB,SAAAC,OAAO,QAAIA,CAAAA,OAAO,CAACC,UAAR,CAAmBT,QAAnB,CAAJ,EAAvB,CAAnB,CACA,GAAMU,CAAAA,OAAO,CAAGhB,GAAG,CAACK,IAAI,CAACQ,QAAN,CAAgB,SAAAC,OAAO,QAAIA,CAAAA,OAAO,CAACC,UAAR,CAAmBT,QAAnB,CAAJ,EAAvB,CAAnB,CAEA,GAAMW,CAAAA,UAAU,CAAGhB,WAAW,GACzBiB,MADc,CACP,CAACN,OAAD,CAAUI,OAAV,CADO,EAEdd,KAFc,CAER,CAAC,SAAD,CAAY,SAAZ,CAFQ,CAAnB,CALY,UAURO,UAAU,EAAIF,UAAU,CAACI,OAAX,CAAmBQ,qBAAnB,EAVN,CASJC,KATI,OASJA,KATI,CASGC,MATH,OASGA,MATH,CAaZ,GAAIC,CAAAA,IAAI,CAAGC,IAAI,CAACC,GAAL,CAASZ,OAAO,CAAGI,OAAnB,CAAX,CACA,GAAIS,CAAAA,QAAQ,CAAGH,IAAI,CAAG,EAAtB,CACA,GAAII,CAAAA,UAAU,CAAGxB,KAAK,CAACU,OAAD,CAAUI,OAAV,CAAmBS,QAAnB,CAAtB,CACA,GAAIE,CAAAA,WAAW,CAAG,EAAlB,CACA,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CACA,IAAI,GAAIC,CAAAA,CAAC,CAAG,CAAZ,CAAeA,CAAC,CAAGH,UAAU,CAACI,MAA9B,CAAsCD,CAAC,EAAvC,CAA6C,CACzC,GAAIE,CAAAA,GAAG,CAAIL,UAAU,CAACG,CAAD,CAArB,CACAF,WAAW,CAACK,IAAZ,CAAiBf,UAAU,CAACc,GAAD,CAA3B,EACA,GAAIF,CAAC,CAAG,CAAJ,EAAS,CAAT,EAAcA,CAAC,EAAIH,UAAU,CAACI,MAAlC,CAAyC,CACrCF,QAAQ,CAACI,IAAT,CAAcT,IAAI,CAACU,KAAL,CAAWF,GAAX,EAAgBG,QAAhB,EAAd,EACH,CAFD,IAEO,CACHN,QAAQ,CAACI,IAAT,CAAc,EAAd,EACH,CAEJ,CAEHtB,MAAM,CAACyB,MAAP,CAAc,GAAd,EACGC,SADH,CACa,MADb,EAEG/B,IAFH,CAEQsB,WAFR,EAGGU,KAHH,GAIGF,MAJH,CAIU,MAJV,EAKGG,IALH,CAKQ,MALR,CAKgB,SAASC,CAAT,CAAYV,CAAZ,CAAc,CAAE,MAAOF,CAAAA,WAAW,CAACE,CAAD,CAAlB,CAAwB,CALxD,EAMGS,IANH,CAMQ,GANR,CAMa,SAASC,CAAT,CAAYV,CAAZ,CAAc,CAAE,MAAQA,CAAAA,CAAC,CAAC,EAAV,CAAgB,CAN7C,EAOGS,IAPH,CAOQ,GAPR,CAOa,CAPb,EAQGA,IARH,CAQQ,OARR,CAQiB,EARjB,EASGA,IATH,CASQ,QATR,CASkB,EATlB,EAWE5B,MAAM,CAACyB,MAAP,CAAc,GAAd,EACMC,SADN,CACgB,MADhB,EAEM/B,IAFN,CAEWuB,QAFX,EAGMS,KAHN,GAIMF,MAJN,CAIa,MAJb,EAKKG,IALL,CAKU,WALV,CAKuB,MALvB,EAMKA,IANL,CAMU,aANV,CAMyB,4CANzB,EAOKA,IAPL,CAOU,GAPV,CAOe,SAASC,CAAT,CAAYV,CAAZ,CAAc,CAAE,MAAQA,CAAAA,CAAC,CAAC,EAAV,CAAgB,CAP/C,EAQKS,IARL,CAQU,GARV,CAQe,EARf,EASCE,IATD,CASM,SAASD,CAAT,CAAW,CAAE,MAAOA,CAAAA,CAAP,CAAW,CAT9B,EAgBH,CAxDQ,CAwDN,CAAClC,IAAD,CAAOI,UAAP,CAAmBH,QAAnB,CAxDM,CAAT,CA0DA,mBACI,2BAAK,GAAG,CAAEC,UAAV,CAAsB,KAAK,CAAE,CAAEkC,MAAM,CAAE,MAAV,CAA7B,eACI,2BAAK,GAAG,CAAEjC,SAAV,CAAqB,EAAE,CAAC,QAAxB,EADJ,CADJ,CAaH,CA5ED,CA+EA,cAAeJ,CAAAA,MAAf","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport { select, geoPath, geoAlbersUsa, min, max, scaleLinear, range } from \"d3\";\nimport useResizeObserver from \"./useResizeObserver\";\n\nconst Legend = ({ data, property }) => {\n    const wrapperRef = useRef();\n    const legendRef = useRef();\n    const dimensions = useResizeObserver(wrapperRef);\n\n    useEffect(() => {\n        const legend = select(legendRef.current)\n        const minProp = min(data.features, feature => feature.properties[property]);\n        const maxProp = max(data.features, feature => feature.properties[property]);\n        \n        const colorScale = scaleLinear()\n            .domain([minProp, maxProp])\n            .range([\"#edf0f3\", \"#096dd9\"]);\n        \n        const { width, height } =\n            dimensions || wrapperRef.current.getBoundingClientRect();\n\n\n        let diff = Math.abs(minProp - maxProp);\n        let stepsize = diff / 10; \n        let colorRange = range(minProp, maxProp, stepsize)\n        let colorLegend = []\n        let bandwith = []\n        for(let i = 0; i < colorRange.length; i ++ ) {\n            let num  = colorRange[i]\n            colorLegend.push(colorScale(num))\n            if (i % 2 == 0 || i == colorRange.length){\n                bandwith.push(Math.round(num).toString()) \n            } else {\n                bandwith.push(\"\")\n            }\n            \n        }\n\n      legend.append(\"g\")\n        .selectAll(\"rect\")\n        .data(colorLegend)\n        .enter()\n        .append(\"rect\")\n        .attr(\"fill\", function(d, i){ return colorLegend[i]; })\n        .attr(\"x\", function(d, i){ return (i*30); })\n        .attr(\"y\", 0)\n        .attr(\"width\", 30)\n        .attr(\"height\", 10);\n\n        legend.append(\"g\")\n             .selectAll(\"text\")\n             .data(bandwith)\n             .enter()\n             .append(\"text\")\n            .attr(\"font-size\", \"10px\")\n            .attr(\"font-family\", \"HelveticaNeue-Light, Helvetica, sans-serif\")\n            .attr(\"x\", function(d, i){ return (i*30); })\n            .attr(\"y\", 20)\n        .text(function(d){ return d; })\n  \n\n\n\n\n\n    }, [data, dimensions, property]);\n\n    return (\n        <div ref={wrapperRef} style={{ heigth: \"30px\" }}>\n            <svg ref={legendRef} id=\"legend\"></svg>\n        </div>\n\n    )\n\n\n\n    \n\n\n\n}\n\n\nexport default Legend;"]},"metadata":{},"sourceType":"module"}