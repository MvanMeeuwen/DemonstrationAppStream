{"ast":null,"code":"var _jsxFileName = \"/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/Admin/EntityManagement.js\";\nimport React, { useContext, useState } from 'react';\nimport { AppContext } from '../Context';\nimport { Button, Descriptions, Divider, List, Drawer, Form, Input, Select, Typography } from 'antd';\nimport { PlusOutlined, LogoutOutlined } from '@ant-design/icons';\nconst {\n  Title\n} = Typography;\n\nconst EntityManagement = () => {\n  const data = useContext(AppContext);\n  const entity_list = data['entities_list'];\n  console.log(entity_list);\n  const entities = [];\n  entity_list.map(item => {\n    entities.push({\n      title: item\n    });\n  });\n  const [orgs, setOrgs] = useState(entities);\n  const [visible, setvisible] = useState(false);\n  const [formorg] = Form.useForm();\n\n  const onFinish = values => {\n    console.log('values:', values);\n    setOrgs(orgs => [...orgs, {\n      'title': values.entity\n    }]);\n    setvisible(false);\n  };\n\n  const entityform = /*#__PURE__*/React.createElement(Form, {\n    style: {\n      marginTop: '20px'\n    },\n    form: formorg,\n    name: \"adduser\",\n    onFinish: onFinish,\n    hideRequiredMark: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 28\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"entity\",\n    label: \"Entity\",\n    rules: [{\n      required: true,\n      message: 'Please enter entity name'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  }, \"Submit\"));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '20px',\n      backgroundColor: 'white',\n      border: \"1px solid rgb(230,230,230)\",\n      marginTop: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, \"  List of managed entitities \"), /*#__PURE__*/React.createElement(List, {\n    itemLayout: \"horizontal\",\n    dataSource: orgs,\n    renderItem: item => /*#__PURE__*/React.createElement(List.Item, {\n      actions: [/*#__PURE__*/React.createElement(\"a\", {\n        key: \"list-loadmore-edit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }, \"edit\"), /*#__PURE__*/React.createElement(\"a\", {\n        key: \"list-loadmore-more\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 59\n        }\n      }, \"delete\")],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(List.Item.Meta, {\n      title: item.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 2\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setvisible(true),\n    type: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PlusOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }), \" New entity\"), visible === false ? null : entityform));\n};\n\nexport default EntityManagement;","map":{"version":3,"sources":["/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/Admin/EntityManagement.js"],"names":["React","useContext","useState","AppContext","Button","Descriptions","Divider","List","Drawer","Form","Input","Select","Typography","PlusOutlined","LogoutOutlined","Title","EntityManagement","data","entity_list","console","log","entities","map","item","push","title","orgs","setOrgs","visible","setvisible","formorg","useForm","onFinish","values","entity","entityform","marginTop","required","message","padding","backgroundColor","border"],"mappings":"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","sourcesContent":["import React, {useContext, useState} from 'react';\nimport { AppContext } from '../Context';\nimport { Button, Descriptions, Divider, List, Drawer, Form, Input, Select, Typography} from 'antd';\nimport { PlusOutlined, LogoutOutlined } from '@ant-design/icons';\nconst { Title } = Typography;\n\n\n\n\n\n\n\nconst EntityManagement = () => {\n  const data = useContext(AppContext)\n  const entity_list = data['entities_list']\n\n  console.log(entity_list)\n\n  const entities = []\n  entity_list.map(item => {\n    entities.push({title: item})\n  })\n\n  \n  \n\n\n    const [orgs, setOrgs] = useState(entities)\n    const [visible, setvisible] = useState(false)\n\n\n    const [formorg] = Form.useForm();\n\n    const onFinish = values => {\n        console.log('values:', values);\n        setOrgs(orgs => [...orgs, {'title': values.entity}])\n        setvisible(false)\n      };\n      \n    \n    const entityform =     <Form\n                                style = {{marginTop: '20px'}}\n                                form = {formorg}\n                                name = \"adduser\"\n                                onFinish={onFinish}\n                                hideRequiredMark>\n                            <Form.Item\n                                name=\"entity\"\n                                label=\"Entity\"\n                                rules={[{ required: true, message: 'Please enter entity name' }]}>\n                            <Input />\n                                </Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Submit\n                            </Button>\n                            </Form> \n\nreturn <>\n\n<div style ={{padding: '20px', \n                  backgroundColor: 'white', \n                  border: \"1px solid rgb(230,230,230)\", \n                  marginTop: '20px'}}>\n    <Title level = {4}>  List of managed entitities </Title>\n <List\n    itemLayout=\"horizontal\"\n    dataSource={orgs}\n    renderItem={item => (\n      <List.Item\n          actions={[<a key=\"list-loadmore-edit\">edit</a>, <a key=\"list-loadmore-more\">delete</a>]}\n\n        >\n        <List.Item.Meta\n          title={item.title}\n        />\n      </List.Item>\n    )}\n    \n  />      \n    <Button onClick={() => setvisible(true)} type =\"primary\">\n        <PlusOutlined/> New entity\n    </Button>\n\n    {visible === false ? null : entityform}\n\n\n    </div>\n        </>\n\n}\n\n\nexport default EntityManagement;\n"]},"metadata":{},"sourceType":"module"}