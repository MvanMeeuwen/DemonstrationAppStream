{"ast":null,"code":"var _jsxFileName = \"/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/NoticeManagement/NoticeManagement.js\";\nimport React, { useContext, useState } from 'react';\nimport { Button, Select, Divider, Typography, Table, Checkbox } from 'antd';\nimport { AppContext } from '../Context';\nimport styled from 'styled-components';\nimport moment from 'moment';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { filter } from 'lodash';\nimport ReactExport from \"react-data-export\";\nimport Export from './Export';\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\nconst AppLayout = styled.div`\n  display: grid;\n  padding: 2em;\n  grid-template-columns: 1fr 4fr;\n  grid-template-rows: 1000px;\n`;\nconst {\n  Option\n} = Select;\nconst {\n  Title\n} = Typography;\nconst states = [\"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\", \"Delaware\", \"Florida\", \"Georgia\", \"Hawaii\", \"Idaho\", \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\", \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\", \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\", \"North Carolina\", \"North Dakota\", \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Rhode Island\", \"South Carolina\", \"South Dakota\", \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\", \"Virginia\", \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"];\nconst years = [2015, 2016, 2017, 2018, 2019, 2020];\nconst columns = [{\n  title: 'Tax Authority',\n  dataIndex: 'state',\n  key: 'state'\n}, {\n  title: 'Entity name',\n  dataIndex: 'entity_name',\n  key: 'entity'\n}, {\n  title: 'Notice date',\n  dataIndex: 'notice_date',\n  sorter: (a, b) => moment(a.notice_date).unix() - moment(b.notice_date).unix()\n}, {\n  title: 'Amount, in USD',\n  dataIndex: 'amount',\n  key: 'amount',\n  sorter: (a, b) => a.amount - b.amount\n}, {\n  title: 'Notice type',\n  dataIndex: 'document_type',\n  key: 'notice_type'\n}, {\n  title: 'Status',\n  dataIndex: 'status',\n  key: 'status'\n}, {\n  title: 'Third-party access',\n  dataIndex: 'thirdparty',\n  key: 'thirdparty'\n}, {\n  title: 'Action',\n  key: 'action',\n  render: (text, record) => /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: {\n      pathname: '/document',\n      param: record.unique_id\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 20\n    }\n  }, \"Review\"))\n}];\n\nconst NoticeManagement = () => {\n  const data = useContext(AppContext);\n  const documents = data['ledger'];\n  const entities = data['entities_list'];\n  const [selectedStates, setSelectedStates] = useState(states);\n  const [selectedEntities, setSelectedEntities] = useState(entities);\n  const [selectedYears, setSelectedYears] = useState(years);\n\n  const handlestateChange = event => {\n    if (event.length == 0) {\n      setSelectedStates(states);\n    } else {\n      setSelectedStates(event);\n    }\n  };\n\n  const handleentityChange = event => {\n    if (event.length == 0) {\n      setSelectedEntities(entities);\n    } else {\n      setSelectedEntities(event);\n    }\n  };\n\n  const handleyearChange = event => {\n    let event_numeric = event.map(x => +x);\n\n    if (event_numeric.length == 0) {\n      setSelectedYears(years);\n    } else {\n      setSelectedYears(event_numeric);\n    }\n  };\n\n  const documents_multiple = [];\n  documents.map(item => {\n    if (selectedYears.includes(item.tax_year) && selectedEntities.includes(item.entity_name) && selectedStates.includes(item.state)) {\n      if (item.third_party == true) {\n        item['thirdparty'] = \"Yes\";\n      } else {\n        item['thirdparty'] = \"No\";\n      }\n\n      documents_multiple.push(item);\n    }\n  });\n  const documents_exported = documents_multiple;\n  console.log(documents_exported[0]);\n  const statechildren = [];\n  states.map(state => {\n    statechildren.push( /*#__PURE__*/React.createElement(Option, {\n      key: state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 32\n      }\n    }, state));\n  });\n  const entitychildren = [];\n  entities.map(entity => {\n    entitychildren.push( /*#__PURE__*/React.createElement(Option, {\n      key: entity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 33\n      }\n    }, entity));\n  });\n  const yearschildren = [];\n  years.map(year => {\n    yearschildren.push( /*#__PURE__*/React.createElement(Option, {\n      key: year,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 28\n      }\n    }, year));\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"selectionpane\",\n    style: {\n      paddingRight: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, \" Selection criteria \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"block\",\n    style: {\n      display: 'block',\n      paddingBottom: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, \" States\"), /*#__PURE__*/React.createElement(Select, {\n    mode: \"multiple\",\n    placeholder: \"All states selected\",\n    onChange: handlestateChange,\n    style: {\n      width: '80%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, statechildren), /*#__PURE__*/React.createElement(Title, {\n    level: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, \" Entities\"), /*#__PURE__*/React.createElement(Select, {\n    mode: \"multiple\",\n    placeholder: \"All entities selected\",\n    onChange: handleentityChange,\n    style: {\n      width: '80%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, entitychildren), /*#__PURE__*/React.createElement(Title, {\n    level: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, \" Years \"), /*#__PURE__*/React.createElement(Select, {\n    mode: \"multiple\",\n    placeholder: \"All years selected\",\n    onChange: handleyearChange,\n    style: {\n      width: '80%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, yearschildren), /*#__PURE__*/React.createElement(Title, {\n    level: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, \" Third party \"), /*#__PURE__*/React.createElement(Checkbox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, \"Third party access\")), Export(documents_exported)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    dataSource: documents_exported,\n    columns: columns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default NoticeManagement;","map":{"version":3,"sources":["/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/NoticeManagement/NoticeManagement.js"],"names":["React","useContext","useState","Button","Select","Divider","Typography","Table","Checkbox","AppContext","styled","moment","BrowserRouter","Router","Route","Link","filter","ReactExport","Export","ExcelFile","ExcelSheet","ExcelColumn","AppLayout","div","Option","Title","states","years","columns","title","dataIndex","key","sorter","a","b","notice_date","unix","amount","render","text","record","pathname","param","unique_id","NoticeManagement","data","documents","entities","selectedStates","setSelectedStates","selectedEntities","setSelectedEntities","selectedYears","setSelectedYears","handlestateChange","event","length","handleentityChange","handleyearChange","event_numeric","map","x","documents_multiple","item","includes","tax_year","entity_name","state","third_party","push","documents_exported","console","log","statechildren","entitychildren","entity","yearschildren","year","paddingRight","display","paddingBottom","width"],"mappings":"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","sourcesContent":["import React, {useContext, useState} from 'react'\nimport { Button, Select, Divider, Typography, Table, Checkbox} from 'antd';\nimport { AppContext } from '../Context';\nimport styled from 'styled-components';\nimport moment from 'moment'\nimport { BrowserRouter as Router, Route, Link  } from \"react-router-dom\";\nimport { filter } from 'lodash'\nimport ReactExport from \"react-data-export\";\n\n\nimport Export from './Export'\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\n\nconst AppLayout = styled.div`\n  display: grid;\n  padding: 2em;\n  grid-template-columns: 1fr 4fr;\n  grid-template-rows: 1000px;\n`\n\nconst { Option } = Select;\nconst { Title } = Typography;\n\nconst states = [\"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\", \"Delaware\", \"Florida\", \"Georgia\", \"Hawaii\", \"Idaho\", \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\", \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\", \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\", \"North Carolina\", \"North Dakota\", \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Rhode Island\", \"South Carolina\", \"South Dakota\", \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\", \"Virginia\", \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"]\nconst years = [2015, 2016, 2017, 2018, 2019, 2020]\n\n\nconst columns = [\n    {\n        title: 'Tax Authority',\n        dataIndex: 'state',\n        key: 'state'\n      },\n    {\n      title: 'Entity name',\n      dataIndex: 'entity_name',\n      key: 'entity'\n    },\n    {\n        title: 'Notice date',\n        dataIndex: 'notice_date',\n        sorter: (a, b) => moment(a.notice_date).unix() - moment(b.notice_date).unix()\n      },\n      {\n        title: 'Amount, in USD',\n        dataIndex: 'amount',\n        key: 'amount',\n        sorter: (a, b) => a.amount - b.amount,\n      },\n      {\n        title: 'Notice type',\n        dataIndex: 'document_type',\n        key: 'notice_type'\n      },\n      {\n        title: 'Status',\n        dataIndex: 'status',\n        key: 'status'\n      },\n      \n      {\n        title: 'Third-party access',\n        dataIndex: 'thirdparty',\n        key: 'thirdparty'\n      },\n\n    {\n        title: 'Action',\n        key: 'action',\n        render: (text, record) => (\n            <span>\n                   <Link to= {{pathname: '/document', param: record.unique_id}}>\n                       Review\n                   </Link>\n   \n            </span>\n        )\n       }\n  ]\n  \n\n\nconst NoticeManagement = () => {\n    const data = useContext(AppContext)\n    const documents = data['ledger']\n    const entities = data['entities_list']\n\n    const [selectedStates, setSelectedStates] = useState(states)\n    const [selectedEntities, setSelectedEntities] = useState(entities)\n    const [selectedYears, setSelectedYears] = useState(years)\n\n    const handlestateChange = (event) => {\n        if (event.length == 0) {\n            setSelectedStates(states)\n        } else {\n            setSelectedStates(event)\n        }\n    }\n\n    const handleentityChange = (event) => {\n        if (event.length == 0) {\n            setSelectedEntities(entities)\n        } else {\n            setSelectedEntities(event)\n        }\n    }\n\n    const handleyearChange = (event) => {\n        let event_numeric = event.map(x => +x)\n        if (event_numeric.length == 0) {\n            setSelectedYears(years)\n        } else {\n            setSelectedYears(event_numeric)\n        }\n    }\n \n\n    const documents_multiple = []\n    documents.map(item => {\n        if(selectedYears.includes(item.tax_year) && selectedEntities.includes(item.entity_name) && selectedStates.includes(item.state)) {\n            if (item.third_party == true ) {\n                item['thirdparty'] = \"Yes\"\n            } else {\n                item['thirdparty'] = \"No\"\n            }\n\n            documents_multiple.push(item)\n        }\n    })\n    \n\n    const documents_exported = documents_multiple;\n\n    console.log(documents_exported[0])\n\n    const statechildren = [];\n    states.map(state =>{\n            statechildren.push(<Option key={state}>{state}</Option>)\n    })\n\n    const entitychildren = [];\n    entities.map(entity =>{\n            entitychildren.push(<Option key={entity}>{entity}</Option>)\n    })\n\n    const yearschildren = []\n    years.map(year =>{\n        yearschildren.push(<Option key={year}>{year}</Option>)\n    })\n\n\n    return <>\n        <AppLayout>\n        <div className=\"selectionpane\" style = {{paddingRight: '5px'}}>\n        <Title level = {2}> Selection criteria </Title>\n        <div className = \"block\" style = {{display: 'block', paddingBottom: \"20px\"}}>\n\n        <Title level = {4}> States</Title>\n            <Select\n                    mode=\"multiple\"\n                    placeholder=\"All states selected\"\n                    onChange={handlestateChange}\n                    style={{ width: '80%' }}\n                >\n                    {statechildren}\n            </Select>\n\n            <Title level = {4}> Entities</Title>\n            <Select\n                    mode=\"multiple\"\n                    placeholder=\"All entities selected\"\n                    onChange={handleentityChange}\n                    style={{ width: '80%' }}\n                >\n                    {entitychildren}\n            </Select>\n\n            <Title level = {4}> Years </Title>\n            <Select\n                    mode=\"multiple\"\n                    placeholder=\"All years selected\"\n                    onChange= {handleyearChange}\n                    style={{ width: '80%' }}\n                >\n                    {yearschildren}\n            </Select>\n\n            <Title level = {4}> Third party </Title>\n            <Checkbox>\n                Third party access \n            </Checkbox>\n                \n            </div>\n\n            {Export(documents_exported)}\n            </div>\n\n\n\n            <div className = \"table\">\n\n            <Table   \n                dataSource={documents_exported} \n                columns={columns} \n                />\n\n\n            </div>\n\n        </AppLayout>\n    </>\n}\n\n\nexport default NoticeManagement;"]},"metadata":{},"sourceType":"module"}