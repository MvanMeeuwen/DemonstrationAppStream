{"ast":null,"code":"var _jsxFileName = \"/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/Feedback.js\";\nimport React, { useState, useContext } from 'react';\nimport { Modal, Button, Input, Rate, notification, Typography } from 'antd';\nimport { AppContext } from './Context';\nconst {\n  Title,\n  Paragraph,\n  Text\n} = Typography;\nconst {\n  TextArea\n} = Input;\n\nconst Feedback = () => {\n  const contextData = useContext(AppContext);\n  const auth = contextData['auth'];\n  let message = \"Hi \" + auth.username + \"!\";\n  const [feedbackvisible, setFeedbackvisible] = useState(false);\n\n  const showFeedback = () => {\n    setFeedbackvisible(true);\n  };\n\n  const hideFeedback = () => {\n    setFeedbackvisible(false);\n  };\n\n  const submitFeedback = () => {\n    setFeedbackvisible(false);\n    notification.open({\n      message: 'Thank you for thinking with us!',\n      description: 'We highly appreciate your feedback. We aim to respond to your comments or questions within a few business days.',\n      duration: 10\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: showFeedback,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, \"Talk to us!\"), /*#__PURE__*/React.createElement(Modal, {\n    title: message,\n    visible: feedbackvisible,\n    onOk: submitFeedback,\n    onCancel: hideFeedback,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, \"Ask us anything, or share your feedback.\", /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Topic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Rate, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextArea, {\n    placeholder: \"PLACEHOLDER\",\n    autoSize: {\n      minRows: 3,\n      maxRows: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default Feedback;","map":{"version":3,"sources":["/Users/maartenvanmeeuwen/Documents/stream-productie/stream-frontend/src/Components/Feedback.js"],"names":["React","useState","useContext","Modal","Button","Input","Rate","notification","Typography","AppContext","Title","Paragraph","Text","TextArea","Feedback","contextData","auth","message","username","feedbackvisible","setFeedbackvisible","showFeedback","hideFeedback","submitFeedback","open","description","duration","minRows","maxRows"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,KAAxB,EAA+BC,IAA/B,EAAqCC,YAArC,EAAmDC,UAAnD,QAAqE,MAArE;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,MAAM;AAAEC,EAAAA,KAAF;AAASC,EAAAA,SAAT;AAAoBC,EAAAA;AAApB,IAA6BJ,UAAnC;AACA,MAAM;AAAEK,EAAAA;AAAF,IAAeR,KAArB;;AAEA,MAAMS,QAAQ,GAAG,MAAM;AACnB,QAAMC,WAAW,GAAGb,UAAU,CAACO,UAAD,CAA9B;AACA,QAAMO,IAAI,GAAGD,WAAW,CAAC,MAAD,CAAxB;AACA,MAAIE,OAAO,GAAG,QAAQD,IAAI,CAACE,QAAb,GAAwB,GAAtC;AAEA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCnB,QAAQ,CAAC,KAAD,CAAtD;;AAGA,QAAMoB,YAAY,GAAG,MAAM;AACvBD,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH,GAFD;;AAIA,QAAME,YAAY,GAAG,MAAM;AACvBF,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMG,cAAc,GAAG,MAAM;AACrBH,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AAEJb,IAAAA,YAAY,CAACiB,IAAb,CAAkB;AACVP,MAAAA,OAAO,EAAE,iCADC;AAEVQ,MAAAA,WAAW,EAAE,iHAFH;AAGVC,MAAAA,QAAQ,EAAE;AAHA,KAAlB;AAKC,GARL;;AAYA,sBAAO,uDACP,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAEL,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADO,eAKP,oBAAC,KAAD;AACM,IAAA,KAAK,EAAGJ,OADd;AAEM,IAAA,OAAO,EAAEE,eAFf;AAGM,IAAA,IAAI,EAAEI,cAHZ;AAIM,IAAA,QAAQ,EAAED,YAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DAOQ,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPR,eAUQ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVR,eAYQ,oBAAC,QAAD;AACI,IAAA,WAAW,EAAC,aADhB;AAEI,IAAA,QAAQ,EAAE;AAAEK,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,OAAO,EAAE;AAAvB,KAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZR,CALO,CAAP;AA0BH,CAtDD;;AAyDA,eAAed,QAAf","sourcesContent":["import React, {useState, useContext} from 'react';\nimport { Modal, Button, Input, Rate, notification, Typography } from 'antd';\nimport { AppContext } from './Context';\nconst { Title, Paragraph, Text } = Typography;\nconst { TextArea } = Input;\n\nconst Feedback = () => {\n    const contextData = useContext(AppContext)\n    const auth = contextData['auth'];\n    let message = \"Hi \" + auth.username + \"!\" \n\n    const [feedbackvisible, setFeedbackvisible] = useState(false)\n    \n\n    const showFeedback = () => {\n        setFeedbackvisible(true)\n    }\n\n    const hideFeedback = () => {\n        setFeedbackvisible(false)\n    }\n\n    const submitFeedback = () => {\n            setFeedbackvisible(false)\n        \n        notification.open({\n                message: 'Thank you for thinking with us!',\n                description: 'We highly appreciate your feedback. We aim to respond to your comments or questions within a few business days.',\n                duration: 10\n              });\n        }\n\n\n\n    return <>\n    <Button type=\"primary\" onClick={showFeedback}>\n          Talk to us!\n    </Button>\n\n    <Modal\n          title= {message}\n          visible={feedbackvisible}\n          onOk={submitFeedback}\n          onCancel={hideFeedback}\n        >\n            Ask us anything, or share your feedback.\n            <Input placeholder=\"Topic\" />\n\n\n            <Rate />\n\n            <TextArea    \n                placeholder=\"PLACEHOLDER\"\n                autoSize={{ minRows: 3, maxRows: 5 }}\n        />\n    </Modal>\n\n\n\n    </>\n}\n\n\nexport default Feedback;"]},"metadata":{},"sourceType":"module"}