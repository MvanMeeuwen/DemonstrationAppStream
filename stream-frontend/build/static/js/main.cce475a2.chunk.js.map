{"version":3,"sources":["aws-exports.js","Components/Header/Header.js","Components/Home/Home.js","Components/Upload/Upload.js","Components/Backlog/useResizeObserver.js","Components/Backlog/GeoChart.js","Components/Backlog/Legend.js","Components/Backlog/MergeData.js","Components/Context.js","Components/Backlog/Backlog.js","Components/Confirmation/Confirmation.js","Components/NoticeManagement/Export.js","Components/NoticeManagement/NoticeManagement.js","Components/NoticeManagement/Document.js","Components/DashboardB/LineChart.js","Components/DashboardB/BarEntities.js","Components/DashboardB/StateLevel.js","Components/DashboardB/utils.js","Components/DashboardB/Dashboard.js","Components/Admin/AdminUtils.js","Components/Feedback.js","Components/Admin/DrawerComponent.js","Components/Admin/EntityManagement.js","Components/Admin/DataElementsManagement.js","Components/Admin/UserList.js","Components/Admin/Admin.js","App.js","serviceWorker.js","index.js","Components/Header/logo_stream.png","Components/Home/flowchart.svg","Components/Home/problem.svg","Components/Home/solution.svg"],"names":["awsmobile","Header","Menu","SubMenu","Layout","FullHeader","style","width","background","className","theme","mode","defaultSelectedKeys","lineHeight","Item","key","HomeOutlined","to","CloudUploadOutlined","FunnelPlotOutlined","SolutionOutlined","FileTextOutlined","FundOutlined","MenuOutlined","float","src","Logo","alt","height","Title","Typography","Paragraph","Text","Home","problem_text","level","solution_text","strong","paddingTop","span","paddingRight","ProblemIcon","SolutionIcon","Flowchart","Amplify","configure","awsconfig","Upload","auth","Auth","onDrop","acceptedFiles","a","currentAuthenticatedUser","authcontext","username","console","log","attributes","forEach","file","replace","c","r","Math","random","toString","filename","name","reader","FileReader","onabort","onerror","readAsBinaryString","onload","Storage","put","then","catch","err","useDropzone","accept","getRootProps","getInputProps","rejectedFiles","padding","backgroundColor","marginTop","size","header","bordered","dataSource","renderItem","item","path","useResizeObserver","ref","useState","dimensions","setDimensions","useEffect","observeTarget","current","resizeObserver","ResizeObserver","entries","entry","contentRect","observe","unobserve","GeoChart","data","property","history","useHistory","svgRef","useRef","wrapperRef","selectedCountry","svg","select","minProp","min","features","feature","properties","maxProp","max","colorScale","scaleLinear","domain","range","getBoundingClientRect","projection","geoAlbersUsa","fitSize","precision","pathGenerator","geoPath","selectAll","join","on","url","NAME","push","attr","text","transition","marginBottom","id","Legend","legendRef","legend","stepsize","abs","colorRange","colorLegend","bandwith","i","length","num","round","append","enter","d","heigth","MergeData","geodata","groupedData","state","documents","nr_documents","amount","total_amount","demo","j","AppContext","createContext","AppProvider","props","setData","fetchData","myInit","headers","API","get","result","items","state_grouping","groupBy","n","states","Object","keys","datalist","values","map","data_object","state_data","reduce","b","doctypes","document_type","types","jsonObject","distribution","documents_grouped_state","test","Provider","value","children","Select","Option","Backlog","contextData","useContext","newData","formItemLayout","labelCol","sm","TextArea","Input","AppLayout","styled","div","Confirmation","docData","entities_list","count","setCount","image","setImage","doc_unique_ids","notice","unique_id","data_elements","initialValues","initialFormValues","x","prototype","call","Form","useForm","form","document_type_json","type","entities_list_json","entity","statesjson","announcement_types_json","form_list","label","options","filterOption","inputValue","option","toUpperCase","indexOf","includes","announcement_type_item","entity_field","id_field","field","optionvalues","formitem","form_list_tail","placeholder","autoSize","minRows","maxRows","progress_percentage","status","title","extra","percent","layout","onFinish","message","info","resetFields","htmlType","CheckOutlined","ExcelFile","ReactExport","ExcelSheet","Export","ExcelColumn","ordered_documents","ordered_item","tax_year","entity_name","announcement_type","notice_date","payment_due","row","element","documentsExport","columns","wch","display","paddingBottom","FileExcelOutlined","dataSet","years","dataIndex","sorter","moment","unix","render","record","NoticeManagement","entities","document_types","selectedStates","setSelectedStates","selectedEntities","setSelectedEntities","selectedYears","setSelectedYears","selectedDocumentTypes","setSelectedDocumentTypes","documents_multiple","third_party","documents_exported","documenttypechildren","statechildren","entitychildren","yearschildren","year","onChange","event","event_numeric","onRow","onClick","titleLayout","Document","location","pathname","split","specific_doc","filter","o","announcement_list_json","announce_form","form_tail","defaultValue","encodeURI","RollbackOutlined","paddingLeft","Graphed","variable","colors","typelist","line","dataKey","stroke","strokeWidth","unit","margin","top","right","left","bottom","strokeDasharray","BarEntities","grouped_entities","arrSum","arr","list_of_objects","index","entity_docs","amount_refund","amount_payment","amount_total","nr_payments","nr_refunds","nr_announcements","sorted_list","sort","bar_list","reduced_data","barelement","fill","StateLevel","group_month","month_grouping","month","months","month_docs","groups","refunds","payments","announcements","epoch","valueOf","MonthPicker","DatePicker","Dashboard","setVariable","startStr","startDate","setstartDate","now","toDate","endStr","endDate","setendDate","radiostate","setRadiostate","documents_filtered","date_check","format","isAfter","isBefore","filtered_data","entitieschildren","selectedView","radioStyle","LineChart","Group","target","gutter","date","dateString","FilePptOutlined","marginLeft","signOut","Feedback","feedbackvisible","setFeedbackvisible","visible","onOk","notification","open","description","duration","onCancel","DrawerComponent","drawervisibility","setDrawervisibility","setConfirmcodeVisibility","setNewuser","onClose","bodyStyle","border","footer","textAlign","password","email","customer","access_level","signUp","validationData","confirmNotification","hideRequiredMark","rules","required","Password","EntityManagement","entity_list","orgs","setOrgs","setvisible","formorg","entityform","itemLayout","actions","Meta","PlusOutlined","allDataElements","selectedDataElements","DataElementsManagement","elementsForm","dataelements_fieldlist","defaultChecked","SyncOutlined","marginRight","UserList","user_list","Admin","authData","LogoutOutlined","UserAddOutlined","Content","endpoints","endpoint","custom_header","currentSession","idToken","jwtToken","Authorization","withAuthenticator","exact","component","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","module","exports"],"mappings":"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","file":"static/js/main.cce475a2.chunk.js","sourcesContent":["// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"eu-west-1\",\n    \"aws_cognito_identity_pool_id\": \"eu-west-1:06788ecb-7142-4f13-9a21-927b7cb67151\",\n    \"aws_cognito_region\": \"eu-west-1\",\n    \"aws_user_pools_id\": \"eu-west-1_Tw7W5AmAS\",\n    \"aws_user_pools_web_client_id\": \"24furps1iepkut3ajpo7firfg7\",\n    \"oauth\": {},\n    \"aws_user_files_s3_bucket\": \"streamstoragestream-stream\",\n    \"aws_user_files_s3_bucket_region\": \"eu-west-1\",\n    \"aws_content_delivery_bucket\": \"hostingbucket-stream-stream\",\n    \"aws_content_delivery_bucket_region\": \"eu-west-1\",\n    \"aws_content_delivery_url\": \"http://hostingbucket-stream-stream.s3-website-eu-west-1.amazonaws.com\"\n};\n\n\nexport default awsmobile;\n","import React from 'react'\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\n\nimport {Layout, Menu } from 'antd';\nimport { FileTextOutlined, HomeOutlined, FundOutlined, MenuOutlined,  CloudUploadOutlined, SolutionOutlined, FunnelPlotOutlined } from '@ant-design/icons';\n\nimport Logo from './logo_stream.png'\n\nconst { SubMenu } = Menu;\nconst { Header } = Layout;\n\n\nconst FullHeader = () => {\n    return (\n    <Header style={{ width: '100%', \n                  background: 'white'}}>\n      <div className=\"logo\" />\n      <Menu\n        theme=\"light\"\n        mode=\"horizontal\"\n        defaultSelectedKeys={['1']}\n        style={{ lineHeight: '64px' }}\n      >\n        <Menu.Item key=\"home\">\n          <HomeOutlined/>\n            <span> Home </span>\n            <Link to=\"/\" />\n        </Menu.Item>\n\n        <Menu.Item key=\"upload\">\n        <CloudUploadOutlined />\n              <span>\n                Upload\n              </span>\n              <Link to=\"/upload\" />\n        </Menu.Item>\n                  <Menu.Item key=\"geography\">\n                    <FunnelPlotOutlined />\n                  <span> Backlog </span>\n                  <Link to=\"/backlog\" />\n                  </Menu.Item>\n\n                  <Menu.Item key=\"backlog\">\n                    <SolutionOutlined />\n                  <span>Classification</span>\n                  <Link to=\"/confirmation\" />\n                  </Menu.Item>\n     \n            \n        \n        \n            <Menu.Item key=\"management\">\n              <FileTextOutlined />\n                  <span>\n                    Notice management \n                    </span>\n              <Link to=\"/management\" />\n            </Menu.Item>\n            \n            <Menu.Item key=\"dashboard\">\n              <FundOutlined/>\n                  <span>Dashboard</span>\n                  <Link to=\"/dashboard\" />\n            </Menu.Item>      \n        \n            <Menu.Item key=\"admin\">\n            <MenuOutlined />\n              <span>\n                Admin\n              </span>\n            <Link to=\"/admin\" />\n            </Menu.Item>\n            <div style = {{float: \"right\"}}>\n            <img src={Logo} alt=\"website logo\" height='45px' />\n          </div>\n      </Menu>\n    </Header>\n    )\n}\n\n\nexport default FullHeader;","import React from 'react'\nimport Flowchart from './flowchart.svg'\n\nimport { Typography, Row, Col } from 'antd'\n\nimport ProblemIcon from './problem.svg'\nimport SolutionIcon from './solution.svg'\nimport './style.css'\n\nconst { Title, Paragraph, Text} = Typography\n\n\n\n\n\nconst Home = () => {\n\n     \n    const side = 4\n    const center = 24 - 2 * side \n\n\nconst problem_text = <div>\n        <Title level = {2}>\n            The problem\n        </Title>\n        <Paragraph>\n            As many investors know, earning effectively connected income (ECI) within the United States means that one has to file State Income Tax returns in addition to Federal Income Tax returns.\n        </Paragraph>\n        <Paragraph>\n            These state filings easily pile up as investors have large numbers of legal entities and some of the 50 states have multiple tax systems. \n        </Paragraph>\n        <Paragraph>\n            Furthermore, tax compliance, workflow management and document handling is not getting any easier by the fact that State Tax Notices are in paper form, sent over mail.\n        </Paragraph>\n\n\n\n</div>\n\nconst solution_text = <div>\n        <Title level = {2}>\n          Our solution\n        </Title>\n\n        <Paragraph>\n        Stream is a web-based application that processes, manages and gives structured insight into State Tax Notices. Deep learning and machine learning methods are used to, automatically classify and extract the content of State Tax Notices.\n\n        </Paragraph>\n\n        <Paragraph>\n            Stream is:\n        </Paragraph>\n\n        <Paragraph>\n            <ul>\n        <li>\n        An <Text strong>automated classification system</Text>. Stream automatically classifies and derives the content of State Tax Notices. \n\n        </li>\n        <li>\n        A <Text strong>structured filing and archiving system</Text>. This content is stored in a structured way, meaning you can easily find and access State Tax Notices.\n        </li>\n        <li>\n        A <Text strong>workflow management system</Text>. Required actions can easily be handled by other departments or third parties, through customized access to the system.\n        </li>\n        <li>\n        A <Text strong>tax compliance dashboard</Text>. Reporting can be done easily through the Stream dashboard function. This contains an overview of the number of notices, dollar value payments, dollar value refunds, in time, per State or per legal entity.\n        </li>\n      </ul>\n            </Paragraph>\n\n\n\n</div>\n\n\n    return (\n        <div style = {{paddingTop: '50px'}}>\n            <Row>\n                <Col span = {side}>\n                        <div style = {{float: 'right', paddingRight: '2em'}}>\n                            <img src = {ProblemIcon} alt = 'problem' height = '100px'/>\n                        </div>\n                </Col>\n                <Col span = {center}>\n                {problem_text}\n                </Col> \n                <Col span = {side}>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col span = {side}>\n                        <div style = {{float: 'right', paddingRight: '2em'}}>\n                            <img src = {SolutionIcon} alt = 'problem' height = '100px'/>\n                        </div>\n                </Col>\n                <Col span = {center}>\n                {solution_text}\n                </Col> \n                <Col span = {side}>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col span = {side}>\n                        \n                </Col>\n                <Col span = {center}>\n                <Title>\n                    Stream web application flow\n                </Title>\n                <Paragraph>\n                    Lifecycle of a state tax notice\n                </Paragraph>\n                <div className=\"container-div\">\n                    <img src = {Flowchart} alt = \"flowchart\" height = '600px'/>\n\n                </div>\n                \n\n                </Col> \n                <Col span = {side}>\n                </Col>\n            </Row>\n                      \n            \n        </div>\n    )\n}\n\n\n\n\nexport default Home;","import React from 'react';\nimport {useDropzone} from 'react-dropzone';\nimport {List, Typography} from 'antd';\n\nimport Amplify, { Auth, Storage } from 'aws-amplify';\n\nimport awsconfig from '../../aws-exports';\nAmplify.configure(awsconfig);\n\nconst { Title } = Typography\n\nfunction uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);    \n    });\n  }\n\n\n\nconst Upload = () => {\n    let auth = Auth;\n\n\n    const onDrop = async(acceptedFiles) => {\n        let authcontext = await auth.currentAuthenticatedUser()\n        let username = authcontext.username\n        console.log(username)\n        let customer = authcontext.attributes['custom:customer']\n        acceptedFiles.forEach((file) => {\n          let uuid = uuidv4()\n          //let filename = username +  \"_\" + customer +  \"_\" + uuid + \".pdf\"\n          let filename = file.name\n          const reader = new FileReader()\n          reader.onabort = () => console.log('file reading was aborted')\n          reader.onerror = () => console.log('file reading has failed')\n          reader.readAsBinaryString(file);\n          reader.onload = () => {\n          \n            Storage.put(filename, file, {\n              level: 'public'\n              })\n              .then(() => {\n                  console.log(\"sucessfully saved file!\")\n              }).catch(err => {\n            console.log('error uploading files!', err)\n          }) \n    \n          }\n        })\n    }\n    const {getRootProps, getInputProps, acceptedFiles, rejectedFiles} = useDropzone({\n        onDrop, \n        accept: \".pdf\"})    \n\n    return <>\n      \n        <div style ={{padding: '20px', \n                      backgroundColor: 'white',\n                      marginTop: '60px'}}\n                      >\n\n        <div {...getRootProps()}>\n          <input {...getInputProps()} />\n          <Title level = {3}>Drag and drop notices </Title>\n          <List\n          size=\"small\"\n          header={<div>Accepted files:</div>}\n          bordered\n          dataSource={acceptedFiles}\n          renderItem={item => <List.Item> {item.path}</List.Item>}\n        />\n             <List\n          size=\"small\"\n          header={<div>Rejected files:</div>}\n          bordered\n          dataSource={rejectedFiles}\n          renderItem={item => <List.Item>  {item.path}</List.Item>}\n        />\n\n        </div>\n        \n        </div>\n    </>\n}   \n\nexport default Upload;","import { useEffect, useState } from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\n/**\n * Hook, that returns the current dimensions of an HTML element.\n * Doesn't play well with SVG.\n */\n\nconst useResizeObserver = ref => {\n  const [dimensions, setDimensions] = useState(null);\n  useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver(entries => {\n      entries.forEach(entry => {\n        setDimensions(entry.contentRect);\n      });\n    });\n    resizeObserver.observe(observeTarget);\n    return () => {\n      resizeObserver.unobserve(observeTarget);\n    };\n  }, [ref]);\n  return dimensions;\n};\n\nexport default useResizeObserver;","import React, { useRef, useEffect, useState } from \"react\";\nimport { select, geoPath, geoAlbersUsa, min, max, scaleLinear } from \"d3\";\nimport useResizeObserver from \"./useResizeObserver\";\nimport { useHistory } from \"react-router-dom\";\n\n/**\n * Component that renders a map the US.\n */\n\n\nfunction GeoChart({ data, property }) {\n  const history = useHistory();\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  const [selectedCountry, setSelectedCountry] = useState(null);\n\n  // will be called initially and on every data change\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    const minProp = min(data.features, feature => feature.properties[property]);\n    const maxProp = max(data.features, feature => feature.properties[property]);\n    const colorScale = scaleLinear()\n      .domain([minProp, maxProp])\n      .range([\"#c4dcf5\", \"#096dd9\"]);\n\n    // use resized dimensions\n    // but fall back to getBoundingClientRect, if no dimensions yet.\n    const { width, height } =\n      dimensions || wrapperRef.current.getBoundingClientRect();\n\n    // projects geo-coordinates on a 2D plane\n    const projection = geoAlbersUsa()\n      .fitSize([width, height], selectedCountry || data)\n      .precision(100);\n\n    // takes geojson data,\n    // transforms that into the d attribute of a path element\n    const pathGenerator = geoPath().projection(projection);\n    // render each country\n    svg\n      .selectAll(\".country\")\n      .data(data.features)\n      .join(\"path\")\n      .on(\"click\", feature => {\n        let url = '/state_info' + '?state=' + feature.properties.NAME.toString()\n        history.push(url);\n      })\n      .attr(\"class\", \"country\")\n      .on(\"mouseenter\", feature =>{\n        svg.selectAll(\".tooltip\")\n        .data([feature.properties.NAME])\n        .join(\"text\")\n        .attr(\"class\", \"tooltip\")\n        .text(feature.properties.NAME)\n        .attr(\"x\", 10)\n        .attr(\"y\", 10)\n        .transition()\n        .attr('opacity', 1);\n      })\n      .transition()\n      .attr(\"fill\", feature => colorScale(feature.properties[property]))\n      .attr(\"d\", feature => pathGenerator(feature));\n\n      \n  }, [data, dimensions, property, selectedCountry]);\n\n  return (\n    <div ref={wrapperRef} style={{ marginBottom: \"2rem\" }}>\n      <svg ref={svgRef} id=\"graph\"></svg>\n    </div>\n  );\n}\n\nexport default GeoChart;","import React, { useRef, useEffect, useState } from \"react\";\nimport { select, geoPath, geoAlbersUsa, min, max, scaleLinear, range } from \"d3\";\nimport useResizeObserver from \"./useResizeObserver\";\n\nconst Legend = ({ data, property }) => {\n    const wrapperRef = useRef();\n    const legendRef = useRef();\n    const dimensions = useResizeObserver(wrapperRef);\n\n    useEffect(() => {\n        const legend = select(legendRef.current)\n        const minProp = min(data.features, feature => feature.properties[property]);\n        const maxProp = max(data.features, feature => feature.properties[property]);\n        \n        const colorScale = scaleLinear()\n            .domain([minProp, maxProp])\n            .range([\"#edf0f3\", \"#096dd9\"]);\n        \n        const { width, height } =\n            dimensions || wrapperRef.current.getBoundingClientRect();\n\n\n        let diff = Math.abs(minProp - maxProp);\n        let stepsize = diff / 10; \n        let colorRange = range(minProp, maxProp, stepsize)\n        let colorLegend = []\n        let bandwith = []\n        for(let i = 0; i < colorRange.length; i ++ ) {\n            let num  = colorRange[i]\n            colorLegend.push(colorScale(num))\n            if (i % 2 == 0 || i == colorRange.length){\n                bandwith.push(Math.round(num).toString()) \n            } else {\n                bandwith.push(\"\")\n            }\n            \n        }\n\n      legend.append(\"g\")\n        .selectAll(\"rect\")\n        .data(colorLegend)\n        .enter()\n        .append(\"rect\")\n        .attr(\"fill\", function(d, i){ return colorLegend[i]; })\n        .attr(\"x\", function(d, i){ return (i*30); })\n        .attr(\"y\", 0)\n        .attr(\"width\", 30)\n        .attr(\"height\", 10);\n\n        legend.append(\"g\")\n             .selectAll(\"text\")\n             .data(bandwith)\n             .enter()\n             .append(\"text\")\n            .attr(\"font-size\", \"10px\")\n            .attr(\"font-family\", \"HelveticaNeue-Light, Helvetica, sans-serif\")\n            .attr(\"x\", function(d, i){ return (i*30); })\n            .attr(\"y\", 20)\n        .text(function(d){ return d; })\n  \n\n\n\n\n\n    }, [data, dimensions, property]);\n\n    return (\n        <div ref={wrapperRef} style={{ heigth: \"30px\" }}>\n            <svg ref={legendRef} id=\"legend\"></svg>\n        </div>\n\n    )\n\n\n\n    \n\n\n\n}\n\n\nexport default Legend;","const MergeData = ({geodata, groupedData}) => {\n  \n  for (let i = 0; i < groupedData.length; i ++){\n    var state = groupedData[i].state;\n    var documents = groupedData[i].nr_documents; \n    var amount = groupedData[i].total_amount;\n    var demo = groupedData[i].demo \n    for (let j = 0; j < geodata.features.length; j++){\n      var jsonState = geodata.features[j].properties.NAME;\n      if (state === jsonState) {\n        geodata.features[j].properties.documents = documents; \n        geodata.features[j].properties.amount = amount\n        geodata.features[j].properties.demo = demo; \n        break;\n      }\n    }\n    \n  }\n    return geodata\n  }\n\n\n  export default MergeData;","import React, {useState, useEffect, createContext} from 'react';\nimport {API} from 'aws-amplify';\nimport {groupBy} from 'lodash';\n\n\nconst AppContext = createContext();\n\n\nconst AppProvider = (props) => {\n\n    const [data, setData] = useState(null)\n\n    const fetchData = async () => {\n      let apiName = 'stream';\n      let path = '/application_context'\n      let myInit = { \n          headers: {}\n      } \n      const result = await API.get(apiName, path, myInit);\n      setData(result);\n    };\n  \n    useEffect(() => {\n      fetchData();\n    }, []);\n\n    const test = () => {\n      if (data === null) {\n          \n      } else {\n        const items = data['ledger']\n        var state_grouping = groupBy(items, function(n) {\n          return n.state;\n        });\n\n        const states = Object.keys(state_grouping)\n        const data_per_state = Object.values(state_grouping)\n        const arrSum = arr => arr.reduce((a,b) => a + b, 0);\n        const datalist = [];\n        states.map(state => {\n          const data_object = {}\n          let amount = [];\n          let state_data = state_grouping[state]\n          for (let i = 0; i < state_data.length; i++) {\n            amount.push(state_data[i].amount)\n          }\n          data_object.state = state;\n          data_object.total_amount = arrSum(amount)\n          data_object.nr_documents = state_data.length\n          let doctypes = groupBy(state_data, function(n) {\n            return n.document_type\n          })\n        \n          let types = Object.keys(doctypes)\n          let values = Object.values(doctypes)\n          let jsonObject = {}\n          for (let i = 0; i < types.length; i++){\n            jsonObject[types[i]] = values[i].length\n          }\n          data_object.distribution = jsonObject\n          datalist.push(data_object)\n        })\n        data.documents_grouped_state = datalist;\n        \n      }\n    }\n    test()\n\n\n    if (data  === null) {\n        return null \n      } \n    \n    \n\n\n    return (\n\n        <AppContext.Provider value={data}>\n                {props.children}\n        </AppContext.Provider>\n    )\n\n\n}\n\nexport {AppContext, AppProvider};","import React, {useState, useEffect, useContext} from 'react';\nimport { API } from 'aws-amplify';\nimport GeoChart from './GeoChart';\nimport Legend from './Legend';\nimport {Select, Typography, Spin} from 'antd';\nimport geodata from \"./gz_2010_us_040_00_500k.json\";\nimport \"./graph.css\";\nimport MergeData from './MergeData';\nimport { AppContext } from '../Context';\nimport {groupBy} from 'lodash';\nimport { group } from 'd3';\n\nconst { Option } = Select;\nconst { Title, Text } = Typography\n\nconst Backlog = () => {\n  const contextData = useContext(AppContext)\n  \n  const groupedData = contextData['documents_grouped_state']\n\n  const newData = contextData['demo']['Items']\n  \n  \n    var state_grouping = groupBy(newData, function(n) {\n      return n.state;\n    });\n\n  groupedData.map(state => {\n\n      if (state.state == \"Pennsylvania\") {\n        state['demo'] = state_grouping['Pennsylvania'].length\n      } else if ( state.state == \"Illinois\") {\n        state['demo'] = state_grouping[\"Illinois\"].length\n      } else if ( state.state == \"California\") {\n        state['demo'] = state_grouping[\"California\"].length\n      } else {\n        state['demo'] = 0\n      }\n  })\n\n  console.log(groupedData)\n  const data = MergeData({geodata, groupedData})\n  const [property, setProperty] = useState(\"demo\")\n\n  let legendText = \"Number of notices in backlog\"\n\n  \n\n  return (\n      <>\n      <div className = \"Graph\" style = {{paddingTop : '20px'}}>\n      <Title level = {3}>Geographic overview of backlog</Title>\n      <Text>\n        {legendText}\n      </Text>\n      <Legend data={data} property={property} />\n      <GeoChart data={data} property={property} />\n      </div>\n\n\n\n    </>\n  );\n}\n\n\n\n\nexport default Backlog;","import React, {useState, useContext, useEffect} from 'react';\nimport { AppContext } from '../Context';\nimport { map, without, filter} from 'lodash';\nimport { Storage } from 'aws-amplify'\nimport { Form, Input, Button, Select, message, Typography, AutoComplete, Row, Col, Checkbox, Progress, Result} from 'antd';\nimport styled from 'styled-components';\nimport { CheckOutlined, RollbackOutlined} from '@ant-design/icons';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n\nconst formItemLayout = {\n    labelCol: {\n        sm: { span: 8 },\n    }, \n  \n};\n\n\nfunction isString(x) {\n    return Object.prototype.toString.call(x) === \"[object String]\"\n  }\n\n\nconst { TextArea } = Input;\nconst { Title } = Typography; \nconst { Option } = Select;\nconst AppLayout = styled.div`\n  display: grid;\n  padding: 2em;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1000px;\n` \n\n\n\nconst Confirmation = () => {\n    \n    const data = useContext(AppContext)\n    const docData = data['demo']['Items']\n    const entities_list = data['entities_list']\n    const [count, setCount] = useState(0)\n    const [image, setImage] = useState(null)\n\n    const doc_unique_ids = []\n    docData.map(notice => {\n        doc_unique_ids.push(notice.unique_id)\n    })\n     \n    const fetchData = () => {\n        Storage.get(doc_unique_ids[count] + '.jpeg', {level: 'public'})\n        .then(data => setImage(data))\n        .catch(err => console.log(err))\n        }\n    \n    useEffect(() => {\n        fetchData();\n      }, [count]);\n    \n    \n    \n    const data_elements = [\"TAX YEAR\", \"NOTICE DATE\", \"AMOUNT\", \"NOTICE NUMBER\",  \"DUE DATE\"]\n\n    const initialValues = docData[count]\n    \n    \n    \n    let keys = Object.keys(initialValues)\n    let values = Object.values(initialValues)\n    const initialFormValues = {}\n    \n    keys.map(key => {\n        let item = initialValues[key]\n        if ( isString(item) ) {\n            initialFormValues[key]  = item\n        } else {\n            initialFormValues[key] = item[0]\n        }\n        \n    })\n\n    \n    const [form] = Form.useForm();\n    const document_types = [\"Announcement\", \"Refund\", \"Payment\"]\n    \n    const document_type_json = []\n    document_types.map(type => {\n        document_type_json.push({'value' : type})\n    })\n\n    const entities_list_json = []\n    entities_list.map(entity => {\n        entities_list_json.push({'value': entity})\n    })\n    \n\n    const states = [\"Alabama\",\"Alaska\",\"Arkansas\",\"Arizona\",\"California\",\"Colorado\",\"Connecticut\",\"Delaware\",\"Florida\",\"Georgia\",\"Hawaii\",\"Iowa\",\"Idaho\",\"Illinois\",\"Indiana\",\"Kansas\",\"Kentucky\",\"Louisiana\",\"Maine\",\"Maryland\",\"Massachusetts\",\"Michigan\",\"Minnesota\",\"Missouri\",\"Mississippi\",\"Montana\",\"North Carolina\",\"North Dakota\",\"Nebraska\",\"New Hampshire\",\"New Jersey\",\"New Mexico\",\"Nevada\",\"New York\",\"Ohio\",\"Oklahoma\",\"Oregon\",\"Pennsylvania\",\"Rhode Island\",\"South Carolina\",\"South Dakota\",\"Tennessee\",\"Texas\",\"Utah\",\"Virginia\",\"Vermont\",\"Washington\",\"Wisconsin\",\"West Virginia\",\"Wyoming\"]\n    let statesjson = []\n    states.map(state => {\n        statesjson.push({'value' : state})\n\n    })\n\n\n    let announcement_types = [\"Apportionment issues\", \"Information request\", \"Audit\", \"Net operating losses\"]\n    let announcement_types_json = []\n    announcement_types.map(type => {\n        announcement_types_json.push({'value' : type})\n\n    })\n \n    \n\n\n    let form_list = [\n        <Form.Item\n            name = \"state\"\n            label = \"STATE\"\n            key =\"state\"\n        >\n            <AutoComplete\n                options = {statesjson}\n                filterOption={(inputValue, option) =>\n                    option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n            }>\n                <Input size = \"large\"/>\n            </AutoComplete>\n        </Form.Item>,\n       \n          <Form.Item\n          name = \"document_type\"\n          label = \"NOTICE CATEGORY\"\n          key = \"document_type\"       \n          >\n              <AutoComplete\n              options = {document_type_json}\n              >\n                  <Input size = \"large\"/>\n              </AutoComplete>\n            </Form.Item>,\n            <Form.Item\n                name = \"label\"\n                label = \"NOTICE TYPE\"\n                key = \"label\"\n            >   \n                <Input size = \"large\"/>\n            </Form.Item>]\n\n\n\n\nif(keys.includes(\"announcement_type\")) {\n    let announcement_type_item = \n        <Form.Item\n            label = \"ANNOUNCEMENT TYPE\"\n            name = \"announcement_type\"\n            key = \"announcement_type\"\n        >\n\n        <AutoComplete\n            options = {announcement_types_json}>\n            <Input size = \"large\"/>\n        </AutoComplete>\n    \n        \n    </Form.Item>\nform_list.push(announcement_type_item)   \n\n\n   }\n\n\n\n\n\n  let entity_field =      <Form.Item\n             name = \"entity\"\n             label = \"ENTITY\"\n             key = \"entity_name\"\n             >   \n             <AutoComplete\n                 options = {entities_list_json}\n                 >         \n                 <Input size = \"large\"/>\n                 </AutoComplete>\n             </Form.Item>\n    \n    form_list.push(entity_field)   \n\n\n  let id_field =      <Form.Item\n  name = \"ID\"\n  label = \"FEIN / ACCOUNT ID\"\n  key = \"ID\"\n  >   \n           \n      <Input size = \"large\"/>\n  \n  </Form.Item>\n\nform_list.push(id_field)   \n\n    \n  \n\n    keys.map(field => {\n        if (data_elements.includes(field)) {\n    \n            let defaultvalue = initialValues[field][0]\n            let optionvalues = []\n            initialValues[field].map(option => {\n                optionvalues.push({'value' : option})\n            })\n\n            let formitem = <Form.Item\n                            label = {field}\n                            name = {field}\n                            key = {field}\n                            >\n                                 <AutoComplete\n                                    options = {optionvalues}\n                                 >\n                                <Input size = \"large\"/>\n                                </AutoComplete>\n                            </Form.Item>\n            form_list.push(formitem)   \n        } \n    })\n        let form_list_tail =  <Form.Item\n                                name=\"remarks\"\n                                label=\"REMARKS\"\n                                key=\"remarks\">\n                            <TextArea\n                                placeholder=\"Additional remarks\"\n                                autoSize={{ minRows: 2, maxRows: 6 }}\n                            />\n                            </Form.Item>         \n        form_list.push(form_list_tail)\n    const progress_percentage = Math.round((count/(docData.length-1))*100)\n\n    const showFeedback = () => {\n        message.info('Notice has been confirmed');\n        setCount(count + 1)\n        form.resetFields();\n    }\n\n    const showNegative = () => {\n        message.info('Notice will be manually reviewed');\n        setCount(count + 1)\n        form.resetFields();\n    }\n    \n    if (count == 13) {\n        return <>\n            <Result\n                status=\"success\"\n                title=\"The backlog is empty!\"\n                \n                    extra={\n      <Button type=\"primary\" key=\"console\">\n            <Link to ='/management' >Go to Notice management</Link>\n      </Button>}\n  />\n\n        </>\n\n\n    }\n    return <>\n        <AppLayout>\n            <div>\n            <img src = {image} width = '700px' />\n\n            </div>\n            <div className = \"rightHandside\">\n                <div style = {{padding: '1em'}}>\n                    <div className =\"actualTitle\" style ={{marginBottom: '1em'}}>     \n                    <Row>\n                        <Col sm={8}>\n                        </Col>\n                        <Col>\n                        <Title level = {4}> \n                            Classification\n                        </Title>\n                        \n                        </Col>\n                    </Row>    \n\n                        <Progress percent={progress_percentage} status=\"active\" />\n                    </div>\n                </div>\n                    <Form\n                        {...formItemLayout}\n                        layout = \"horizontal\"\n                        form = {form}\n                        initialValues={initialFormValues}\n                        onFinish = {showFeedback}\n                    >\n                        {form_list.map(field => {\n                            return (\n                                field\n                            )\n                        })\n                        }\n                        <Row>\n                            <Col sm={8}>\n                            </Col>\n                            <Col>\n                            <Button type = \"primary\" \n                                    htmlType = \"submit\"\n                                    style = {{float:'center'}}\n                                    >\n                                <CheckOutlined />\n                                Confirm classification\n                            </Button>\n                            </Col>\n                        </Row> \n                    </Form>\n            </div>\n        </AppLayout>\n\n    </> \n}\n\n\nexport default Confirmation;","import React from 'react';\nimport ReactExport from \"react-data-export\";\nimport { Button, Select, Divider, Typography, Table} from 'antd';\nimport { FileExcelOutlined } from '@ant-design/icons';\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\n\n\n\nconst Export = (data) => {\n\n      const columns_new = [\n        { title: \"Tax Authority\", width: {wch: 20}},\n        { title: \"Tax Year\", width: {wch: 10}},\n        { title: \"Entity name\", width: {wch: 50}},\n        { title: \"Document type\", width: {wch: 20} },\n        { title: \"Announcement type\", width: {wch: 20} },\n        { title: \"Status\", width: {wch: 20}},\n        { title: \"Dollar value\", width: {wch: 10}},\n        { title: \"Notice date\", width: {wch: 15}},\n        { title: \"Payment due\", width: {wch: 15}}\n        \n      ]\n    const ordered_documents = []\n    data.map(item => {\n        let ordered_item = {\n            'state': item.state,\n            'tax_year': item.tax_year,\n            'entity_name': item.entity_name,\n            'document_type': item.document_type,\n            'announcement_type' : item.announcement_type,\n            'status': item.status,\n            'amount': item.amount, \n            'notice_date': item.notice_date,\n            'payment_due': item.payment_due\n        }\n        let row = []\n        const values = Object.values(ordered_item)\n        for (let i = 0; i < values.length; i ++ ){\n            let element = {value: values[i]}\n            row.push(element)\n        }\n        ordered_documents.push(row)\n    })\n\n\n   \n\n    const documentsExport = [{\n        columns: columns_new,\n        data: ordered_documents\n    }];\n\n    \n    return <>\n\n            <div>\n            <div className = \"block\" style = {{display: 'block', paddingBottom: \"20px\"}}>\n            Number of documents in selection: {data.length}\n            </div>\n                <ExcelFile  filename =\"StreamDownload\" \n                    element={<Button type = \"primary\">\n                            <FileExcelOutlined /> Export to Excel </Button>}>\n                    <ExcelSheet dataSet={documentsExport} name=\"Organization\"/>\n                </ExcelFile>\n            </div>\n    \n\n    \n\n\n    </>\n    \n}\n\nexport default Export; ","import React, {useContext, useState} from 'react'\nimport { Button, Select, Divider, Typography, Table, Checkbox} from 'antd';\nimport { AppContext } from '../Context';\nimport styled from 'styled-components';\nimport moment from 'moment'\nimport { BrowserRouter as Router, Route, Link, useHistory} from \"react-router-dom\";\nimport { filter } from 'lodash'\nimport ReactExport from \"react-data-export\";\n\n\nimport Export from './Export'\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\n\nconst AppLayout = styled.div`\n  display: grid;\n  padding: 2em;\n  grid-template-columns: 1fr 4fr;\n  grid-template-rows: 1000px;\n`\n\nconst { Option } = Select;\nconst { Title } = Typography;\n\nconst states = [\"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\", \"Delaware\", \"Florida\", \"Georgia\", \"Hawaii\", \"Idaho\", \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\", \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\", \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\", \"North Carolina\", \"North Dakota\", \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Rhode Island\", \"South Carolina\", \"South Dakota\", \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\", \"Virginia\", \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"]\nconst years = [2015, 2016, 2017, 2018, 2019, 2020]\n\n\nconst columns = [\n    {\n        title: 'STATE',\n        dataIndex: 'state',\n        key: 'state'\n      },\n    {\n      title: 'ENTITY NAME',\n      dataIndex: 'entity_name',\n      key: 'entity'\n    },\n    {\n        title: 'TAX YEAR',\n        dataIndex: 'tax_year',\n        key: 'tax_year'\n      },\n    {\n        title: 'NOTICE DATE',\n        dataIndex: 'notice_date',\n        sorter: (a, b) => moment(a.notice_date).unix() - moment(b.notice_date).unix()\n      },\n      {\n        title: 'AMOUNT USD',\n        dataIndex: 'amount',\n        key: 'amount',\n        sorter: (a, b) => a.amount - b.amount,\n      },\n      {\n        title: 'NOTICE TYPE',\n        dataIndex: 'document_type',\n        key: 'notice_type'\n      },\n      {\n        title: 'ANNOUNCEMENT TYPE',\n        dataIndex: 'announcement_type',\n        key: 'announcement_type'\n      },\n      {\n        title: 'STATUS',\n        dataIndex: 'status',\n        key: 'status'\n      },\n\n    {\n        title: 'ACTION',\n        key: 'action',\n        render: (text, record) => {\n\n                if (record.document_type == \"Payment\") {\n                    return <>\n                    <span>  \n                        <Link >\n                            Initiate payment                       \n                            </Link>\n                    </span >\n                </>\n            } else if (record.document_type == \"Refund\") {\n                return <>\n            <span>  \n                <Link >\n                    Create accounting record                     \n                    </Link>\n            </span >\n        </>\n            } \n        }\n                 \n        \n       }\n  ]\n  \n\n\nconst NoticeManagement = () => {\n    let history = useHistory();\n\n    const data = useContext(AppContext)\n    const documents = data['ledger']\n    const entities = data['entities_list']\n\n    const document_types = [\"Refund\", \"Payment\", \"Announcement\"]\n\n    const [selectedStates, setSelectedStates] = useState(states)\n    const [selectedEntities, setSelectedEntities] = useState(entities)\n    const [selectedYears, setSelectedYears] = useState(years)\n    const [selectedDocumentTypes, setSelectedDocumentTypes] = useState(document_types)\n\n    const handlestateChange = (event) => {\n        if (event.length == 0) {\n            setSelectedStates(states)\n        } else {\n            setSelectedStates(event)\n        }\n    }\n\n    const handleentityChange = (event) => {\n        if (event.length == 0) {\n            setSelectedEntities(entities)\n        } else {\n            setSelectedEntities(event)\n        }\n    }\n\n    const handleyearChange = (event) => {\n        let event_numeric = event.map(x => +x)\n        if (event_numeric.length == 0) {\n            setSelectedYears(years)\n        } else {\n            setSelectedYears(event_numeric)\n        }\n    }\n\n    const handledocumenttypeChange = (event) => {\n        let event_numeric = event.map(x => +x)\n        if (event_numeric.length == 0) {\n            setSelectedDocumentTypes(document_types)\n        } else {\n            setSelectedDocumentTypes(event)\n        }\n    }\n \n\n    const documents_multiple = []\n    documents.map(item => {\n        if(selectedYears.includes(item.tax_year) && \n           selectedEntities.includes(item.entity_name) && \n           selectedStates.includes(item.state) &&\n           selectedDocumentTypes.includes(item.document_type)\n           ) {\n            if (item.third_party == true ) {\n                item['thirdparty'] = \"Yes\"\n            } else {\n                item['thirdparty'] = \"No\"\n            }\n\n            documents_multiple.push(item)\n        }\n    })\n    \n\n    const documents_exported = documents_multiple;\n\n\n\n    const documenttypechildren = [];\n    document_types.map(type =>{\n            documenttypechildren.push(<Option key={type}>{type}</Option>)\n    })\n    \n    const statechildren = [];\n    states.map(state =>{\n            statechildren.push(<Option key={state}>{state}</Option>)\n    })\n\n    const entitychildren = [];\n    entities.map(entity =>{\n            entitychildren.push(<Option key={entity}>{entity}</Option>)\n    })\n\n    const yearschildren = []\n    years.map(year =>{\n        yearschildren.push(<Option key={year}>{year}</Option>)\n    })\n\n    const handleRowClick = (record) => {\n        console.log(record.key)\n    }\n\n    return <>\n        <AppLayout>\n        <div className=\"selectionpane\" style = {{paddingRight: '5px'}}>\n        <Title level = {2}> Selection criteria </Title>\n        <div className = \"block\" style = {{display: 'block', paddingBottom: \"20px\"}}>\n\n        <Title level = {4}> Notice types</Title>\n            <Select\n                    mode=\"multiple\"\n                    placeholder=\"All notice types selected\"\n                    onChange={handledocumenttypeChange}\n                    style={{ width: '80%' }}\n                >\n                    {documenttypechildren}\n            </Select>\n\n        <Title level = {4}> States</Title>\n            <Select\n                    mode=\"multiple\"\n                    placeholder=\"All states selected\"\n                    onChange={handlestateChange}\n                    style={{ width: '80%' }}\n                >\n                    {statechildren}\n            </Select>\n\n            <Title level = {4}> Entities</Title>\n            <Select\n                    mode=\"multiple\"\n                    placeholder=\"All entities selected\"\n                    onChange={handleentityChange}\n                    style={{ width: '80%' }}\n                >\n                    {entitychildren}\n            </Select>\n\n            <Title level = {4}> Years </Title>\n            <Select\n                    mode=\"multiple\"\n                    placeholder=\"All years selected\"\n                    onChange= {handleyearChange}\n                    style={{ width: '80%' }}\n                >\n                    {yearschildren}\n            </Select>\n\n        \n                \n            </div>\n\n            {Export(documents_exported)}\n            </div>\n\n\n\n            <div className = \"table\">\n\n            <Table   \n                dataSource={documents_exported} \n                columns={columns} \n                onRow={(record) => ({\n                    onClick: () => { \n                        history.push(\"/document/\" + record.unique_id) \n                    }\n                })}\n                />\n\n\n            </div>\n\n        </AppLayout>\n    </>\n}\n\n\nexport default NoticeManagement;","import React, {useState, useContext} from 'react';\nimport { AppContext } from '../Context';\nimport { map, without, filter} from 'lodash';\nimport { Form, Input, Button, Select, message, Typography, AutoComplete, Row, Col, Checkbox} from 'antd';\nimport styled from 'styled-components';\nimport { SolutionOutlined, RollbackOutlined} from '@ant-design/icons';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nconst formItemLayout = {\n    labelCol: {\n        sm: { span: 8 },\n    }\n};\n\n\nconst titleLayout = {\n    labelCol: {\n        sm: { span: 8 },\n    }\n};\n\n\nconst { Title } = Typography; \nconst { TextArea } = Input;\nconst { Option } = Select;\n\n\n\nconst AppLayout = styled.div`\n  display: grid;\n  padding: 2em;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1000px;\n`\n\n\n\nconst Document = (props) => {\n    const unique_id = props.location.pathname.split(\"/\")[2]\n    //const unique_id = props.location.param\n\n    console.log(unique_id)\n    const data = useContext(AppContext)\n    const docData = data['ledger']\n    console.log(docData)\n    const entities_list = data['entities_list']\n    const temp_id = \"00065925-46d0-4e2d-a39d-11cc72e7e728\"\n\n    const specific_doc = filter(docData, function(o){\n        return o.unique_id == unique_id;\n    })\n\n\n    console.log(specific_doc)\n    let keys = Object.keys(specific_doc[0])\n    let values = Object.values(specific_doc[0])\n\n\n    const [form] = Form.useForm();\n    const initialValues = specific_doc[0]\n        \n    const document_types = [\"Announcement\", \"Refund\", \"Payment\"]\n    const document_type_json = []\n    document_types.map(type => {\n        document_type_json.push({'value' : type})\n    })\n\n    const entities_list_json = []\n    entities_list.map(entity => {\n        entities_list_json.push({'value': entity})\n    })\n\n\n    const states = [\"Alabama\",\"Alaska\",\"Arkansas\",\"Arizona\",\"California\",\"Colorado\",\"Connecticut\",\"Delaware\",\"Florida\",\"Georgia\",\"Hawaii\",\"Iowa\",\"Idaho\",\"Illinois\",\"Indiana\",\"Kansas\",\"Kentucky\",\"Louisiana\",\"Maine\",\"Maryland\",\"Massachusetts\",\"Michigan\",\"Minnesota\",\"Missouri\",\"Mississippi\",\"Montana\",\"North Carolina\",\"North Dakota\",\"Nebraska\",\"New Hampshire\",\"New Jersey\",\"New Mexico\",\"Nevada\",\"New York\",\"Ohio\",\"Oklahoma\",\"Oregon\",\"Pennsylvania\",\"Rhode Island\",\"South Carolina\",\"South Dakota\",\"Tennessee\",\"Texas\",\"Utah\",\"Virginia\",\"Vermont\",\"Washington\",\"Wisconsin\",\"West Virginia\",\"Wyoming\"]\n    let statesjson = []\n    states.map(state => {\n        statesjson.push({'value' : state})\n\n    })\n\n\n    let form_list = [\n        <Form.Item\n        name = \"state\"\n        label = \"State\"\n        key =\"state\"\n        >\n                    <AutoComplete\n                            options = {statesjson}\n                            filterOption={(inputValue, option) =>\n                                option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n                              }>\n        <Input size = \"large\"/>\n        </AutoComplete>\n        </Form.Item>,\n           <Form.Item\n           name = \"document_type\"\n           label = \"NOTICE TYPE\"\n           key = \"document_type\"\n                           \n           >\n               <AutoComplete\n               options = {document_type_json}\n               >\n                   <Input size = \"large\"/>\n               </AutoComplete>\n               \n       </Form.Item>]\n\nlet announcement_types = [\"Apportionment issues\", \"Information request\", \"Audit\", \"Net operating losses\"]\n\nconst announcement_list_json = []\nannouncement_types.map(type => {\n    announcement_list_json.push({'value': type})\n})\n\n\nif (specific_doc[0].document_type === \"Announcement\" ) {\n\n    let announce_form = <Form.Item\n           name = \"announcement_type\"\n           label = \"ANNOUNCEMENT TYPE\"\n           key = \"announcement_type\"\n           \n           >   \n               <AutoComplete\n                        options = {announcement_list_json}\n                   >         \n                   <Input size = \"large\"/>\n                   </AutoComplete>\n       </Form.Item>\n\n\n    form_list.push(announce_form)\n\n    \n    \n}\n\n\n\n\nlet form_tail = [\n            <Form.Item\n           name = \"entity_name\"\n           label = \"ENTITY\"\n           key = \"entity\"\n           \n           >   \n               <AutoComplete\n                   options = {entities_list_json}\n                   >         \n                   <Input size = \"large\"/>\n                   </AutoComplete>\n       </Form.Item>,\n\n     \n        <Form.Item\n            name = \"amount\"\n            \n            label = \"AMOUNT USD\"\n            key = \"amount\">\n                \n            <Input size = \"large\"/>\n        </Form.Item>,\n        <Form.Item\n            name = \"notice_date\"\n            label =\"NOTICE DATE\"\n            \n            key = \"notice_date\">\n                <Input size = 'large'/>\n        </Form.Item>,\n\n        <Form.Item\n            name = \"status\"\n            label =\"STATUS\"\n            key = \"\">\n                <Select defaultValue = {initialValues.status} size = \"large\">\n                    <Option value=\"in_progress\">In Progress</Option>\n                    <Option value=\"filed\">Filed</Option>\n                    <Option value=\"complete\">Complete</Option>\n                    <Option value=\"extension\">Extension</Option>\n                    <Option value=\"rxed\">Notice Rx'd</Option>\n\n                </Select>\n        </Form.Item>,\n          <Form.Item\n          name=\"remarks\"\n          label=\"REMARKS\"\n          key=\"remarks\">\n\n                  <TextArea\n                      placeholder=\"Additional remarks\"\n                      autoSize={{ minRows: 2, maxRows: 6 }}\n                  />\n          \n      </Form.Item>\n         \n\n    ]\n\n    form_list.push(form_tail)\n\n    const showFeedback = () => {\n        message.info('Notice has been updated');\n    }\n    return <>\n    <AppLayout>\n    <div>\n    <img \n      src={encodeURI(\"https://jpeg-bucket-stream.s3-eu-west-1.amazonaws.com/Maarten_QA_16f5b202-c619-462d-9d73-90543a307920.jpeg\")}\n      alt=\"new\"\n      width={595}\n    />\n            </div>\n\n            <div className = \"rightHandside\">\n                <div style = {{padding: '1em'}}>\n            \n                        <div className =\"actualTitle\" style ={titleLayout}>    \n                        <Row>\n                                    <Col sm={8}>\n                                    </Col>\n                                    <Col>\n                                    <Title level = {4}> \n                                        Classification\n                                    </Title>\n                                </Col>\n                        </Row>     \n                            \n                            \n                          \n                    </div>\n                <Form\n                {...formItemLayout}\n                layout = \"horizontal\"\n                initialValues={initialValues}\n                onFinish = {showFeedback}\n                >\n                {form_list.map(field => {\n                    return (\n                        field\n                    )\n                })\n                }\n                <Row>\n                                    <Col sm={8}>\n                                    </Col>\n                                    <Col>\n                                         <Button type = \"primary\" \n                                                    htmlType = \"submit\"\n                                                    style = {{float:'center'}}\n                                                    >\n                                                <SolutionOutlined />\n                                                Update classification\n                                            </Button>\n                                            <Button style = {{float:'right'}}>\n                                                <RollbackOutlined />\n                                                <Link to=\"/management\">\n                                                Return to document system\n                                                </Link>\n                                                </Button>\n\n\n                                    </Col>\n                </Row> \n\n\n                \n\n           \n          \n                </Form>\n                </div>\n\n\n                <div style = {{paddingLeft: '50px', marginTop:'1em'}}>\n         \n\n            \n               </div>\n\n            </div>\n\n\n    </AppLayout>\n        \n\n    </>\n}\n\nexport default Document;","import React, { PureComponent } from 'react';\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\nimport { Typography } from 'antd';\nimport { line, map } from 'd3';\n\n\n\n\nconst Graphed = ({data, variable}) => {\n\n    \n\n    const colors = ['#1890ff', \"#389e0d\", \"#d4380d\"]\n    const types = [\"refunds\", \"payments\", \"announcements\"] \n    \n    const typelist = [];\n    for (let i = 0; i < types.length; i++){\n        let line = <Line type=\"monotone\" dataKey={types[i]} stroke={colors[i]} strokeWidth={2} />\n        typelist.push(line)\n    }\n\n    const amount_list = []\n\n    \n    const amount = [<Line type=\"monotone\" dataKey={\"amount_refund\"} stroke={colors[0]} strokeWidth={2} />,\n                    <Line type=\"monotone\" dataKey={\"amount_payment\"} stroke={colors[1]} strokeWidth={2} />]\n\n    let unit = variable === \"dollar\" ? \"$\" : \"\"\n   \n    return <>\n    <Typography.Title level = {2} >\n          Temporal view\n        </Typography.Title>\n        <Typography.Paragraph>\n        Cumulative {variable === \"dollar\"? \"dollar value\" : \"number of notices\"} per month\n        </Typography.Paragraph>\n    \n\n      <LineChart\n        width={800}\n        height={400}\n        data={data}\n        margin={{\n          top: 5, right: 30, left: 20, bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"month\" />\n        <YAxis unit={unit}/>\n        <Tooltip />\n        <Legend />\n        {variable === \"dollar\" ? amount : typelist}\n\n      </LineChart>\n    </>;\n  \n}\n\nexport default Graphed;","import React, { PureComponent } from 'react';\nimport {\n  BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ComposedChart,\n} from 'recharts';\n\nimport {groupBy, filter} from 'lodash';\nimport { Typography } from 'antd';\nimport styled from 'styled-components';\nimport './style.css'\n\n\nconst AppLayout = styled.div`\n  display: grid;\n  padding: 2em;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1000px;\n` \n\n\n\n\nconst BarEntities = (props) => {\n    \n      \n        var grouped_entities = groupBy(props.documents, function(n) {\n          return n.entity_name;\n        })\n\n        console.log(grouped_entities)\n\n        let entities = Object.keys(grouped_entities);\n        \n      \n        const arrSum = arr => arr.reduce((a,b) => a + b, 0);\n        const list_of_objects = [];\n        for(let i = 0; i < entities.length; i++) {\n            const data_object = {};\n            let index = entities[i];\n            let entity_docs = grouped_entities[index];\n            data_object.entity_name = index\n            let amount_refund = []\n            let amount_payment = []\n            for (let i = 0; i < entity_docs.length; i++) {\n                if (entity_docs[i].document_type == \"Payment\") {\n                    amount_payment.push(entity_docs[i].amount)\n                    \n                  } else if (entity_docs[i].document_type == \"Refund\") { \n                    amount_refund.push(Math.round(entity_docs[i].amount))\n                  }\n            }\n\n            data_object.amount_payment = arrSum(amount_payment)\n            data_object.amount_refund = arrSum(amount_refund)\n            data_object.amount_total = data_object.amount_refund + data_object.amount_payment\n            data_object.nr_payments = amount_payment.length\n            data_object.nr_refunds = amount_refund.length\n            data_object.nr_announcements = entity_docs.length - amount_payment.length - amount_refund.length\n\n\n\n\n            list_of_objects.push(data_object)\n\n\n\n\n        }\n        console.log(list_of_objects)\n\n        const sorted_list = list_of_objects.sort((a, b) => (b.amount_payment - a.amount_payment))\n\n\n        const bar_list = []\n        const reduced_data = []\n        for (let i = 0; i < 8; i++) {\n            reduced_data.push(sorted_list[i])\n            let barelement = <Bar dataKey=\"amount_refund\" fill=\"#8884d8\" />;\n            bar_list.push(barelement)\n        }\n\n        \n        let unit = props.variable === \"dollar\" ? \"$\" : \"\"\n        let label = props.variable === \"dollar\" ? \"Dollar value\" : \"Nr. of notices\"\n    return <>\n\n<Typography.Title level = {2} >\n          Entity-level view\n        </Typography.Title>\n        <Typography.Paragraph>\n          Cumulative {props.variable === \"dollar\"? \"dollar value\" : \"number of notices\"} for 8 entities\n        </Typography.Paragraph>\n    <AppLayout>\n      \n      \n      <div>\n      <Typography.Title level = {4} >\n          Payments\n        </Typography.Title>\n        <ComposedChart\n        layout = 'vertical'\n        width={450}\n        height={700}\n        data = {reduced_data}\n        margin={{\n          top: 5, right: 30, left: 50, bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis type=\"number\" unit = {unit} label = {label} />\n        <YAxis dataKey=\"entity_name\" type=\"category\"/>\n        <Bar dataKey= {props.variable == \"dollar\" ? \"amount_payment\" : \"nr_payments\"} fill=\"#91d5ff\" />\n        <Tooltip />\n      </ComposedChart>\n      </div>\n\n      <div>\n        <Typography.Title level = {4} >\n          Refunds\n        </Typography.Title>\n        <ComposedChart\n        layout = 'vertical'\n        width={450}\n        height={700}\n        data = {reduced_data}\n        margin={{\n          top: 5, right: 30, left: 50, bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis type=\"number\" unit = {unit} label = {label} width = {400 } />\n        <YAxis dataKey=\"entity_name\" type=\"category\"/>\n        <Bar dataKey={props.variable == \"dollar\" ? \"amount_refund\" : \"nr_refunds\"}  fill=\"#002766\" />\n        <Tooltip />\n      </ComposedChart>\n      </div>\n\n      \n\n      </AppLayout>\n    </>\n}\n\n\nexport default BarEntities;","import React, {useState, useEffect, useContext} from 'react';\nimport { Typography } from 'antd'\nimport MergeData from '../Backlog/MergeData';\nimport GeoChart from '../Backlog/GeoChart';\nimport Legend from '../Backlog/Legend';\nimport { AppContext } from '../Context';\nimport geodata from \"../Backlog/gz_2010_us_040_00_500k.json\";\nconst StateLevel = (props) => {\n    const contextData = useContext(AppContext)\n    const groupedData = contextData['documents_grouped_state']\n    console.log(groupedData)\n    const data = MergeData({geodata, groupedData})\n\n    console.log(data)\n    \n    let property = props.variable === \"dollar\" ? \"amount\" : \"documents\"\n\n\n\n    return <>\n        <Typography.Title level = {2} >\n          State-level view\n        </Typography.Title>\n        <Typography.Paragraph>\n          Total {props.variable === \"dollar\"? \"dollar value\" : \"number of notices\"} across states\n        </Typography.Paragraph>\n\n        <Legend data={data} property={property} />\n        <GeoChart data={data} property={property} />\n\n\n    \n\n\n    </>\n\n    \n}\n\nexport default StateLevel","import {groupBy, filter} from 'lodash';\nimport moment from 'moment';\n\nconst group_month = (documents) => {\n    var month_grouping = groupBy(documents, function(n) {\n      return n.month;\n    });\n\n\n let months = Object.keys(month_grouping);\n\n const arrSum = arr => arr.reduce((a,b) => a + b, 0);\n\n  const list_of_objects = [];\n  for(let i =0; i< months.length; i++){\n      const data_object = {}\n      let index = months[i]\n      let month_docs = month_grouping[index];\n      let amount_payment = []\n      let amount_refund = []\n      for (let i = 0; i < month_docs.length; i++) {\n        if (month_docs[i].document_type == \"Payment\") {\n          amount_payment.push(month_docs[i].amount)\n          \n        } else if (month_docs[i].document_type == \"Refund\") { \n          amount_refund.push(Math.round(month_docs[i].amount/0.75))\n        }\n        \n      }\n\n      data_object.amount_payment = arrSum(amount_payment)\n      data_object.amount_refund = arrSum(amount_refund)\n\n\n      var groups = groupBy(month_docs, function(n){\n            return n.document_type        \n      })\n      data_object.month = index \n      data_object.refunds = groups['Refund'].length\n      data_object.payments = groups['Payment'].length\n      data_object.announcements = groups['Announcement'].length\n      data_object.epoch = moment(index, \"YYYY/MM\").valueOf()\n      list_of_objects.push(data_object)\n  }\n  \n  list_of_objects.sort(function(a, b) {\n    return a.epoch - b.epoch;\n  })\n return list_of_objects\n\n}\n\nexport default group_month","import React, {useContext, useState} from 'react';\nimport { AppContext } from '../Context';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\n\nimport { Select, Typography, Spin, DatePicker, Row, Col,  Radio, Input, Button } from 'antd';\n\nimport { FilePptOutlined, FileExcelOutlined} from '@ant-design/icons'\n\n\nimport LineChart  from './LineChart'\nimport BarEntities from './BarEntities'\nimport StateLevel from './StateLevel'\n\nimport group_month from './utils'\n\nconst {Option} = Select;\nconst { MonthPicker } = DatePicker;\nconst {Title} = Typography;\n\nconst AppLayout = styled.div`\n  display: grid;\n  padding: 1em;\n  grid-template-columns: 1fr 4fr;\n  grid-template-rows: 1000px;\n`\n\nconst Dashboard = () => {\n    const contextData = useContext(AppContext)\n    const documents = contextData['ledger'];\n    const entities = contextData['entities_list']\n    \n    const [selectedEntities, setSelectedEntities] = useState(entities)\n\n    const [variable, setVariable] = useState(\"notices\")\n    const dateFormat = 'YYYY-MM-DD';\n    const startStr = moment('2019-01-01', dateFormat) \n    const [startDate, setstartDate] = useState(startStr)\n    \n    const now = moment().toDate()\n    const endStr = moment(now, dateFormat) \n    const [endDate, setendDate] = useState(endStr)\n\n    const [radiostate, setRadiostate] = useState(\"time\")\n\n      \n\n    const handleentityChange = (event) => {\n      if (event.length == 0) {\n          setSelectedEntities(entities)\n      } else {\n          setSelectedEntities(event)\n      }\n  }\n\n  function handlestartChange(date, dateString) {\n    setstartDate(date)\n  }\n\n  function handleendChange(date, dateString) {\n    setendDate(date)\n}\n\n    let dateFormatown = \"MM/DD/YYYY\"\n    \n\n    const documents_filtered = []\n    documents.map(item => {\n          let date_check = moment(item.notice_date, dateFormatown)          \n          item.month = moment(item.notice_date).format('YYYY/MM')\n          if (selectedEntities.includes(item.entity_name) && \n             date_check.isAfter(startDate) &&\n             date_check.isBefore(endDate)\n          ) {\n            documents_filtered.push(item)\n          }\n    })\n    \n    const filtered_data = group_month(documents_filtered)\n\n   \n\n\n    const entitieschildren = []\n    entities.map(entity =>{\n        entitieschildren.push(<Option key={entity}>{entity}</Option>)\n    })\n\n\n    \n\n\n    const radioStyle = {\n        display: 'block',\n        height: '30px',\n        lineHeight: '30px',\n      };\n\n\n      const onviewChange = (value) => {\n          console.log(value)\n          setRadiostate(value.target.value)\n      }\n\n\n        let selectedView;\n        if (radiostate === \"time\") {\n            selectedView = <LineChart data = {filtered_data} variable = {variable}/>\n        } else if (radiostate == \"states\") {\n            selectedView = <StateLevel documents = {documents_filtered} variable = {variable}  />\n        } else {\n            selectedView = <BarEntities documents = {documents_filtered} variable = {variable}  />\n        }\n\n\n    \n    return (\n        <AppLayout>\n            <div style ={{padding: '20px'}}>\n             <div>\n             <Title level={4}>\n                View\n            </Title>\n\n            <Radio.Group onChange={onviewChange} value={radiostate}>\n        <Radio style={radioStyle} value={\"time\"}>\n          Time\n        </Radio>\n        <Radio style={radioStyle} value={\"states\"}>\n          States\n        </Radio>\n        <Radio style={radioStyle} value={\"entities\"}>\n          Entities \n        </Radio>\n     \n      </Radio.Group>\n\n \n\n\n        \n\n                 </div>   \n            <Title level={4}>\n                Selection criteria\n            </Title>\n            <p>\n            Variable:\n            </p>\n            <Select\n             style={{ width: 300 }}\n             defaultValue={variable}\n             onChange ={event => setVariable(event)}\n             >\n                <Option value=\"dollar\">Dollar value </Option>\n                <Option value=\"notices\">Number of notices</Option>\n            </Select>\n            \n        \n            <div style = {{paddingTop: '1em'}}>\n            <Row gutter = {10}>\n                <Col>\n                <p>\n                Starting date\n                </p>\n                <MonthPicker \n            defaultValue={startStr}\n            onChange={handlestartChange}\n            />\n                </Col>\n            <Col>\n            <p>\n                Ending date:\n                </p>\n            <MonthPicker \n            style = {{float:'right'}}\n            defaultValue={endDate}\n            onChange={handleendChange}\n            />\n            </Col>\n    \n            </Row>\n            </div>\n\n            <div style = {{paddingTop: '50px'}}>\n                <Button type = \"primary\">\n                <FileExcelOutlined />\n                    Export to Excel\n                </Button>\n                <Button style = {{marginTop: '20px'}} type = \"primary\">\n                <FilePptOutlined />\n                    Export to PowerPoint\n                </Button>\n            </div>\n    \n        </div>\n\n        <div style ={{padding: '20px', \n                  marginLeft: '20px'}}>\n                      {selectedView}\n            \n        </div>                \n        </AppLayout>\n\n\n        )\n    \n}\n\n\nexport default Dashboard;","import {Auth} from 'aws-amplify';\n\nconst signOut = () => {\n    Auth.signOut()\n        .catch(err => console.log('error signing out: ', err))\n}\n\n\nexport { signOut }","import React, {useState, useContext} from 'react';\nimport { Modal, Button, Input, Rate, notification, Typography } from 'antd';\nimport { AppContext } from './Context';\nconst { Title, Paragraph, Text } = Typography;\nconst { TextArea } = Input;\n\nconst Feedback = () => {\n    const contextData = useContext(AppContext)\n    const auth = contextData['auth'];\n    let message = \"Hi \" + auth.username + \"!\" \n\n    const [feedbackvisible, setFeedbackvisible] = useState(false)\n    \n\n    const showFeedback = () => {\n        setFeedbackvisible(true)\n    }\n\n    const hideFeedback = () => {\n        setFeedbackvisible(false)\n    }\n\n    const submitFeedback = () => {\n            setFeedbackvisible(false)\n        \n        notification.open({\n                message: 'Thank you for thinking with us!',\n                description: 'We highly appreciate your feedback. We aim to respond to your comments or questions within a few business days.',\n                duration: 10\n              });\n        }\n\n\n\n    return <>\n    <Button type=\"primary\" onClick={showFeedback}>\n          Talk to us!\n    </Button>\n\n    <Modal\n          title= {message}\n          visible={feedbackvisible}\n          onOk={submitFeedback}\n          onCancel={hideFeedback}\n        >\n            Ask us anything, or share your feedback.\n            <Input placeholder=\"Topic\" />\n\n\n            <Rate />\n\n            <TextArea    \n                placeholder=\"PLACEHOLDER\"\n                autoSize={{ minRows: 3, maxRows: 5 }}\n        />\n    </Modal>\n\n\n\n    </>\n}\n\n\nexport default Feedback;","import React, { useState } from 'react'\nimport {Auth} from 'aws-amplify';\n\n\nimport { Button, Descriptions, Divider, List, Drawer, Form, Input, Select , Typography, notification} from 'antd';\n\nconst { Option } = Select;\nconst DrawerComponent = (drawervisibility, setDrawervisibility) => {\n    const [form] = Form.useForm();\n    const [verificationform] = Form.useForm();\n\n    const [confirmcodeVisibility, setConfirmcodeVisibility] = useState(false)\n    const [newuser, setNewuser] = useState('user')\n    \n    const closeDrawer = () => {\n        setDrawervisibility(false)\n    };\n\n    const confirmNotification = (email) => {\n\n      notification.open({\n        message: 'Sent confirmation',\n        description:\n          'An invitation as well as a verification code has been sent to' + email \n      });\n\n\n\n    }\n\n    const submitCredentials = (values) => {\n        setConfirmcodeVisibility(true)\n        console.log('values:', values);\n        let username = values.name\n        setNewuser(username)\n        let password = values.password\n        let email  = values.email\n        let customer = values.customer\n        let access_level = values.access_level\n        Auth.signUp({\n            username,\n            password,\n            attributes: {\n                'email': email,          // optional\n                'custom:customer': customer,\n                 'custom:access_level': access_level  // optional - E.164 number convention\n                // other custom attributes \n            },\n            validationData: []  //optional\n            })\n            .then(data => {\n              console.log(data)\n              confirmNotification(values.email)\n            })\n            .catch(err => console.log(err));\n\n      }\n\n\n    const verifyUser = (values) => {\n        console.log(values)\n        let code = values.code\n        let username = newuser\n        Auth.confirmSignUp(username, code, {\n            // Optional. Force user confirmation irrespective of existing alias. By default set to True.\n            forceAliasCreation: true    \n          }).then(data => console.log(data))\n          .catch(err => console.log(err));\n        \n\n    }\n    return <>\n     \n     <Drawer\n        title=\"Create a new account\"\n        width={360}\n         visible={drawervisibility}\n         onClose={closeDrawer}\n         bodyStyle={{ paddingBottom: 80, border: \"1px solid rgb(230,230,230)\" }}\n         footer={\n           <div\n             style={{\n               textAlign: 'right',\n             }}\n           >\n           </div>\n         }\n        >\n\n        <Form \n            layout=\"vertical\"\n            form = {form} \n            onFinish={submitCredentials}\n            hideRequiredMark>\n                <Form.Item\n                  name=\"name\"\n                  label=\"Name\"\n                  rules={[{ required: true, message: 'Please enter user name' }]}\n                >\n                  <Input placeholder=\"Please enter user name\" />\n                </Form.Item>\n                <Form.Item\n                  name=\"email\"\n                  label=\"Email\"\n                  rules={[{ required: true, message: 'Please enter your email' }]}\n                >\n                  <Input placeholder=\"Please enter email address\" />\n                </Form.Item>\n                \n                <Form.Item\n                  name=\"password\"\n                  label=\"Temporary password\"\n                  rules={[{ required: true, message: 'Please select a temporary password' }]}\n                >\n             <Input.Password placeholder=\"Please select temporary password\" />\n                </Form.Item>     \n                <Form.Item\n                  name=\"access_level\"\n                  label=\"Access level\"\n                  rules={[{ required: true, message: 'Please indicate access rights' }]}\n                >\n                  <Select placeholder=\"Indicate access rights\">\n                    <Option value=\"admin\">Administrator access</Option>\n                    <Option value=\"full\">Full access</Option>\n                    <Option value=\"third-party\">Customized access</Option>\n                  </Select>\n                </Form.Item>     \n\n                <Form.Item\n                  name=\"customer\"\n                  label=\"Customer\"\n                  rules={[{ required: true, message: 'Please the name of your organization' }]}\n                >\n                  <Input placeholder=\"Please the name of your organization\" />\n                </Form.Item>\n           \n              <Button type=\"primary\" htmlType=\"submit\">\n                Add user\n              </Button>\n          </Form>\n\n       \n\n       \n              \n          \n          \n          \n   \n        </Drawer>\n    </>\n}\n\nexport default DrawerComponent","import React, {useContext, useState} from 'react';\nimport { AppContext } from '../Context';\nimport { Button, Descriptions, Divider, List, Drawer, Form, Input, Select, Typography} from 'antd';\nimport { PlusOutlined, LogoutOutlined } from '@ant-design/icons';\nconst { Title } = Typography;\n\n\n\n\n\n\n\nconst EntityManagement = () => {\n  const data = useContext(AppContext)\n  const entity_list = data['entities_list']\n\n  console.log(entity_list)\n\n  const entities = []\n  entity_list.map(item => {\n    entities.push({title: item})\n  })\n\n  \n  \n\n\n    const [orgs, setOrgs] = useState(entities)\n    const [visible, setvisible] = useState(false)\n\n\n    const [formorg] = Form.useForm();\n\n    const onFinish = values => {\n        console.log('values:', values);\n        setOrgs(orgs => [...orgs, {'title': values.entity}])\n        setvisible(false)\n      };\n      \n    \n    const entityform =     <Form\n                                style = {{marginTop: '20px'}}\n                                form = {formorg}\n                                name = \"adduser\"\n                                onFinish={onFinish}\n                                hideRequiredMark>\n                            <Form.Item\n                                name=\"entity\"\n                                label=\"Entity\"\n                                rules={[{ required: true, message: 'Please enter entity name' }]}>\n                            <Input />\n                                </Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Submit\n                            </Button>\n                            </Form> \n\nreturn <>\n\n<div style ={{padding: '20px', \n                  backgroundColor: 'white', \n                  border: \"1px solid rgb(230,230,230)\", \n                  marginTop: '20px'}}>\n    <Title level = {4}>  List of managed entitities </Title>\n <List\n    itemLayout=\"horizontal\"\n    dataSource={orgs}\n    renderItem={item => (\n      <List.Item\n          actions={[<a key=\"list-loadmore-edit\">edit</a>, <a key=\"list-loadmore-more\">delete</a>]}\n\n        >\n        <List.Item.Meta\n          title={item.title}\n        />\n      </List.Item>\n    )}\n    \n  />      \n    <Button onClick={() => setvisible(true)} type =\"primary\">\n        <PlusOutlined/> New entity\n    </Button>\n\n    {visible === false ? null : entityform}\n\n\n    </div>\n        </>\n\n}\n\n\nexport default EntityManagement;\n","import React from 'react';\n\nimport { Button, Descriptions, Divider, \n    List, Drawer, Form, Input, Select, Typography,\n    Checkbox, notification\n} from 'antd';\n\nimport { SyncOutlined } from '@ant-design/icons';\n\nconst { Title } = Typography;\n\nconst allDataElements = [\"State\", \"Entity name\", \"FEIN\", \"Notice category\", \"Notice Type\",  \"Amount USD\", \"Notice Date\"]\nconst selectedDataElements = [\"State\", \"Entity name\", \"Notice category\", \"Amount USD\", \"Notice Date\"]\n\n\nconst DataElementsManagement = () => {\n    const [elementsForm] = Form.useForm();\n    const dataelements_fieldlist = [];\n    allDataElements.map(item => {\n        if (selectedDataElements.includes(item)) {\n        const formitem = <Form.Item>\n                        <Checkbox defaultChecked = \"true\">\n                            {item}</Checkbox>\n                    </Form.Item>\n        dataelements_fieldlist.push(formitem)\n\n        } else {\n        let formitem = <Form.Item >\n                         <Checkbox>{item}</Checkbox>\n                   </Form.Item>\n        dataelements_fieldlist.push(formitem)\n            \n        }\n    })\n\n    const openNotification = () => {\n        notification.open({\n          message: 'Data elements have been updated',\n          description:\n            'Please refresh your browser for the results to be propagated.',\n          onClick: () => {\n            console.log('Notification Clicked!');\n          },\n        });\n      };\n\n\n\n    return (\n        <div id = \"dataelementslist\"\n            style ={{padding: '20px', \n                  backgroundColor: 'white', \n                  border: \"1px solid rgb(230,230,230)\", \n                  marginTop: '20px'}}\n                  >\n\n        <Title level = {4}>  Selected data elements </Title>\n\n\n        <Form\n            layout=\"vertical\"\n            form = {elementsForm} \n            onFinish={openNotification}\n            hideRequiredMark>\n                {\n                    dataelements_fieldlist.map(field => {\n                        return (\n\n                            field\n                             \n                        )\n                    })\n                }\n            <Button type = \"primary\" htmlType=\"submit\">\n            <SyncOutlined /> Update\n              </Button>\n\n        </Form>\n    \n        </div>\n    )\n    \n}\n\nexport default DataElementsManagement;","import React, {useContext, useState} from 'react';\nimport { AppContext } from '../Context';\nimport { Button, Table, Typography} from 'antd';\nimport { PlusOutlined, LogoutOutlined } from '@ant-design/icons';\nconst { Title } = Typography;\n\n\n\n\nconst columns = [\n    {\n      title: 'Username',\n      dataIndex: 'username',\n      key: 'username',\n    },\n    {\n      title: 'Email',\n      dataIndex: 'email',\n      key: 'email',\n    },\n    {\n      title: 'Access level',\n      dataIndex: 'access_level',\n      key: 'access_level',\n    },\n    {\n    title: 'Action',\n    key: 'action',\n    render: (text, record) => (\n      <span>\n        <a style={{ marginRight: 16 }}>Change {record.username}</a>\n        <a>Delete</a>\n      </span>\n    ),\n  },\n\n  ];\n\n\nconst UserList = () => {\n  const data = useContext(AppContext)\n  const user_list = data['user_list']\n  console.log(user_list)\n\nreturn <>\n   <div id = \"dataelementslist\"\n            style ={{padding: '20px', \n                  backgroundColor: 'white', \n                  border: \"1px solid rgb(230,230,230)\", \n                  marginTop: '20px'}}\n                  >\n\n        <Title level = {4}>  List of users </Title>\n\n        <Table dataSource={user_list} columns={columns} />\n\n        </div>\n        </>\n\n}\n\n\nexport default UserList;\n","import React, {useState, useContext} from 'react';\nimport {Auth} from 'aws-amplify';\nimport { AppContext } from '../Context';\nimport { Button, Descriptions, Divider, \n    List, Drawer, Form, Input, Select, Typography,\n    Checkbox, notification\n} from 'antd';\nimport { PlusOutlined, LogoutOutlined, UserAddOutlined } from '@ant-design/icons';\n\nimport { signOut } from './AdminUtils'\nimport  Feedback from '../Feedback'\nimport DrawerComponent  from './DrawerComponent'\nimport EntityManagement from './EntityManagement'\nimport DataElementsManagement from './DataElementsManagement'\nimport Userlist from './UserList'\nconst { Title } = Typography;\n\nconst allDataElements = [\"State\", \"Entity name\", \"Notice type\", \"Amount due\", \"Notice Date\", \"Some other\"]\nconst selectedDataElements = [\"State\", \"Entity name\", \"Notice type\", \"Amount due\", \"Notice Date\"]\n\n\n\nconst Admin = () => {\n    const data = useContext(AppContext)\n    const authData = data['auth']\n    \n\n    const [user, setUser] = useState(null)\n    const [drawervisibility, setDrawervisibility] = useState(false)\n    \n            \n\n\n    const showDrawer = () => {\n        setDrawervisibility(true)\n      };\n  \n\n    const onChangeElements = (values) => {\n        console.log(values)\n    }\n\n\n\n \n    return <>\n    <div className = \"feedback\" style = {{float: 'left', marginLeft: '100px', paddingTop : '20px'}}>\n    <Feedback />\n    </div>\n    <div className = \"signoutbutton\" style = {{paddingTop : '20px'}}>\n            <Button onClick={signOut} style = {{float: 'right', marginRight: '100px'}} type  =\"primary\"> <LogoutOutlined /> Sign out</Button>\n    </div>\n    <div className = \"container\" style = {{marginLeft: '100px', marginRight: '100px'}}>\n           \n      \n     \n        <div id = \"userinfo\"\n            style ={{padding: '20px', \n                  backgroundColor: 'white', \n                  border: \"1px solid rgb(230,230,230)\", \n                  marginTop: '60px'}}\n                  >\n\n     \n\n        <Title level = {4}>  User information </Title>\n    <Descriptions style = {{marginTop: '20px'}}\n                bordered\n                >\n        <Descriptions.Item label=\"Username\">{authData.username}</Descriptions.Item>\n        <Descriptions.Item label=\"Organization\">{authData.customer}</Descriptions.Item>\n    </Descriptions>\n\n        </div>\n\n        <Button type=\"primary\" onClick={showDrawer} style = {{marginTop: '20px'}}>\n        <UserAddOutlined /> New user\n        </Button>\n\n\n\n   \n    \n        <Userlist/>\n        <DataElementsManagement />\n        <EntityManagement />\n\n\n        {DrawerComponent(drawervisibility, setDrawervisibility)}\n\n    \n      </div>\n\n      </>\n\n}\n\n\nexport default Admin;","import React from 'react';\nimport { withAuthenticator } from 'aws-amplify-react';\nimport Amplify, { Auth } from 'aws-amplify';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport awsconfig from './aws-exports';\n\nimport { Layout} from 'antd';\nimport 'antd/dist/antd.css';\n\n\n\nimport FullHeader from './Components/Header/Header';\nimport Home from './Components/Home/Home'\nimport Upload from './Components/Upload/Upload';\nimport Backlog from './Components/Backlog/Backlog';\nimport Confirmation from './Components/Confirmation/Confirmation'\nimport NoticeManagement from './Components/NoticeManagement/NoticeManagement';\n\nimport Document from \"./Components/NoticeManagement/Document\";\n\nimport Dashboard from './Components/DashboardB/Dashboard'\n\nimport Admin from './Components/Admin/Admin';\n\nimport { AppProvider } from './Components/Context'\n\nconst { Content } = Layout;\n\nAmplify.configure({\n  API: {\n      endpoints: [\n          {\n              name: \"stream\",\n              endpoint: \"https://oinzv0e099.execute-api.eu-west-1.amazonaws.com/api/\",         \n              custom_header: async () => {\n                 return { Authorization: (await Auth.currentSession()).idToken.jwtToken }\n              }\n            }\n            ]}\n          });\n\n          Amplify.configure(awsconfig);\n\n          const App = () => {  \n          \n            return (\n            \n              <Router>\n              <Layout className=\"layout\">\n              <FullHeader/> \n              <AppProvider>\n              <Content style={{ paddingLeft: '50px', paddingRight: '50px', marginBottom: '200px'}}>                \n                <Route exact path='/'           component={Home} />\n                <Route exact path='/upload'           component={Upload} />\n                <Route exact path='/backlog'          component={Backlog} />\n                <Route exact path='/confirmation'     component={Confirmation} />\n                <Route exact path='/management'       component={NoticeManagement} />\n                <Route path=\"/document\"         component ={Document} />\n                <Route exact path=\"/dashboard\"        component ={Dashboard} />\n                <Route exact path='/admin'            component={Admin} />\n              </Content>\n              </AppProvider>\n              \n              \n              </Layout>\n            </Router>\n              \n            )\n          \n          }\n          \n  export default withAuthenticator(App);\n          \n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo_stream.0302d411.png\";","module.exports = __webpack_public_path__ + \"static/media/flowchart.d947bc4e.svg\";","module.exports = __webpack_public_path__ + \"static/media/problem.bbe9d589.svg\";","module.exports = __webpack_public_path__ + \"static/media/solution.e7d1dffb.svg\";"],"sourceRoot":""}